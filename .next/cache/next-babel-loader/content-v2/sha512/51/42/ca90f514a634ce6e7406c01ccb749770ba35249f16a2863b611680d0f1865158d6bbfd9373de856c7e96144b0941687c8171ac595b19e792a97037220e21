{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/colechalland/Projects/ChalkCoin/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/Users/colechalland/Projects/ChalkCoin/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"/Users/colechalland/Projects/ChalkCoin/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/ChalkCoin/contexts/Blockchain.Context.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport blockchainReducer from \"../reducers/Blockchain.Reducer\";\nimport { EventsFinder } from \"../helpers/EventsHelper\";\n\nDate.prototype.yyyymmdd = function () {\n  var mm = this.getMonth() + 1; // getMonth() is zero-based\n\n  var dd = this.getDate();\n  return [this.getFullYear(), (mm > 9 ? \"\" : \"0\") + mm, (dd > 9 ? \"\" : \"0\") + dd].join(\"\");\n};\n\nexport var BlockchainContext = /*#__PURE__*/createContext();\nexport var BlockchainDispatch = /*#__PURE__*/createContext();\nexport function BlockchainProvider(props) {\n  _s();\n\n  var _useReducer = useReducer(blockchainReducer, {\n    chain: [],\n    pendingTransactions: [],\n    currentNodeUrl: \"\",\n    networkNodes: [],\n    initialized: false,\n    selectedBlock: []\n  }),\n      blockchain = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    function getBlockchainData() {\n      return _getBlockchainData.apply(this, arguments);\n    }\n\n    function _getBlockchainData() {\n      _getBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var getNode1, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                getNode1 = \"http://192.168.4.27:3001/blockchain\";\n                _context.next = 4;\n                return axios.get(getNode1);\n\n              case 4:\n                res = _context.sent;\n                _context.t0 = dispatch;\n                _context.t1 = _objectSpread;\n                _context.t2 = _objectSpread({}, res.data);\n                _context.t3 = {};\n                _context.next = 11;\n                return EventsFinder(res.data.pendingTransactions, \"blockchain\");\n\n              case 11:\n                _context.t4 = _context.sent;\n                _context.t5 = _objectSpread;\n                _context.t6 = _objectSpread({}, res.data.chain[res.data.chain.length - 1]);\n                _context.t7 = {};\n                _context.next = 17;\n                return EventsFinder(res.data.chain[res.data.chain.length - 1].transactions, \"blockchain\");\n\n              case 17:\n                _context.t8 = _context.sent;\n                _context.t9 = {\n                  transactions: _context.t8\n                };\n                _context.t10 = (0, _context.t5)(_context.t6, _context.t7, _context.t9);\n                _context.t11 = {\n                  pendingTransactions: _context.t4,\n                  initialized: true,\n                  selectedBlock: _context.t10\n                };\n                _context.t12 = (0, _context.t1)(_context.t2, _context.t3, _context.t11);\n                _context.t13 = {\n                  type: \"INIT\",\n                  data: _context.t12\n                };\n                (0, _context.t0)(_context.t13);\n                _context.next = 29;\n                break;\n\n              case 26:\n                _context.prev = 26;\n                _context.t14 = _context[\"catch\"](0);\n                console.log(_context.t14.message);\n\n              case 29:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 26]]);\n      }));\n      return _getBlockchainData.apply(this, arguments);\n    }\n\n    getBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BlockchainContext.Provider, {\n    value: blockchain,\n    children: /*#__PURE__*/_jsxDEV(BlockchainDispatch.Provider, {\n      value: dispatch,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BlockchainProvider, \"52fxMBnM2HVv6yBLLDvh5EumN/M=\");\n\n_c = BlockchainProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockchainProvider\");","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/contexts/Blockchain.Context.js"],"names":["createContext","useReducer","useEffect","axios","blockchainReducer","EventsFinder","Date","prototype","yyyymmdd","mm","getMonth","dd","getDate","getFullYear","join","BlockchainContext","BlockchainDispatch","BlockchainProvider","props","chain","pendingTransactions","currentNodeUrl","networkNodes","initialized","selectedBlock","blockchain","dispatch","getBlockchainData","getNode1","get","res","data","length","transactions","type","console","log","message","children"],"mappings":"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","sourcesContent":["import { createContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport blockchainReducer from \"../reducers/Blockchain.Reducer\";\nimport { EventsFinder } from \"../helpers/EventsHelper\";\n\nDate.prototype.yyyymmdd = function () {\n\tvar mm = this.getMonth() + 1; // getMonth() is zero-based\n\tvar dd = this.getDate();\n\treturn [this.getFullYear(), (mm > 9 ? \"\" : \"0\") + mm, (dd > 9 ? \"\" : \"0\") + dd].join(\"\");\n};\n\nexport const BlockchainContext = createContext();\nexport const BlockchainDispatch = createContext();\nexport function BlockchainProvider(props) {\n\tconst [blockchain, dispatch] = useReducer(blockchainReducer, {\n\t\tchain: [],\n\t\tpendingTransactions: [],\n\t\tcurrentNodeUrl: \"\",\n\t\tnetworkNodes: [],\n\t\tinitialized: false,\n\t\tselectedBlock: [],\n\t});\n\n\tuseEffect(() => {\n\t\tasync function getBlockchainData() {\n\t\t\ttry {\n\t\t\t\tconst getNode1 = `http://192.168.4.27:3001/blockchain`;\n\t\t\t\tconst res = await axios.get(getNode1);\n\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"INIT\",\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...res.data,\n\t\t\t\t\t\tpendingTransactions: await EventsFinder(res.data.pendingTransactions, \"blockchain\"),\n\t\t\t\t\t\tinitialized: true,\n\t\t\t\t\t\tselectedBlock: {\n\t\t\t\t\t\t\t...res.data.chain[res.data.chain.length - 1],\n\t\t\t\t\t\t\ttransactions: await EventsFinder(\n\t\t\t\t\t\t\t\tres.data.chain[res.data.chain.length - 1].transactions,\n\t\t\t\t\t\t\t\t\"blockchain\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err.message);\n\t\t\t}\n\t\t}\n\t\tgetBlockchainData();\n\t}, []);\n\n\treturn (\n\t\t<BlockchainContext.Provider value={blockchain}>\n\t\t\t<BlockchainDispatch.Provider value={dispatch}>{props.children}</BlockchainDispatch.Provider>\n\t\t</BlockchainContext.Provider>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}