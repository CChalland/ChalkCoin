{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js\";\nimport React, { useState, useContext } from \"react\";\nimport { Container, Col, Row, Image, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport { GameScoreHelper, GamePlayHelper, GameLeadersHelper } from \"../helpers/SportCard\";\nimport prisma from \"../contexts/prisma\";\nimport axios from \"axios\";\n\nconst fetchData = async () => await axios.get(`https://api.the-odds-api.com/v4/sports?apiKey=${process.env.ODDS_API_KEY}`).then(res => ({\n  error: false,\n  odds: res.data\n})).catch(() => ({\n  error: true,\n  odds: null\n}));\n\nfunction Test(props) {\n  var _sportData$data;\n\n  const {\n    sportsData\n  } = useContext(SportContext);\n  let sportName = \"NFL\";\n  let sportData = sportsData.filter(sport => {\n    return sport.abbrv === sportName;\n  });\n  let gameData, gameScoreData;\n\n  if ((_sportData$data = sportData.data) !== null && _sportData$data !== void 0 && _sportData$data.events) {\n    var _sportData$0$data;\n\n    gameData = (_sportData$0$data = sportData[0].data) === null || _sportData$0$data === void 0 ? void 0 : _sportData$0$data.events[0];\n    gameScoreData = GameScoreHelper(gameData, sportName);\n  }\n\n  console.log(props.odds);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn-outline\",\n          variant: \"default\",\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            width: 30,\n            src: \"../static/media/sports-icons/2.png\",\n            rounded: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Test;\nexport async function getServerSideProps(context) {\n  // const odds = await fetchData();\n  let users = await prisma.user.findMany();\n  users = users.map(user => {\n    delete user.emailVerified;\n    delete user.createdAt;\n    delete user.updatedAt;\n    return user;\n  });\n  return {\n    props: {\n      users\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js"],"names":["React","useState","useContext","Container","Col","Row","Image","Button","Modal","Carousel","Tab","Nav","Card","SportContext","GameScoreHelper","GamePlayHelper","GameLeadersHelper","prisma","axios","fetchData","get","process","env","ODDS_API_KEY","then","res","error","odds","data","catch","Test","props","sportsData","sportName","sportData","filter","sport","abbrv","gameData","gameScoreData","events","console","log","getServerSideProps","context","users","user","findMany","map","emailVerified","createdAt","updatedAt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,KAA7C,EAAoDC,QAApD,EAA8DC,GAA9D,EAAmEC,GAAnE,EAAwEC,IAAxE,QAAoF,iBAApF;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,QAAmE,sBAAnE;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,YACjB,MAAMD,KAAK,CACTE,GADI,CACC,iDAAgDC,OAAO,CAACC,GAAR,CAAYC,YAAa,EAD1E,EAEJC,IAFI,CAEEC,GAAD,KAAU;AACfC,EAAAA,KAAK,EAAE,KADQ;AAEfC,EAAAA,IAAI,EAAEF,GAAG,CAACG;AAFK,CAAV,CAFD,EAMJC,KANI,CAME,OAAO;AACbH,EAAAA,KAAK,EAAE,IADM;AAEbC,EAAAA,IAAI,EAAE;AAFO,CAAP,CANF,CADP;;AAYA,SAASG,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAiB9B,UAAU,CAACW,YAAD,CAAjC;AACA,MAAIoB,SAAS,GAAG,KAAhB;AACA,MAAIC,SAAS,GAAGF,UAAU,CAACG,MAAX,CAAmBC,KAAD,IAAW;AAC5C,WAAOA,KAAK,CAACC,KAAN,KAAgBJ,SAAvB;AACA,GAFe,CAAhB;AAIA,MAAIK,QAAJ,EAAcC,aAAd;;AACA,yBAAIL,SAAS,CAACN,IAAd,4CAAI,gBAAgBY,MAApB,EAA4B;AAAA;;AAC3BF,IAAAA,QAAQ,wBAAGJ,SAAS,CAAC,CAAD,CAAT,CAAaN,IAAhB,sDAAG,kBAAmBY,MAAnB,CAA0B,CAA1B,CAAX;AACAD,IAAAA,aAAa,GAAGzB,eAAe,CAACwB,QAAD,EAAWL,SAAX,CAA/B;AACA;;AAEDQ,EAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACJ,IAAlB;AAEA,sBACC,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACC,QAAC,GAAD;AAAA,6BACC,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACC,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,aAAlB;AAAgC,UAAA,OAAO,EAAC,SAAxC;AAAA,iCACC,QAAC,KAAD;AAAO,YAAA,KAAK,EAAE,EAAd;AAAkB,YAAA,GAAG,EAAE,oCAAvB;AAA6D,YAAA,OAAO;AAApE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;AAED,eAAeG,IAAf;AAEA,OAAO,eAAea,kBAAf,CAAkCC,OAAlC,EAA2C;AACjD;AACA,MAAIC,KAAK,GAAG,MAAM5B,MAAM,CAAC6B,IAAP,CAAYC,QAAZ,EAAlB;AACAF,EAAAA,KAAK,GAAGA,KAAK,CAACG,GAAN,CAAWF,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACG,aAAZ;AACA,WAAOH,IAAI,CAACI,SAAZ;AACA,WAAOJ,IAAI,CAACK,SAAZ;AAEA,WAAOL,IAAP;AACA,GANO,CAAR;AAQA,SAAO;AACNf,IAAAA,KAAK,EAAE;AAAEc,MAAAA;AAAF;AADD,GAAP;AAGA","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { Container, Col, Row, Image, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport { GameScoreHelper, GamePlayHelper, GameLeadersHelper } from \"../helpers/SportCard\";\nimport prisma from \"../contexts/prisma\";\nimport axios from \"axios\";\n\nconst fetchData = async () =>\n\tawait axios\n\t\t.get(`https://api.the-odds-api.com/v4/sports?apiKey=${process.env.ODDS_API_KEY}`)\n\t\t.then((res) => ({\n\t\t\terror: false,\n\t\t\todds: res.data,\n\t\t}))\n\t\t.catch(() => ({\n\t\t\terror: true,\n\t\t\todds: null,\n\t\t}));\n\nfunction Test(props) {\n\tconst { sportsData } = useContext(SportContext);\n\tlet sportName = \"NFL\";\n\tlet sportData = sportsData.filter((sport) => {\n\t\treturn sport.abbrv === sportName;\n\t});\n\n\tlet gameData, gameScoreData;\n\tif (sportData.data?.events) {\n\t\tgameData = sportData[0].data?.events[0];\n\t\tgameScoreData = GameScoreHelper(gameData, sportName);\n\t}\n\n\tconsole.log(props.odds);\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col xs={4}>\n\t\t\t\t\t<Button className=\"btn-outline\" variant=\"default\">\n\t\t\t\t\t\t<Image width={30} src={\"../static/media/sports-icons/2.png\"} rounded />\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nexport default Test;\n\nexport async function getServerSideProps(context) {\n\t// const odds = await fetchData();\n\tlet users = await prisma.user.findMany();\n\tusers = users.map((user) => {\n\t\tdelete user.emailVerified;\n\t\tdelete user.createdAt;\n\t\tdelete user.updatedAt;\n\n\t\treturn user;\n\t});\n\n\treturn {\n\t\tprops: { users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}