{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/contexts/Sports.Context.js\";\nimport React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport sportsReducer from \"../reducers/Sports.Reducer\";\nexport const SportContext = /*#__PURE__*/createContext();\nexport const SportDispatch = /*#__PURE__*/createContext();\nexport function SportProvider(props) {\n  let initialSportsData = [// { id: 1, abbrv: \"NCAAF\", sport: \"football\", display_name: \"NCAA Football\", league_name: \"college-football\", data: {}, reload: false },\n  {\n    id: 2,\n    abbrv: \"NFL\",\n    sport: \"football\",\n    display_name: \"NFL\",\n    league_name: \"nfl\",\n    data: {},\n    reload: false\n  }, {\n    id: 3,\n    abbrv: \"MLB\",\n    sport: \"baseball\",\n    display_name: \"MLB\",\n    league_name: \"mlb\",\n    data: {},\n    reload: false\n  }, {\n    id: 4,\n    abbrv: \"NBA\",\n    sport: \"basketball\",\n    display_name: \"NBA\",\n    league_name: \"nba\",\n    data: {},\n    reload: false\n  }, {\n    id: 5,\n    abbrv: \"NCAAM\",\n    sport: \"basketball\",\n    display_name: \"NCAA Men's Basketball\",\n    league_name: \"mens-college-basketball\",\n    data: {},\n    reload: false\n  }, {\n    id: 6,\n    abbrv: \"NHL\",\n    sport: \"hockey\",\n    display_name: \"NHL\",\n    league_name: \"nhl\",\n    data: {},\n    reload: false\n  }, {\n    id: 8,\n    abbrv: \"WNBA\",\n    sport: \"basketball\",\n    display_name: \"WNBA\",\n    league_name: \"wnba\",\n    data: {},\n    reload: false\n  } // { id: 10, abbrv: \"MLS\", sport: \"soccer\", display_name: \"MLS\", league_name: \"MLS\", data: {}, reload: false },\n  ]; // const [sportsData, setSportsData] = useState(initialSportsData);\n\n  const {\n    0: sportsData,\n    1: dispatch\n  } = useReducer(sportsReducer, initialSportsData);\n  const {\n    0: blockchain,\n    1: setBlockchain\n  } = useState({});\n  const {\n    0: fetchedSportData,\n    1: setFetchedSportData\n  } = useState(false);\n  useEffect(() => {\n    async function getSportsData() {\n      let removeSportsData = [];\n      let sportData = sportsData;\n      const getNode1 = `http://localhost:3001/blockchain`;\n      let response = await axios.get(getNode1);\n      const blockchainData = response.data;\n\n      try {\n        sportData = await Promise.all(sportData.map(async league => {\n          let leagueData, sortedGames, reloadData;\n          await axios({\n            method: \"GET\",\n            url: `http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard`\n          }).then(function (response) {\n            if (response.data.events.length === 0) {\n              removeSportsData.push(league);\n            } else {\n              leagueData = response.data;\n              sortedGames = response.data.events.filter(game => {\n                reloadData = true;\n                return game.status.type.state === \"in\";\n              });\n              sortedGames.push(response.data.events.filter(game => {\n                if (sortedGames.length === 0) reloadData = false;\n                return game.status.type.state === \"post\";\n              }));\n              sortedGames.push(response.data.events.filter(game => {\n                return game.status.type.state === \"pre\";\n              }));\n              leagueData.events = sortedGames.flat();\n            }\n          }.bind(this));\n          return {\n            id: league.id,\n            abbrv: league.abbrv,\n            sport: league.sport,\n            display_name: league.display_name,\n            league_name: league.league_name,\n            data: leagueData,\n            reload: reloadData\n          };\n        }));\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      dispatch({\n        type: \"ALL\",\n        data: sportData\n      }); // setFetchedSportData(true);\n      // setBlockchain(blockchainData);\n    }\n\n    getSportsData();\n  }, [fetchedSportData]);\n  return /*#__PURE__*/_jsxDEV(SportContext.Provider, {\n    value: {\n      sportsData,\n      blockchain,\n      fetchedSportData\n    },\n    children: /*#__PURE__*/_jsxDEV(SportDispatch.Provider, {\n      value: dispatch,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/contexts/Sports.Context.js"],"names":["React","createContext","useReducer","useEffect","useState","axios","sportsReducer","SportContext","SportDispatch","SportProvider","props","initialSportsData","id","abbrv","sport","display_name","league_name","data","reload","sportsData","dispatch","blockchain","setBlockchain","fetchedSportData","setFetchedSportData","getSportsData","removeSportsData","sportData","getNode1","response","get","blockchainData","Promise","all","map","league","leagueData","sortedGames","reloadData","method","url","then","events","length","push","filter","game","status","type","state","flat","bind","err","console","log","message","children"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport sportsReducer from \"../reducers/Sports.Reducer\";\n\nexport const SportContext = createContext();\nexport const SportDispatch = createContext();\n\nexport function SportProvider(props) {\n\tlet initialSportsData = [\n\t\t// { id: 1, abbrv: \"NCAAF\", sport: \"football\", display_name: \"NCAA Football\", league_name: \"college-football\", data: {}, reload: false },\n\t\t{\n\t\t\tid: 2,\n\t\t\tabbrv: \"NFL\",\n\t\t\tsport: \"football\",\n\t\t\tdisplay_name: \"NFL\",\n\t\t\tleague_name: \"nfl\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tabbrv: \"MLB\",\n\t\t\tsport: \"baseball\",\n\t\t\tdisplay_name: \"MLB\",\n\t\t\tleague_name: \"mlb\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tabbrv: \"NBA\",\n\t\t\tsport: \"basketball\",\n\t\t\tdisplay_name: \"NBA\",\n\t\t\tleague_name: \"nba\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tabbrv: \"NCAAM\",\n\t\t\tsport: \"basketball\",\n\t\t\tdisplay_name: \"NCAA Men's Basketball\",\n\t\t\tleague_name: \"mens-college-basketball\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tabbrv: \"NHL\",\n\t\t\tsport: \"hockey\",\n\t\t\tdisplay_name: \"NHL\",\n\t\t\tleague_name: \"nhl\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\tabbrv: \"WNBA\",\n\t\t\tsport: \"basketball\",\n\t\t\tdisplay_name: \"WNBA\",\n\t\t\tleague_name: \"wnba\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t// { id: 10, abbrv: \"MLS\", sport: \"soccer\", display_name: \"MLS\", league_name: \"MLS\", data: {}, reload: false },\n\t];\n\t// const [sportsData, setSportsData] = useState(initialSportsData);\n\tconst [sportsData, dispatch] = useReducer(sportsReducer, initialSportsData);\n\tconst [blockchain, setBlockchain] = useState({});\n\tconst [fetchedSportData, setFetchedSportData] = useState(false);\n\n\tuseEffect(() => {\n\t\tasync function getSportsData() {\n\t\t\tlet removeSportsData = [];\n\t\t\tlet sportData = sportsData;\n\n\t\t\tconst getNode1 = `http://localhost:3001/blockchain`;\n\t\t\tlet response = await axios.get(getNode1);\n\t\t\tconst blockchainData = response.data;\n\n\t\t\ttry {\n\t\t\t\tsportData = await Promise.all(\n\t\t\t\t\tsportData.map(async (league) => {\n\t\t\t\t\t\tlet leagueData, sortedGames, reloadData;\n\n\t\t\t\t\t\tawait axios({\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: `http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard`,\n\t\t\t\t\t\t}).then(\n\t\t\t\t\t\t\tfunction (response) {\n\t\t\t\t\t\t\t\tif (response.data.events.length === 0) {\n\t\t\t\t\t\t\t\t\tremoveSportsData.push(league);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tleagueData = response.data;\n\t\t\t\t\t\t\t\t\tsortedGames = response.data.events.filter((game) => {\n\t\t\t\t\t\t\t\t\t\treloadData = true;\n\t\t\t\t\t\t\t\t\t\treturn game.status.type.state === \"in\";\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsortedGames.push(\n\t\t\t\t\t\t\t\t\t\tresponse.data.events.filter((game) => {\n\t\t\t\t\t\t\t\t\t\t\tif (sortedGames.length === 0) reloadData = false;\n\t\t\t\t\t\t\t\t\t\t\treturn game.status.type.state === \"post\";\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tsortedGames.push(\n\t\t\t\t\t\t\t\t\t\tresponse.data.events.filter((game) => {\n\t\t\t\t\t\t\t\t\t\t\treturn game.status.type.state === \"pre\";\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tleagueData.events = sortedGames.flat();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: league.id,\n\t\t\t\t\t\t\tabbrv: league.abbrv,\n\t\t\t\t\t\t\tsport: league.sport,\n\t\t\t\t\t\t\tdisplay_name: league.display_name,\n\t\t\t\t\t\t\tleague_name: league.league_name,\n\t\t\t\t\t\t\tdata: leagueData,\n\t\t\t\t\t\t\treload: reloadData,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err.message);\n\t\t\t}\n\n\t\t\tdispatch({ type: \"ALL\", data: sportData });\n\t\t\t// setFetchedSportData(true);\n\t\t\t// setBlockchain(blockchainData);\n\t\t}\n\n\t\tgetSportsData();\n\t}, [fetchedSportData]);\n\n\treturn (\n\t\t<SportContext.Provider value={{ sportsData, blockchain, fetchedSportData }}>\n\t\t\t<SportDispatch.Provider value={dispatch}>{props.children}</SportDispatch.Provider>\n\t\t</SportContext.Provider>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}