{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport axios from \"axios\";\n\nfunction fetchBetsJSON() {\n  return _fetchBetsJSON.apply(this, arguments);\n}\n\nfunction _fetchBetsJSON() {\n  _fetchBetsJSON = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var res, bets;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"http://localhost:4000/api/bets\");\n\n          case 2:\n            res = _context2.sent;\n            _context2.next = 5;\n            return res.json();\n\n          case 5:\n            bets = _context2.sent;\n            return _context2.abrupt(\"return\", bets);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fetchBetsJSON.apply(this, arguments);\n}\n\nfunction Bets(props) {\n  _s();\n\n  var _useContext = useContext(SportContext),\n      sportsData = _useContext.sportsData;\n\n  var _useState = useState([]),\n      bets = _useState[0],\n      setBets = _useState[1];\n\n  var betsGames = bets.map(function (bet) {\n    var sport = sportsData.find(function (sport) {\n      return sport.display_name === bet.details.displayName;\n    });\n    var event = sport.data.events.find(function (event) {\n      return event.id === bet.details.id;\n    });\n    return event;\n  });\n  console.log(props);\n  console.log(\"api bets\", bets);\n  console.log(sportsData);\n  console.log(betsGames);\n  useEffect(function () {\n    var getData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fetchBetsJSON().then(function (bets) {\n                  setBets(bets);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"BETS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Bets, \"mV5BzzWSRisBsJ8dMXUXq8M1Ets=\");\n\n_c = Bets;\nexport var __N_SSP = true;\nexport default Bets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bets\");","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js"],"names":["React","useContext","useEffect","useState","Container","SportContext","axios","fetchBetsJSON","fetch","res","json","bets","Bets","props","sportsData","setBets","betsGames","map","bet","sport","find","display_name","details","displayName","event","data","events","id","console","log","getData","then"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;SAEeC,a;;;;;4EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBC,KAAK,CAAC,gCAAD,CADxB;;AAAA;AACOC,YAAAA,GADP;AAAA;AAAA,mBAEoBA,GAAG,CAACC,IAAJ,EAFpB;;AAAA;AAEOC,YAAAA,IAFP;AAAA,8CAGQA,IAHR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA,oBACGZ,UAAU,CAACI,YAAD,CADb;AAAA,MACZS,UADY,eACZA,UADY;;AAAA,kBAEIX,QAAQ,CAAC,EAAD,CAFZ;AAAA,MAEbQ,IAFa;AAAA,MAEPI,OAFO;;AAIpB,MAAMC,SAAS,GAAGL,IAAI,CAACM,GAAL,CAAS,UAACC,GAAD,EAAS;AACnC,QAAMC,KAAK,GAAGL,UAAU,CAACM,IAAX,CAAgB,UAACD,KAAD;AAAA,aAAWA,KAAK,CAACE,YAAN,KAAuBH,GAAG,CAACI,OAAJ,CAAYC,WAA9C;AAAA,KAAhB,CAAd;AACA,QAAMC,KAAK,GAAGL,KAAK,CAACM,IAAN,CAAWC,MAAX,CAAkBN,IAAlB,CAAuB,UAACI,KAAD;AAAA,aAAWA,KAAK,CAACG,EAAN,KAAaT,GAAG,CAACI,OAAJ,CAAYK,EAApC;AAAA,KAAvB,CAAd;AACA,WAAOH,KAAP;AACA,GAJiB,CAAlB;AAMAI,EAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBlB,IAAxB;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAYf,UAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,SAAZ;AAEAd,EAAAA,SAAS,CAAC,YAAM;AACf,QAAM4B,OAAO;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AACfvB,gBAAAA,aAAa,GAAGwB,IAAhB,CAAqB,UAACpB,IAAD,EAAU;AAC9BI,kBAAAA,OAAO,CAACJ,IAAD,CAAP;AACA,iBAFD;;AADe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAPmB,OAAO;AAAA;AAAA;AAAA,OAAb;;AAKAA,IAAAA,OAAO;AACP,GAPQ,EAON,EAPM,CAAT;AASA,sBACC,QAAC,SAAD;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;GA7BQlB,I;;KAAAA,I;;AA+BT,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport prisma from \"../contexts/prisma\";\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\n\nasync function fetchBetsJSON() {\n\tconst res = await fetch(\"http://localhost:4000/api/bets\");\n\tconst bets = await res.json();\n\treturn bets;\n}\n\nfunction Bets(props) {\n\tconst { sportsData } = useContext(SportContext);\n\tconst [bets, setBets] = useState([]);\n\n\tconst betsGames = bets.map((bet) => {\n\t\tconst sport = sportsData.find((sport) => sport.display_name === bet.details.displayName);\n\t\tconst event = sport.data.events.find((event) => event.id === bet.details.id);\n\t\treturn event;\n\t});\n\n\tconsole.log(props);\n\tconsole.log(\"api bets\", bets);\n\tconsole.log(sportsData);\n\tconsole.log(betsGames);\n\n\tuseEffect(() => {\n\t\tconst getData = async () => {\n\t\t\tfetchBetsJSON().then((bets) => {\n\t\t\t\tsetBets(bets);\n\t\t\t});\n\t\t};\n\t\tgetData();\n\t}, []);\n\n\treturn (\n\t\t<Container>\n\t\t\t<div>BETS</div>\n\t\t</Container>\n\t);\n}\n\nexport default Bets;\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\tlet currentUser = {};\n\tif (session) {\n\t\tcurrentUser = await prisma.user.findUnique({\n\t\t\twhere: {\n\t\t\t\tid: session.user.id,\n\t\t\t},\n\t\t});\n\t\tdelete currentUser.password;\n\t\tdelete currentUser.paypal;\n\t\tdelete currentUser.emailVerified;\n\t\tdelete currentUser.createdAt;\n\t\tdelete currentUser.updatedAt;\n\t}\n\n\t// let bets = await prisma.bet.findMany({\n\t// \twhere: {\n\t// \t\taccepted: false,\n\t// \t},\n\t// });\n\t// const betPromises = bets.map(async (bet) => {\n\t// \tbet.details = JSON.parse(bet.details);\n\t// \tbet.createdAt = JSON.stringify(bet.createdAt);\n\t// \tbet.updatedAt = JSON.stringify(bet.updatedAt);\n\t// \treturn bet;\n\t// });\n\t// const betsData = await Promise.all(betPromises);\n\n\treturn {\n\t\tprops: { currentUser },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}