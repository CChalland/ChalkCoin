{"ast":null,"code":"function homeAwayHelper(game) {\n  let homeTeam = game.competitions[0].competitors.filter(team => {\n    return team.homeAway === \"home\";\n  });\n  let awayTeam = game.competitions[0].competitors.filter(team => {\n    return team.homeAway === \"away\";\n  });\n  return {\n    homeTeam,\n    awayTeam\n  };\n}\n\nexport function BetCardData(bet, sportData) {\n  const {\n    homeTeam,\n    awayTeam\n  } = homeAwayHelper(game);\n  let homePeriods, awayPeriods, homeRecords, awayRecords;\n  let temp = [{\n    name: \"Home\",\n    type: \"home\",\n    summary: 0\n  }, {\n    name: \"Away\",\n    type: \"away\",\n    summary: 0\n  }];\n\n  if (sportName === \"MLB\") {\n    let runs, hits, errors;\n    runs = awayTeam[0].statistics.filter(stat => {\n      return stat.name === \"runs\";\n    });\n    hits = awayTeam[0].statistics.filter(stat => {\n      return stat.name === \"hits\";\n    });\n    errors = awayTeam[0].statistics.filter(stat => {\n      return stat.name === \"errors\";\n    });\n    awayPeriods = [runs[0], hits[0], errors[0]];\n    runs = homeTeam[0].statistics.filter(stat => {\n      return stat.name === \"runs\";\n    });\n    hits = homeTeam[0].statistics.filter(stat => {\n      return stat.name === \"hits\";\n    });\n    errors = homeTeam[0].statistics.filter(stat => {\n      return stat.name === \"errors\";\n    });\n    homePeriods = [runs[0], hits[0], errors[0]];\n  } else if (game.status.type.description === \"In Progress\" || game.status.type.description === \"End of Period\" || game.status.type.description === \"Halftime\" || game.status.type.completed) {\n    awayPeriods = awayTeam[0].linescores;\n    homePeriods = homeTeam[0].linescores;\n  } else {\n    awayPeriods = [];\n    homePeriods = [];\n  }\n\n  if (!game.competitions[0].competitors[0].records) {\n    homeRecords = [{\n      name: \"Total\",\n      type: \"total\",\n      summary: 0\n    }, ...temp];\n    awayRecords = [{\n      name: \"Total\",\n      type: \"total\",\n      summary: 0\n    }, ...temp];\n  } else if (game.competitions[0].competitors[0].records.length > 1) {\n    homeRecords = homeTeam[0].records;\n    awayRecords = awayTeam[0].records;\n  } else {\n    homeRecords = [...homeTeam[0].records, ...temp];\n    awayRecords = [...awayTeam[0].records, ...temp];\n  }\n\n  return {\n    sportName: sportName,\n    status: game.status,\n    shortDetail: game.competitions[0].status.type.shortDetail,\n    detail: game.competitions[0].status.type.detail,\n    away: {\n      abbreviation: awayTeam[0].team.abbreviation,\n      alternateColor: awayTeam[0].team.alternateColor,\n      color: awayTeam[0].team.color,\n      logo: awayTeam[0].team.logo,\n      name: awayTeam[0].team.shortDisplayName,\n      records: awayRecords,\n      score: parseInt(awayTeam[0].score),\n      periods: awayPeriods\n    },\n    home: {\n      abbreviation: homeTeam[0].team.abbreviation,\n      alternateColor: homeTeam[0].team.alternateColor,\n      color: homeTeam[0].team.color,\n      logo: homeTeam[0].team.logo,\n      name: homeTeam[0].team.shortDisplayName,\n      records: homeRecords,\n      score: parseInt(homeTeam[0].score),\n      periods: homePeriods\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/helpers/BetCard.js"],"names":["homeAwayHelper","game","homeTeam","competitions","competitors","filter","team","homeAway","awayTeam","BetCardData","bet","sportData","homePeriods","awayPeriods","homeRecords","awayRecords","temp","name","type","summary","sportName","runs","hits","errors","statistics","stat","status","description","completed","linescores","records","length","shortDetail","detail","away","abbreviation","alternateColor","color","logo","shortDisplayName","score","parseInt","periods","home"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,IAAxB,EAA8B;AAC7B,MAAIC,QAAQ,GAAGD,IAAI,CAACE,YAAL,CAAkB,CAAlB,EAAqBC,WAArB,CAAiCC,MAAjC,CAAyCC,IAAD,IAAU;AAChE,WAAOA,IAAI,CAACC,QAAL,KAAkB,MAAzB;AACA,GAFc,CAAf;AAGA,MAAIC,QAAQ,GAAGP,IAAI,CAACE,YAAL,CAAkB,CAAlB,EAAqBC,WAArB,CAAiCC,MAAjC,CAAyCC,IAAD,IAAU;AAChE,WAAOA,IAAI,CAACC,QAAL,KAAkB,MAAzB;AACA,GAFc,CAAf;AAGA,SAAO;AAAEL,IAAAA,QAAF;AAAYM,IAAAA;AAAZ,GAAP;AACA;;AAED,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0BC,SAA1B,EAAqC;AAC3C,QAAM;AAAET,IAAAA,QAAF;AAAYM,IAAAA;AAAZ,MAAyBR,cAAc,CAACC,IAAD,CAA7C;AACA,MAAIW,WAAJ,EAAiBC,WAAjB,EAA8BC,WAA9B,EAA2CC,WAA3C;AACA,MAAIC,IAAI,GAAG,CACV;AAAEC,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,IAAI,EAAE,MAAtB;AAA8BC,IAAAA,OAAO,EAAE;AAAvC,GADU,EAEV;AAAEF,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,IAAI,EAAE,MAAtB;AAA8BC,IAAAA,OAAO,EAAE;AAAvC,GAFU,CAAX;;AAKA,MAAIC,SAAS,KAAK,KAAlB,EAAyB;AACxB,QAAIC,IAAJ,EAAUC,IAAV,EAAgBC,MAAhB;AACAF,IAAAA,IAAI,GAAGb,QAAQ,CAAC,CAAD,CAAR,CAAYgB,UAAZ,CAAuBnB,MAAvB,CAA+BoB,IAAD,IAAU;AAC9C,aAAOA,IAAI,CAACR,IAAL,KAAc,MAArB;AACA,KAFM,CAAP;AAGAK,IAAAA,IAAI,GAAGd,QAAQ,CAAC,CAAD,CAAR,CAAYgB,UAAZ,CAAuBnB,MAAvB,CAA+BoB,IAAD,IAAU;AAC9C,aAAOA,IAAI,CAACR,IAAL,KAAc,MAArB;AACA,KAFM,CAAP;AAGAM,IAAAA,MAAM,GAAGf,QAAQ,CAAC,CAAD,CAAR,CAAYgB,UAAZ,CAAuBnB,MAAvB,CAA+BoB,IAAD,IAAU;AAChD,aAAOA,IAAI,CAACR,IAAL,KAAc,QAArB;AACA,KAFQ,CAAT;AAGAJ,IAAAA,WAAW,GAAG,CAACQ,IAAI,CAAC,CAAD,CAAL,EAAUC,IAAI,CAAC,CAAD,CAAd,EAAmBC,MAAM,CAAC,CAAD,CAAzB,CAAd;AAEAF,IAAAA,IAAI,GAAGnB,QAAQ,CAAC,CAAD,CAAR,CAAYsB,UAAZ,CAAuBnB,MAAvB,CAA+BoB,IAAD,IAAU;AAC9C,aAAOA,IAAI,CAACR,IAAL,KAAc,MAArB;AACA,KAFM,CAAP;AAGAK,IAAAA,IAAI,GAAGpB,QAAQ,CAAC,CAAD,CAAR,CAAYsB,UAAZ,CAAuBnB,MAAvB,CAA+BoB,IAAD,IAAU;AAC9C,aAAOA,IAAI,CAACR,IAAL,KAAc,MAArB;AACA,KAFM,CAAP;AAGAM,IAAAA,MAAM,GAAGrB,QAAQ,CAAC,CAAD,CAAR,CAAYsB,UAAZ,CAAuBnB,MAAvB,CAA+BoB,IAAD,IAAU;AAChD,aAAOA,IAAI,CAACR,IAAL,KAAc,QAArB;AACA,KAFQ,CAAT;AAGAL,IAAAA,WAAW,GAAG,CAACS,IAAI,CAAC,CAAD,CAAL,EAAUC,IAAI,CAAC,CAAD,CAAd,EAAmBC,MAAM,CAAC,CAAD,CAAzB,CAAd;AACA,GAvBD,MAuBO,IACNtB,IAAI,CAACyB,MAAL,CAAYR,IAAZ,CAAiBS,WAAjB,KAAiC,aAAjC,IACA1B,IAAI,CAACyB,MAAL,CAAYR,IAAZ,CAAiBS,WAAjB,KAAiC,eADjC,IAEA1B,IAAI,CAACyB,MAAL,CAAYR,IAAZ,CAAiBS,WAAjB,KAAiC,UAFjC,IAGA1B,IAAI,CAACyB,MAAL,CAAYR,IAAZ,CAAiBU,SAJX,EAKL;AACDf,IAAAA,WAAW,GAAGL,QAAQ,CAAC,CAAD,CAAR,CAAYqB,UAA1B;AACAjB,IAAAA,WAAW,GAAGV,QAAQ,CAAC,CAAD,CAAR,CAAY2B,UAA1B;AACA,GARM,MAQA;AACNhB,IAAAA,WAAW,GAAG,EAAd;AACAD,IAAAA,WAAW,GAAG,EAAd;AACA;;AAED,MAAI,CAACX,IAAI,CAACE,YAAL,CAAkB,CAAlB,EAAqBC,WAArB,CAAiC,CAAjC,EAAoC0B,OAAzC,EAAkD;AACjDhB,IAAAA,WAAW,GAAG,CAAC;AAAEG,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,IAAI,EAAE,OAAvB;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KAAD,EAA+C,GAAGH,IAAlD,CAAd;AACAD,IAAAA,WAAW,GAAG,CAAC;AAAEE,MAAAA,IAAI,EAAE,OAAR;AAAiBC,MAAAA,IAAI,EAAE,OAAvB;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KAAD,EAA+C,GAAGH,IAAlD,CAAd;AACA,GAHD,MAGO,IAAIf,IAAI,CAACE,YAAL,CAAkB,CAAlB,EAAqBC,WAArB,CAAiC,CAAjC,EAAoC0B,OAApC,CAA4CC,MAA5C,GAAqD,CAAzD,EAA4D;AAClEjB,IAAAA,WAAW,GAAGZ,QAAQ,CAAC,CAAD,CAAR,CAAY4B,OAA1B;AACAf,IAAAA,WAAW,GAAGP,QAAQ,CAAC,CAAD,CAAR,CAAYsB,OAA1B;AACA,GAHM,MAGA;AACNhB,IAAAA,WAAW,GAAG,CAAC,GAAGZ,QAAQ,CAAC,CAAD,CAAR,CAAY4B,OAAhB,EAAyB,GAAGd,IAA5B,CAAd;AACAD,IAAAA,WAAW,GAAG,CAAC,GAAGP,QAAQ,CAAC,CAAD,CAAR,CAAYsB,OAAhB,EAAyB,GAAGd,IAA5B,CAAd;AACA;;AAED,SAAO;AACNI,IAAAA,SAAS,EAAEA,SADL;AAENM,IAAAA,MAAM,EAAEzB,IAAI,CAACyB,MAFP;AAGNM,IAAAA,WAAW,EAAE/B,IAAI,CAACE,YAAL,CAAkB,CAAlB,EAAqBuB,MAArB,CAA4BR,IAA5B,CAAiCc,WAHxC;AAINC,IAAAA,MAAM,EAAEhC,IAAI,CAACE,YAAL,CAAkB,CAAlB,EAAqBuB,MAArB,CAA4BR,IAA5B,CAAiCe,MAJnC;AAKNC,IAAAA,IAAI,EAAE;AACLC,MAAAA,YAAY,EAAE3B,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiB6B,YAD1B;AAELC,MAAAA,cAAc,EAAE5B,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiB8B,cAF5B;AAGLC,MAAAA,KAAK,EAAE7B,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiB+B,KAHnB;AAILC,MAAAA,IAAI,EAAE9B,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBgC,IAJlB;AAKLrB,MAAAA,IAAI,EAAET,QAAQ,CAAC,CAAD,CAAR,CAAYF,IAAZ,CAAiBiC,gBALlB;AAMLT,MAAAA,OAAO,EAAEf,WANJ;AAOLyB,MAAAA,KAAK,EAAEC,QAAQ,CAACjC,QAAQ,CAAC,CAAD,CAAR,CAAYgC,KAAb,CAPV;AAQLE,MAAAA,OAAO,EAAE7B;AARJ,KALA;AAeN8B,IAAAA,IAAI,EAAE;AACLR,MAAAA,YAAY,EAAEjC,QAAQ,CAAC,CAAD,CAAR,CAAYI,IAAZ,CAAiB6B,YAD1B;AAELC,MAAAA,cAAc,EAAElC,QAAQ,CAAC,CAAD,CAAR,CAAYI,IAAZ,CAAiB8B,cAF5B;AAGLC,MAAAA,KAAK,EAAEnC,QAAQ,CAAC,CAAD,CAAR,CAAYI,IAAZ,CAAiB+B,KAHnB;AAILC,MAAAA,IAAI,EAAEpC,QAAQ,CAAC,CAAD,CAAR,CAAYI,IAAZ,CAAiBgC,IAJlB;AAKLrB,MAAAA,IAAI,EAAEf,QAAQ,CAAC,CAAD,CAAR,CAAYI,IAAZ,CAAiBiC,gBALlB;AAMLT,MAAAA,OAAO,EAAEhB,WANJ;AAOL0B,MAAAA,KAAK,EAAEC,QAAQ,CAACvC,QAAQ,CAAC,CAAD,CAAR,CAAYsC,KAAb,CAPV;AAQLE,MAAAA,OAAO,EAAE9B;AARJ;AAfA,GAAP;AA0BA","sourcesContent":["function homeAwayHelper(game) {\n\tlet homeTeam = game.competitions[0].competitors.filter((team) => {\n\t\treturn team.homeAway === \"home\";\n\t});\n\tlet awayTeam = game.competitions[0].competitors.filter((team) => {\n\t\treturn team.homeAway === \"away\";\n\t});\n\treturn { homeTeam, awayTeam };\n}\n\nexport function BetCardData(bet, sportData) {\n\tconst { homeTeam, awayTeam } = homeAwayHelper(game);\n\tlet homePeriods, awayPeriods, homeRecords, awayRecords;\n\tlet temp = [\n\t\t{ name: \"Home\", type: \"home\", summary: 0 },\n\t\t{ name: \"Away\", type: \"away\", summary: 0 },\n\t];\n\n\tif (sportName === \"MLB\") {\n\t\tlet runs, hits, errors;\n\t\truns = awayTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"runs\";\n\t\t});\n\t\thits = awayTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"hits\";\n\t\t});\n\t\terrors = awayTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"errors\";\n\t\t});\n\t\tawayPeriods = [runs[0], hits[0], errors[0]];\n\n\t\truns = homeTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"runs\";\n\t\t});\n\t\thits = homeTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"hits\";\n\t\t});\n\t\terrors = homeTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"errors\";\n\t\t});\n\t\thomePeriods = [runs[0], hits[0], errors[0]];\n\t} else if (\n\t\tgame.status.type.description === \"In Progress\" ||\n\t\tgame.status.type.description === \"End of Period\" ||\n\t\tgame.status.type.description === \"Halftime\" ||\n\t\tgame.status.type.completed\n\t) {\n\t\tawayPeriods = awayTeam[0].linescores;\n\t\thomePeriods = homeTeam[0].linescores;\n\t} else {\n\t\tawayPeriods = [];\n\t\thomePeriods = [];\n\t}\n\n\tif (!game.competitions[0].competitors[0].records) {\n\t\thomeRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n\t\tawayRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n\t} else if (game.competitions[0].competitors[0].records.length > 1) {\n\t\thomeRecords = homeTeam[0].records;\n\t\tawayRecords = awayTeam[0].records;\n\t} else {\n\t\thomeRecords = [...homeTeam[0].records, ...temp];\n\t\tawayRecords = [...awayTeam[0].records, ...temp];\n\t}\n\n\treturn {\n\t\tsportName: sportName,\n\t\tstatus: game.status,\n\t\tshortDetail: game.competitions[0].status.type.shortDetail,\n\t\tdetail: game.competitions[0].status.type.detail,\n\t\taway: {\n\t\t\tabbreviation: awayTeam[0].team.abbreviation,\n\t\t\talternateColor: awayTeam[0].team.alternateColor,\n\t\t\tcolor: awayTeam[0].team.color,\n\t\t\tlogo: awayTeam[0].team.logo,\n\t\t\tname: awayTeam[0].team.shortDisplayName,\n\t\t\trecords: awayRecords,\n\t\t\tscore: parseInt(awayTeam[0].score),\n\t\t\tperiods: awayPeriods,\n\t\t},\n\t\thome: {\n\t\t\tabbreviation: homeTeam[0].team.abbreviation,\n\t\t\talternateColor: homeTeam[0].team.alternateColor,\n\t\t\tcolor: homeTeam[0].team.color,\n\t\t\tlogo: homeTeam[0].team.logo,\n\t\t\tname: homeTeam[0].team.shortDisplayName,\n\t\t\trecords: homeRecords,\n\t\t\tscore: parseInt(homeTeam[0].score),\n\t\t\tperiods: homePeriods,\n\t\t},\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}