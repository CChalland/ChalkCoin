{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/games.js\";\nimport React, { useContext } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport SportCard from \"../components/SportCard\";\nimport prisma from \"../contexts/prisma\";\nimport { getSession } from \"next-auth/client\";\n\nfunction Games(props) {\n  const {\n    sportsData\n  } = useContext(SportContext);\n  let sportData = sportsData.filter(sport => {\n    return sport.abbrv === props.query.sport.toUpperCase();\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: sportData[0].display_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SportCard, {\n      sportData: sportData[0],\n      sportName: sportData[0].display_name,\n      users: props.users,\n      currentUser: props.currentUser\n    }, sportData[0].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Games;\nexport async function getServerSideProps(context) {\n  const {\n    req,\n    res\n  } = context;\n  const session = await getSession({\n    req\n  });\n\n  if (session) {\n    const currentUser = await prisma.user.findUnique({\n      where: {\n        id: session.user.id\n      },\n      include: {\n        requester: true,\n        accepter: true,\n        recipient: true\n      }\n    });\n    delete currentUser.password;\n    delete currentUser.paypal;\n    delete currentUser.emailVerified;\n    delete currentUser.createdAt;\n    delete currentUser.updatedAt;\n  }\n\n  let users = await prisma.user.findMany();\n  users = users.map(user => {\n    delete user.password;\n    delete user.balance;\n    delete user.paypal;\n    delete user.emailVerified;\n    delete user.createdAt;\n    delete user.updatedAt;\n    return user;\n  });\n  return {\n    props: {\n      query: context.query,\n      users,\n      currentUser\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/games.js"],"names":["React","useContext","Container","SportContext","SportCard","prisma","getSession","Games","props","sportsData","sportData","filter","sport","abbrv","query","toUpperCase","display_name","users","currentUser","id","getServerSideProps","context","req","res","session","user","findUnique","where","include","requester","accepter","recipient","password","paypal","emailVerified","createdAt","updatedAt","findMany","map","balance"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAiBR,UAAU,CAACE,YAAD,CAAjC;AACA,MAAIO,SAAS,GAAGD,UAAU,CAACE,MAAX,CAAmBC,KAAD,IAAW;AAC5C,WAAOA,KAAK,CAACC,KAAN,KAAgBL,KAAK,CAACM,KAAN,CAAYF,KAAZ,CAAkBG,WAAlB,EAAvB;AACA,GAFe,CAAhB;AAIA,sBACC,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,4BACC;AAAA,gBAAKL,SAAS,CAAC,CAAD,CAAT,CAAaM;AAAlB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,SAAD;AAEC,MAAA,SAAS,EAAEN,SAAS,CAAC,CAAD,CAFrB;AAGC,MAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAAT,CAAaM,YAHzB;AAIC,MAAA,KAAK,EAAER,KAAK,CAACS,KAJd;AAKC,MAAA,WAAW,EAAET,KAAK,CAACU;AALpB,OACMR,SAAS,CAAC,CAAD,CAAT,CAAaS,EADnB;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;AAED,eAAeZ,KAAf;AAEA,OAAO,eAAea,kBAAf,CAAkCC,OAAlC,EAA2C;AACjD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAeF,OAArB;AACA,QAAMG,OAAO,GAAG,MAAMlB,UAAU,CAAC;AAAEgB,IAAAA;AAAF,GAAD,CAAhC;;AAEA,MAAIE,OAAJ,EAAa;AACZ,UAAMN,WAAW,GAAG,MAAMb,MAAM,CAACoB,IAAP,CAAYC,UAAZ,CAAuB;AAChDC,MAAAA,KAAK,EAAE;AACNR,QAAAA,EAAE,EAAEK,OAAO,CAACC,IAAR,CAAaN;AADX,OADyC;AAIhDS,MAAAA,OAAO,EAAE;AACRC,QAAAA,SAAS,EAAE,IADH;AAERC,QAAAA,QAAQ,EAAE,IAFF;AAGRC,QAAAA,SAAS,EAAE;AAHH;AAJuC,KAAvB,CAA1B;AAUA,WAAOb,WAAW,CAACc,QAAnB;AACA,WAAOd,WAAW,CAACe,MAAnB;AACA,WAAOf,WAAW,CAACgB,aAAnB;AACA,WAAOhB,WAAW,CAACiB,SAAnB;AACA,WAAOjB,WAAW,CAACkB,SAAnB;AACA;;AACD,MAAInB,KAAK,GAAG,MAAMZ,MAAM,CAACoB,IAAP,CAAYY,QAAZ,EAAlB;AACApB,EAAAA,KAAK,GAAGA,KAAK,CAACqB,GAAN,CAAWb,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACO,QAAZ;AACA,WAAOP,IAAI,CAACc,OAAZ;AACA,WAAOd,IAAI,CAACQ,MAAZ;AACA,WAAOR,IAAI,CAACS,aAAZ;AACA,WAAOT,IAAI,CAACU,SAAZ;AACA,WAAOV,IAAI,CAACW,SAAZ;AAEA,WAAOX,IAAP;AACA,GATO,CAAR;AAUA,SAAO;AACNjB,IAAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAEO,OAAO,CAACP,KAAjB;AAAwBG,MAAAA,KAAxB;AAA+BC,MAAAA;AAA/B;AADD,GAAP;AAGA","sourcesContent":["import React, { useContext } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport SportCard from \"../components/SportCard\";\nimport prisma from \"../contexts/prisma\";\nimport { getSession } from \"next-auth/client\";\n\nfunction Games(props) {\n\tconst { sportsData } = useContext(SportContext);\n\tlet sportData = sportsData.filter((sport) => {\n\t\treturn sport.abbrv === props.query.sport.toUpperCase();\n\t});\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<h1>{sportData[0].display_name}</h1>\n\t\t\t<SportCard\n\t\t\t\tkey={sportData[0].id}\n\t\t\t\tsportData={sportData[0]}\n\t\t\t\tsportName={sportData[0].display_name}\n\t\t\t\tusers={props.users}\n\t\t\t\tcurrentUser={props.currentUser}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default Games;\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\n\tif (session) {\n\t\tconst currentUser = await prisma.user.findUnique({\n\t\t\twhere: {\n\t\t\t\tid: session.user.id,\n\t\t\t},\n\t\t\tinclude: {\n\t\t\t\trequester: true,\n\t\t\t\taccepter: true,\n\t\t\t\trecipient: true,\n\t\t\t},\n\t\t});\n\t\tdelete currentUser.password;\n\t\tdelete currentUser.paypal;\n\t\tdelete currentUser.emailVerified;\n\t\tdelete currentUser.createdAt;\n\t\tdelete currentUser.updatedAt;\n\t}\n\tlet users = await prisma.user.findMany();\n\tusers = users.map((user) => {\n\t\tdelete user.password;\n\t\tdelete user.balance;\n\t\tdelete user.paypal;\n\t\tdelete user.emailVerified;\n\t\tdelete user.createdAt;\n\t\tdelete user.updatedAt;\n\n\t\treturn user;\n\t});\n\treturn {\n\t\tprops: { query: context.query, users, currentUser },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}