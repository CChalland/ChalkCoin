{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/UserPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getSession } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { Alert, Button, Card, Form, Collapse, Nav, Container, Row, Col } from \"react-bootstrap\";\nimport prisma from \"../contexts/prisma\";\n\nconst emailValidation = value => /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\n\nconst urlValidation = value => {\n  let returnValue = true;\n\n  try {\n    new URL(value);\n  } catch (e) {\n    returnValue = false;\n  } finally {\n    return returnValue;\n  }\n\n  return false;\n};\n\nconst isRequired = value => value !== null && value !== \"\" && value;\n\nconst equalTo = (value1, value2) => value1 === value2;\n\nconst minLength = (value, length) => value.length >= length;\n\nconst maxLength = (value, length) => value.length <= length && value !== \"\";\n\nfunction UserPage(props) {\n  let user = {\n    username: props.session.user.username ? props.session.user.username : \"\",\n    name: props.session.user.name ? props.session.user.name : \"\",\n    email: props.session.user.email ? props.session.user.email : \"\",\n    image: props.session.user.image ? props.session.user.image : \"\"\n  };\n  const router = useRouter();\n  const {\n    0: newUserState,\n    1: setNewUserState\n  } = useState(false);\n  const {\n    0: updateSuccessState,\n    1: setUpdateSuccessState\n  } = useState(false);\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(\"\");\n  const {\n    0: updateErrorState,\n    1: setUpdateErrorState\n  } = useState(false);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(user.username);\n  const {\n    0: usernameState,\n    1: setUsernameState\n  } = useState(true);\n  const {\n    0: name,\n    1: setName\n  } = useState(user.name);\n  const {\n    0: nameState,\n    1: setNameState\n  } = useState(true);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(user.email);\n  const {\n    0: emailState,\n    1: setEmailState\n  } = useState(true);\n  const {\n    0: imageURL,\n    1: setImageURL\n  } = useState(user.image);\n  const {\n    0: imageURLState,\n    1: setImageURLState\n  } = useState(true);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: passwordState,\n    1: setPasswordState\n  } = useState(true);\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n  const {\n    0: confirmPasswordState,\n    1: setConfirmPasswordState\n  } = useState(true);\n  const [multipleExpandablePanels, setMultipleExpandablePanels] = React.useState([]);\n\n  const toggleMultipleExpandablePanels = (event, value) => {\n    if (multipleExpandablePanels.includes(value)) {\n      setMultipleExpandablePanels(multipleExpandablePanels.filter(prop => prop !== value));\n    } else {\n      setMultipleExpandablePanels([...multipleExpandablePanels, value]);\n    }\n  };\n\n  console.log(\"user page\", user);\n  let newUserAlert, updateSuccessAlert, updateErrorAlert;\n\n  if (newUserState) {\n    newUserAlert = /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"alert-with-icon\",\n      variant: \"danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-hidden\": true,\n        className: \"close\",\n        \"data-dismiss\": \"alert\",\n        type: \"button\",\n        onClick: () => {\n          setNewUserState(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"nc-icon nc-simple-remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-notify\": \"icon\",\n        className: \"nc-icon nc-bell-55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-notify\": \"message\",\n        children: \"Please fill in the required fields to complete registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this);\n  }\n\n  if (updateSuccessState) {\n    updateSuccessAlert = /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"alert-with-icon\",\n      variant: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-hidden\": true,\n        className: \"close\",\n        \"data-dismiss\": \"alert\",\n        type: \"button\",\n        onClick: () => {\n          setUpdateSuccessState(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"nc-icon nc-simple-remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-notify\": \"icon\",\n        className: \"nc-icon nc-bell-55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-notify\": \"message\",\n        children: \"Updated your settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this);\n  }\n\n  if (updateErrorState) {\n    updateErrorAlert = /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"alert-with-icon\",\n      variant: \"danger\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-hidden\": true,\n        className: \"close\",\n        \"data-dismiss\": \"alert\",\n        type: \"button\",\n        onClick: () => {\n          setUpdateErrorState(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"nc-icon nc-simple-remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-notify\": \"icon\",\n        className: \"nc-icon nc-bell-55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-notify\": \"message\",\n        children: errorMessage ? errorMessage : \"Please correct the highlighted fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this);\n  }\n\n  const updateProfile = async () => {\n    let updatedUser = {};\n    if (username && (usernameState || isRequired(username))) updatedUser.username = username;\n    if (name) updatedUser.name = name;\n    if (email && (emailState || emailValidation(email))) updatedUser.email = email;\n    if (imageURL && (imageURLState || urlValidation(imageURL))) updatedUser.image = imageURL;\n    if (password && confirmPassword && (confirmPasswordState || minLength(confirmPassword, 1) || equalTo(confirmPassword, password))) updatedUser.password = confirmPassword;\n\n    if (usernameState && emailState && passwordState && confirmPasswordState) {\n      let response = await axios.post(\"http://localhost:4000/api/currentUser\", updatedUser);\n      console.log(response);\n\n      if (response.data.id) {\n        user = response.data;\n        setUpdateSuccessState(true);\n        setNewUserState(false);\n        setUpdateErrorState(false);\n        router.replace(\"/UserPage\", undefined, {\n          shallow: true\n        });\n      } else if (response.data.error) {\n        setErrorMessage(response.data.error);\n        setUpdateErrorState(true);\n      }\n    } else {\n      setUpdateErrorState(true);\n    }\n  };\n\n  useEffect(() => {\n    if (router.query.newUser) {\n      toggleMultipleExpandablePanels(\"e\", 1);\n      setNewUserState(true);\n      if (!user.username) setUsernameState(false);\n      if (!user.email) setEmailState(false);\n      setPasswordState(false);\n      setConfirmPasswordState(false);\n    }\n  }, [router]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 12,\n          order: 2\n        },\n        md: {\n          span: 8,\n          order: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Header, {\n                    children: [/*#__PURE__*/_jsxDEV(Nav, {\n                      children: /*#__PURE__*/_jsxDEV(Nav.Item, {\n                        as: \"h4\",\n                        className: \"my-0 py-0\",\n                        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                          \"data-toggle\": \"collapse\",\n                          \"aria-expanded\": multipleExpandablePanels.includes(1),\n                          onClick: e => toggleMultipleExpandablePanels(e, 1),\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"nc-icon nc-preferences-circle-rotate\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 181,\n                            columnNumber: 15\n                          }, this), \" Edit Profile\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 176,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 12\n                    }, this), newUserAlert, updateErrorAlert, updateSuccessAlert]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n                  className: \"collapse\",\n                  id: \"collapseOne\",\n                  in: multipleExpandablePanels.includes(1),\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        className: \"pr-1\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          className: \"has-label \" + (usernameState ? \"has-success\" : \"has-error\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: [\"Username \", /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"star\",\n                              children: \"*\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 199,\n                              columnNumber: 25\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 198,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            placeholder: \"Username\",\n                            name: \"username\",\n                            type: \"text\",\n                            value: username,\n                            onChange: e => {\n                              setUsername(e.target.value);\n\n                              if (isRequired(e.target.value)) {\n                                setUsernameState(true);\n                              } else {\n                                setUsernameState(false);\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 201,\n                            columnNumber: 15\n                          }, this), usernameState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"error\",\n                            children: \"This field is required.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 215,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 195,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        className: \"pl-1\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          className: \"has-label \" + (nameState ? \"has-success\" : \"has-error\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"Name\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 220,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            placeholder: \"Name\",\n                            name: \"name\",\n                            type: \"text\",\n                            value: name,\n                            onChange: e => {\n                              setName(e.target.value); // if (isRequired(e.target.value)) {\n                              // \tsetNameState(true);\n                              // } else {\n                              // \tsetNameState(false);\n                              // }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 221,\n                            columnNumber: 15\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 219,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        className: \"pr-1\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          className: \"has-label \" + (emailState ? \"has-success\" : \"has-error\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: [\"Email Address \", /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"star\",\n                              children: \"*\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 242,\n                              columnNumber: 30\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 241,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            placeholder: \"Email\",\n                            name: \"email\",\n                            type: \"text\",\n                            value: email,\n                            onChange: e => {\n                              setEmail(e.target.value);\n\n                              if (emailValidation(e.target.value)) {\n                                setEmailState(true);\n                              } else {\n                                setEmailState(false);\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 244,\n                            columnNumber: 15\n                          }, this), emailState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"error\",\n                            children: \"This field is required.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 258,\n                            columnNumber: 36\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 240,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 239,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        className: \"pl-1\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          className: \"has-label \" + (imageURLState ? \"has-success\" : \"has-error\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: \"Image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 265,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            placeholder: \"URL\",\n                            name: \"image\",\n                            type: \"text\",\n                            value: imageURL,\n                            onChange: e => {\n                              setImageURL(e.target.value);\n\n                              if (urlValidation(e.target.value)) {\n                                setImageURLState(true);\n                              } else {\n                                setImageURLState(false);\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 266,\n                            columnNumber: 15\n                          }, this), imageURLState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"error\",\n                            children: \"This field has to be URL address.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 281,\n                            columnNumber: 16\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 262,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 238,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: [/*#__PURE__*/_jsxDEV(Col, {\n                        className: \"pr-1\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          className: \"has-label \" + (passwordState ? \"has-success\" : \"has-error\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"star\",\n                              children: \"*\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 292,\n                              columnNumber: 25\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 291,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            placeholder: \"Password\",\n                            name: \"password\",\n                            type: \"password\",\n                            value: password,\n                            onChange: e => {\n                              setPassword(e.target.value);\n\n                              if (minLength(e.target.value, 1)) {\n                                setPasswordState(true);\n                              } else {\n                                setPasswordState(false);\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 294,\n                            columnNumber: 15\n                          }, this), passwordState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"error\",\n                            children: \"This field is required.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 308,\n                            columnNumber: 39\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 288,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Col, {\n                        className: \"pl-1\",\n                        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                          className: \"has-label \" + (confirmPasswordState ? \"has-success\" : \"has-error\"),\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            children: [\"Confirm Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                              className: \"star\",\n                              children: \"*\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 316,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 315,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                            placeholder: \"Password\",\n                            name: \"confirmPassword\",\n                            type: \"password\",\n                            value: confirmPassword,\n                            onChange: e => {\n                              setConfirmPassword(e.target.value);\n\n                              if (equalTo(e.target.value, password)) {\n                                setConfirmPasswordState(true);\n                              } else {\n                                setConfirmPasswordState(false);\n                              }\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 318,\n                            columnNumber: 15\n                          }, this), confirmPasswordState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                            className: \"error\",\n                            children: \"This field is required and needs to be equal with your entered password.\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 333,\n                            columnNumber: 16\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 312,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 311,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-category form-category\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"star\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 341,\n                        columnNumber: 13\n                      }, this), \"Required fields\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      className: \"btn-fill pull-right\",\n                      variant: \"info\",\n                      onClick: () => {\n                        updateProfile();\n                      },\n                      children: \"Update Profile\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 345,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Header, {\n                    children: [/*#__PURE__*/_jsxDEV(Nav, {\n                      children: /*#__PURE__*/_jsxDEV(Nav.Item, {\n                        as: \"h4\",\n                        className: \"my-0 py-0\",\n                        children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                          \"data-toggle\": \"collapse\",\n                          \"aria-expanded\": multipleExpandablePanels.includes(2),\n                          onClick: e => toggleMultipleExpandablePanels(e, 2),\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"nc-icon nc-paper-2\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 373,\n                            columnNumber: 15\n                          }, this), \" Your Bets\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 368,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 367,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 366,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n                  className: \"collapse\",\n                  id: \"collapseTwo\",\n                  in: multipleExpandablePanels.includes(2),\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: \"Testing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 381,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: {\n          span: 12,\n          order: 1\n        },\n        md: {\n          span: 4,\n          order: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"card-user\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"no-padding\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"...\",\n                src: \"../static/img/full-screen-image-3.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"...\",\n                className: \"avatar border-gray\",\n                src: \"../static/img/faces/face-0.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                as: \"h5\",\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-description\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-description text-center\",\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-container text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-simple btn-icon\",\n                href: \"#pablo\",\n                onClick: e => e.preventDefault(),\n                variant: \"link\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fab fa-facebook-square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-simple btn-icon\",\n                href: \"#pablo\",\n                onClick: e => e.preventDefault(),\n                variant: \"link\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fab fa-twitter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-simple btn-icon\",\n                href: \"#pablo\",\n                onClick: e => e.preventDefault(),\n                variant: \"link\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fab fa-google-plus-square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 3\n  }, this);\n}\n\nexport default UserPage;\nexport async function getServerSideProps(context) {\n  const {\n    req,\n    res\n  } = context;\n  let session = await getSession({\n    req\n  });\n\n  if (session) {\n    const user = await prisma.user.findUnique({\n      where: {\n        id: session.user.id\n      },\n      include: {\n        requester: true,\n        accepter: true,\n        recipient: true\n      }\n    });\n    delete user.password;\n    user.emailVerified = JSON.stringify(user.emailVerified);\n    user.createdAt = JSON.stringify(user.createdAt);\n    user.updatedAt = JSON.stringify(user.updatedAt);\n    session.user = user;\n    return {\n      props: {\n        session\n      }\n    };\n  } else {\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  }\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/UserPage.js"],"names":["React","useState","useEffect","getSession","useRouter","axios","Alert","Button","Card","Form","Collapse","Nav","Container","Row","Col","prisma","emailValidation","value","test","urlValidation","returnValue","URL","e","isRequired","equalTo","value1","value2","minLength","length","maxLength","UserPage","props","user","username","session","name","email","image","router","newUserState","setNewUserState","updateSuccessState","setUpdateSuccessState","errorMessage","setErrorMessage","updateErrorState","setUpdateErrorState","setUsername","usernameState","setUsernameState","setName","nameState","setNameState","setEmail","emailState","setEmailState","imageURL","setImageURL","imageURLState","setImageURLState","password","setPassword","passwordState","setPasswordState","confirmPassword","setConfirmPassword","confirmPasswordState","setConfirmPasswordState","multipleExpandablePanels","setMultipleExpandablePanels","toggleMultipleExpandablePanels","event","includes","filter","prop","console","log","newUserAlert","updateSuccessAlert","updateErrorAlert","updateProfile","updatedUser","response","post","data","id","replace","undefined","shallow","error","query","newUser","span","order","target","preventDefault","getServerSideProps","context","req","res","findUnique","where","include","requester","accepter","recipient","emailVerified","JSON","stringify","createdAt","updatedAt","writeHead","Location","end"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getSession } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { Alert, Button, Card, Form, Collapse, Nav, Container, Row, Col } from \"react-bootstrap\";\nimport prisma from \"../contexts/prisma\";\n\nconst emailValidation = (value) =>\n\t/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\nconst urlValidation = (value) => {\n\tlet returnValue = true;\n\ttry {\n\t\tnew URL(value);\n\t} catch (e) {\n\t\treturnValue = false;\n\t} finally {\n\t\treturn returnValue;\n\t}\n\treturn false;\n};\nconst isRequired = (value) => value !== null && value !== \"\" && value;\nconst equalTo = (value1, value2) => value1 === value2;\nconst minLength = (value, length) => value.length >= length;\nconst maxLength = (value, length) => value.length <= length && value !== \"\";\n\nfunction UserPage(props) {\n\tlet user = {\n\t\tusername: props.session.user.username ? props.session.user.username : \"\",\n\t\tname: props.session.user.name ? props.session.user.name : \"\",\n\t\temail: props.session.user.email ? props.session.user.email : \"\",\n\t\timage: props.session.user.image ? props.session.user.image : \"\",\n\t};\n\tconst router = useRouter();\n\tconst [newUserState, setNewUserState] = useState(false);\n\tconst [updateSuccessState, setUpdateSuccessState] = useState(false);\n\tconst [errorMessage, setErrorMessage] = useState(\"\");\n\tconst [updateErrorState, setUpdateErrorState] = useState(false);\n\tconst [username, setUsername] = useState(user.username);\n\tconst [usernameState, setUsernameState] = useState(true);\n\tconst [name, setName] = useState(user.name);\n\tconst [nameState, setNameState] = useState(true);\n\tconst [email, setEmail] = useState(user.email);\n\tconst [emailState, setEmailState] = useState(true);\n\tconst [imageURL, setImageURL] = useState(user.image);\n\tconst [imageURLState, setImageURLState] = useState(true);\n\tconst [password, setPassword] = useState(\"\");\n\tconst [passwordState, setPasswordState] = useState(true);\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\n\tconst [confirmPasswordState, setConfirmPasswordState] = useState(true);\n\tconst [multipleExpandablePanels, setMultipleExpandablePanels] = React.useState([]);\n\tconst toggleMultipleExpandablePanels = (event, value) => {\n\t\tif (multipleExpandablePanels.includes(value)) {\n\t\t\tsetMultipleExpandablePanels(multipleExpandablePanels.filter((prop) => prop !== value));\n\t\t} else {\n\t\t\tsetMultipleExpandablePanels([...multipleExpandablePanels, value]);\n\t\t}\n\t};\n\n\tconsole.log(\"user page\", user);\n\n\tlet newUserAlert, updateSuccessAlert, updateErrorAlert;\n\tif (newUserState) {\n\t\tnewUserAlert = (\n\t\t\t<Alert className=\"alert-with-icon\" variant=\"danger\">\n\t\t\t\t<button\n\t\t\t\t\taria-hidden={true}\n\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\tdata-dismiss=\"alert\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetNewUserState(false);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"nc-icon nc-simple-remove\"></i>\n\t\t\t\t</button>\n\t\t\t\t<span data-notify=\"icon\" className=\"nc-icon nc-bell-55\"></span>\n\t\t\t\t<span data-notify=\"message\">Please fill in the required fields to complete registration</span>\n\t\t\t</Alert>\n\t\t);\n\t}\n\tif (updateSuccessState) {\n\t\tupdateSuccessAlert = (\n\t\t\t<Alert className=\"alert-with-icon\" variant=\"info\">\n\t\t\t\t<button\n\t\t\t\t\taria-hidden={true}\n\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\tdata-dismiss=\"alert\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetUpdateSuccessState(false);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"nc-icon nc-simple-remove\"></i>\n\t\t\t\t</button>\n\t\t\t\t<span data-notify=\"icon\" className=\"nc-icon nc-bell-55\"></span>\n\t\t\t\t<span data-notify=\"message\">Updated your settings</span>\n\t\t\t</Alert>\n\t\t);\n\t}\n\tif (updateErrorState) {\n\t\tupdateErrorAlert = (\n\t\t\t<Alert className=\"alert-with-icon\" variant=\"danger\">\n\t\t\t\t<button\n\t\t\t\t\taria-hidden={true}\n\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\tdata-dismiss=\"alert\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetUpdateErrorState(false);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"nc-icon nc-simple-remove\"></i>\n\t\t\t\t</button>\n\t\t\t\t<span data-notify=\"icon\" className=\"nc-icon nc-bell-55\"></span>\n\t\t\t\t<span data-notify=\"message\">\n\t\t\t\t\t{errorMessage ? errorMessage : \"Please correct the highlighted fields\"}\n\t\t\t\t</span>\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\tconst updateProfile = async () => {\n\t\tlet updatedUser = {};\n\t\tif (username && (usernameState || isRequired(username))) updatedUser.username = username;\n\t\tif (name) updatedUser.name = name;\n\t\tif (email && (emailState || emailValidation(email))) updatedUser.email = email;\n\t\tif (imageURL && (imageURLState || urlValidation(imageURL))) updatedUser.image = imageURL;\n\t\tif (\n\t\t\tpassword &&\n\t\t\tconfirmPassword &&\n\t\t\t(confirmPasswordState || minLength(confirmPassword, 1) || equalTo(confirmPassword, password))\n\t\t)\n\t\t\tupdatedUser.password = confirmPassword;\n\n\t\tif (usernameState && emailState && passwordState && confirmPasswordState) {\n\t\t\tlet response = await axios.post(\"http://localhost:4000/api/currentUser\", updatedUser);\n\t\t\tconsole.log(response);\n\t\t\tif (response.data.id) {\n\t\t\t\tuser = response.data;\n\t\t\t\tsetUpdateSuccessState(true);\n\t\t\t\tsetNewUserState(false);\n\t\t\t\tsetUpdateErrorState(false);\n\t\t\t\trouter.replace(\"/UserPage\", undefined, { shallow: true });\n\t\t\t} else if (response.data.error) {\n\t\t\t\tsetErrorMessage(response.data.error);\n\t\t\t\tsetUpdateErrorState(true);\n\t\t\t}\n\t\t} else {\n\t\t\tsetUpdateErrorState(true);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (router.query.newUser) {\n\t\t\ttoggleMultipleExpandablePanels(\"e\", 1);\n\t\t\tsetNewUserState(true);\n\t\t\tif (!user.username) setUsernameState(false);\n\t\t\tif (!user.email) setEmailState(false);\n\t\t\tsetPasswordState(false);\n\t\t\tsetConfirmPasswordState(false);\n\t\t}\n\t}, [router]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col xs={{ span: 12, order: 2 }} md={{ span: 8, order: 1 }}>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t\t\t<Nav>\n\t\t\t\t\t\t\t\t\t\t\t\t<Nav.Item as=\"h4\" className=\"my-0 py-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-expanded={multipleExpandablePanels.includes(1)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => toggleMultipleExpandablePanels(e, 1)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"nc-icon nc-preferences-circle-rotate\"></i> Edit Profile\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t{newUserAlert}\n\t\t\t\t\t\t\t\t\t\t\t{updateErrorAlert}\n\t\t\t\t\t\t\t\t\t\t\t{updateSuccessAlert}\n\t\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t<Collapse className=\"collapse\" id=\"collapseOne\" in={multipleExpandablePanels.includes(1)}>\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"has-label \" + (usernameState ? \"has-success\" : \"has-error\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUsername <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetUsername(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (isRequired(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetUsernameState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetUsernameState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{usernameState ? null : <label className=\"error\">This field is required.</label>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (nameState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetName(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// if (isRequired(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tsetNameState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tsetNameState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (emailState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEmail Address <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmail(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (emailValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmailState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmailState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{emailState ? null : <label className=\"error\">This field is required.</label>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"has-label \" + (imageURLState ? \"has-success\" : \"has-error\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>Image</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"URL\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={imageURL}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURL(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (urlValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURLState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURLState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{imageURLState ? null : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"error\">This field has to be URL address.</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"has-label \" + (passwordState ? \"has-success\" : \"has-error\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPassword <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPassword(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (minLength(e.target.value, 1)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPasswordState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPasswordState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{passwordState ? null : <label className=\"error\">This field is required.</label>}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Col className=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"has-label \" + (confirmPasswordState ? \"has-success\" : \"has-error\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tConfirm Password <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetConfirmPassword(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (equalTo(e.target.value, password)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetConfirmPasswordState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetConfirmPasswordState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{confirmPasswordState ? null : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"error\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tThis field is required and needs to be equal with your entered password.\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-category form-category\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\tRequired fields\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-fill pull-right\"\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"info\"\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tupdateProfile();\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\tUpdate Profile\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t\t\t<Nav>\n\t\t\t\t\t\t\t\t\t\t\t\t<Nav.Item as=\"h4\" className=\"my-0 py-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-toggle=\"collapse\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-expanded={multipleExpandablePanels.includes(2)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => toggleMultipleExpandablePanels(e, 2)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"nc-icon nc-paper-2\"></i> Your Bets\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t\t\t\t\t\t<br />\n\t\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t<Collapse className=\"collapse\" id=\"collapseTwo\" in={multipleExpandablePanels.includes(2)}>\n\t\t\t\t\t\t\t\t\t\t<Card.Body>Testing</Card.Body>\n\t\t\t\t\t\t\t\t\t</Collapse>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Row>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={{ span: 12, order: 1 }} md={{ span: 4, order: 2 }}>\n\t\t\t\t\t<Card className=\"card-user\">\n\t\t\t\t\t\t<Card.Header className=\"no-padding\">\n\t\t\t\t\t\t\t<div className=\"card-image\">\n\t\t\t\t\t\t\t\t<img alt=\"...\" src={\"../static/img/full-screen-image-3.jpg\"}></img>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<div className=\"author\">\n\t\t\t\t\t\t\t\t<img alt=\"...\" className=\"avatar border-gray\" src={\"../static/img/faces/face-0.jpg\"}></img>\n\t\t\t\t\t\t\t\t<Card.Title as=\"h5\">{user.name}</Card.Title>\n\t\t\t\t\t\t\t\t<p className=\"card-description\">{user.username}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"card-description text-center\">Balance</div>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t<div className=\"button-container text-center\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"btn-simple btn-icon\"\n\t\t\t\t\t\t\t\t\thref=\"#pablo\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-facebook-square\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"btn-simple btn-icon\"\n\t\t\t\t\t\t\t\t\thref=\"#pablo\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-twitter\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"btn-simple btn-icon\"\n\t\t\t\t\t\t\t\t\thref=\"#pablo\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-google-plus-square\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nexport default UserPage;\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tlet session = await getSession({ req });\n\n\tif (session) {\n\t\tconst user = await prisma.user.findUnique({\n\t\t\twhere: {\n\t\t\t\tid: session.user.id,\n\t\t\t},\n\t\t\tinclude: {\n\t\t\t\trequester: true,\n\t\t\t\taccepter: true,\n\t\t\t\trecipient: true,\n\t\t\t},\n\t\t});\n\t\tdelete user.password;\n\t\tuser.emailVerified = JSON.stringify(user.emailVerified);\n\t\tuser.createdAt = JSON.stringify(user.createdAt);\n\t\tuser.updatedAt = JSON.stringify(user.updatedAt);\n\t\tsession.user = user;\n\t\treturn {\n\t\t\tprops: { session },\n\t\t};\n\t} else {\n\t\tres.writeHead(302, { Location: \"/\" });\n\t\tres.end();\n\t\treturn { props: {} };\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}