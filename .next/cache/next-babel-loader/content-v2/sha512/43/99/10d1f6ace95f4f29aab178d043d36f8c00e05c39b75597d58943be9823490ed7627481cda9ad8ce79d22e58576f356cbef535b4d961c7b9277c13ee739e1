{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/UserPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getSession } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { Badge, Button, Card, Form, InputGroup, Navbar, Nav, Container, Row, Col } from \"react-bootstrap\";\n\nconst emailValidation = value => /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\n\nconst urlValidation = value => {\n  let returnValue = true;\n\n  try {\n    new URL(value);\n  } catch (e) {\n    returnValue = false;\n  } finally {\n    return returnValue;\n  }\n\n  return false;\n};\n\nconst isRequired = value => value !== null && value !== \"\" && value;\n\nconst equalTo = (value1, value2) => value1 === value2;\n\nconst minLength = (value, length) => value.length >= length;\n\nconst maxLength = (value, length) => value.length <= length && value !== \"\";\n\nfunction UserPage(props) {\n  const user = props.session.user;\n  const {\n    0: newUserState,\n    1: setNewUserState\n  } = useState(false);\n  const {\n    0: username,\n    1: setUsername\n  } = useState(user === null || user === void 0 ? void 0 : user.username);\n  const {\n    0: usernameState,\n    1: setUsernameState\n  } = useState(true);\n  const {\n    0: name,\n    1: setName\n  } = useState(user === null || user === void 0 ? void 0 : user.name);\n  const {\n    0: nameState,\n    1: setNameState\n  } = useState(true);\n  const {\n    0: email,\n    1: setEmail\n  } = useState(user === null || user === void 0 ? void 0 : user.email);\n  const {\n    0: emailState,\n    1: setEmailState\n  } = useState(true);\n  const {\n    0: imageURL,\n    1: setImageURL\n  } = useState(user === null || user === void 0 ? void 0 : user.image);\n  const {\n    0: imageURLState,\n    1: setImageURLState\n  } = useState(true);\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: passwordState,\n    1: setPasswordState\n  } = useState(true);\n  const {\n    0: confirmPassword,\n    1: setConfirmPassword\n  } = useState(\"\");\n  const {\n    0: confirmPasswordState,\n    1: setConfirmPasswordState\n  } = useState(true);\n  const router = useRouter();\n\n  const toggleMultipleExpandablePanels = (event, value) => {\n    if (multipleExpandablePanels.includes(value)) {\n      setMultipleExpandablePanels(multipleExpandablePanels.filter(prop => prop !== value));\n    } else {\n      setMultipleExpandablePanels([...multipleExpandablePanels, value]);\n    }\n  };\n\n  console.log(\"props user\", user);\n\n  const updateProfile = () => {\n    if (!usernameState || !isRequired(username)) {\n      setUsernameState(false);\n    } else {\n      setUsernameState(true);\n    }\n\n    if (!emailState || !emailValidation(email)) {\n      setEmailState(false);\n    } else {\n      setEmailState(true);\n    }\n\n    if (!passwordState || !minLength(password, 1)) {\n      setPasswordState(false);\n    } else {\n      setPasswordState(true);\n    }\n\n    if (!confirmPasswordState || !minLength(confirmPassword, 1) || !equalTo(confirmPassword, password)) {\n      setConfirmPasswordState(false);\n    } else {\n      setConfirmPasswordState(true);\n    }\n\n    if (usernameState && emailState && passwordState && confirmPasswordState) {\n      let updatedUser = {\n        username,\n        name,\n        email,\n        password\n      };\n      axios.post(\"http://localhost:4000/api/user\", updatedUser);\n    }\n  };\n\n  useEffect(() => {\n    if (router.query.newUser) {\n      setNewUserState(true);\n    }\n  }, [router]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"8\",\n        sm: \"6\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: updateProfile,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              children: /*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  as: \"h4\",\n                  children: \"Edit Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"pr-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"has-label \" + (usernameState ? \"has-success\" : \"has-error\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Username \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"star\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 22\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      placeholder: \"Username\",\n                      name: \"username\",\n                      type: \"text\",\n                      value: username,\n                      onChange: e => {\n                        setUsername(e.target.value);\n\n                        if (isRequired(e.target.value)) {\n                          setUsernameState(true);\n                        } else {\n                          setUsernameState(false);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 12\n                    }, this), usernameState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"error\",\n                      children: \"This field is required.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 36\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"p1-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"has-label \" + (nameState ? \"has-success\" : \"has-error\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Name\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      placeholder: \"Name\",\n                      name: \"name\",\n                      type: \"text\",\n                      value: name,\n                      onChange: e => {\n                        setName(e.target.value); // if (isRequired(e.target.value)) {\n                        // \tsetNameState(true);\n                        // } else {\n                        // \tsetNameState(false);\n                        // }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 127,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"pr-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"has-label \" + (emailState ? \"has-success\" : \"has-error\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Email Address \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"star\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 150,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      placeholder: \"Email\",\n                      name: \"email\",\n                      type: \"text\",\n                      value: email,\n                      onChange: e => {\n                        setEmail(e.target.value);\n\n                        if (emailValidation(e.target.value)) {\n                          setEmailState(true);\n                        } else {\n                          setEmailState(false);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 12\n                    }, this), emailState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"error\",\n                      children: \"This field is required.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"pl-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"has-label \" + (imageURLState ? \"has-success\" : \"has-error\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: \"Image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      placeholder: \"URL\",\n                      name: \"image\",\n                      type: \"text\",\n                      value: imageURL,\n                      onChange: e => {\n                        setImageURL(e.target.value);\n\n                        if (urlValidation(e.target.value)) {\n                          setImageURLState(true);\n                        } else {\n                          setImageURLState(false);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  className: \"pr-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"has-label \" + (passwordState ? \"has-success\" : \"has-error\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"star\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 22\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      placeholder: \"Password\",\n                      name: \"password\",\n                      type: \"password\",\n                      value: password,\n                      onChange: e => {\n                        setPassword(e.target.value);\n\n                        if (minLength(e.target.value, 1)) {\n                          setPasswordState(true);\n                        } else {\n                          setPasswordState(false);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 12\n                    }, this), passwordState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"error\",\n                      children: \"This field is required.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 36\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"p1-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                    className: \"has-label \" + (confirmPasswordState ? \"has-success\" : \"has-error\"),\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Confirm Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"star\",\n                        children: \"*\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 30\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      placeholder: \"Password\",\n                      name: \"confirmPassword\",\n                      type: \"password\",\n                      value: confirmPassword,\n                      onChange: e => {\n                        setConfirmPassword(e.target.value);\n\n                        if (equalTo(e.target.value, password)) {\n                          setConfirmPasswordState(true);\n                        } else {\n                          setConfirmPasswordState(false);\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 12\n                    }, this), confirmPasswordState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"error\",\n                      children: \"This field is required and needs to be equal with your entered password.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-category form-category\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"star\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 10\n                }, this), \"Required fields\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-fill pull-right\",\n                type: \"submit\",\n                variant: \"info\",\n                children: \"Update Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"clearfix\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"card-user\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"no-padding\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-image\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"...\",\n                src: \"../static/img/full-screen-image-3.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"...\",\n                className: \"avatar border-gray\",\n                src: \"../static/img/faces/face-0.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                as: \"h5\",\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-description\",\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-description text-center\",\n              children: \"Balance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-container text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-simple btn-icon\",\n                href: \"#pablo\",\n                onClick: e => e.preventDefault(),\n                variant: \"link\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fab fa-facebook-square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-simple btn-icon\",\n                href: \"#pablo\",\n                onClick: e => e.preventDefault(),\n                variant: \"link\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fab fa-twitter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-simple btn-icon\",\n                href: \"#pablo\",\n                onClick: e => e.preventDefault(),\n                variant: \"link\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fab fa-google-plus-square\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n}\n\nexport default UserPage;\nexport async function getServerSideProps(context) {\n  const {\n    req,\n    res\n  } = context;\n  const session = await getSession({\n    req\n  });\n\n  if (session) {\n    return {\n      props: {\n        session\n      }\n    };\n  } else {\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  }\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/UserPage.js"],"names":["React","useState","useEffect","getSession","useRouter","axios","Badge","Button","Card","Form","InputGroup","Navbar","Nav","Container","Row","Col","emailValidation","value","test","urlValidation","returnValue","URL","e","isRequired","equalTo","value1","value2","minLength","length","maxLength","UserPage","props","user","session","newUserState","setNewUserState","username","setUsername","usernameState","setUsernameState","name","setName","nameState","setNameState","email","setEmail","emailState","setEmailState","imageURL","setImageURL","image","imageURLState","setImageURLState","password","setPassword","passwordState","setPasswordState","confirmPassword","setConfirmPassword","confirmPasswordState","setConfirmPasswordState","router","toggleMultipleExpandablePanels","event","multipleExpandablePanels","includes","setMultipleExpandablePanels","filter","prop","console","log","updateProfile","updatedUser","post","query","newUser","target","preventDefault","getServerSideProps","context","req","res","writeHead","Location","end"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getSession } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport { Badge, Button, Card, Form, InputGroup, Navbar, Nav, Container, Row, Col } from \"react-bootstrap\";\n\nconst emailValidation = (value) =>\n\t/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\nconst urlValidation = (value) => {\n\tlet returnValue = true;\n\ttry {\n\t\tnew URL(value);\n\t} catch (e) {\n\t\treturnValue = false;\n\t} finally {\n\t\treturn returnValue;\n\t}\n\treturn false;\n};\nconst isRequired = (value) => value !== null && value !== \"\" && value;\nconst equalTo = (value1, value2) => value1 === value2;\nconst minLength = (value, length) => value.length >= length;\nconst maxLength = (value, length) => value.length <= length && value !== \"\";\n\nfunction UserPage(props) {\n\tconst user = props.session.user;\n\tconst [newUserState, setNewUserState] = useState(false);\n\tconst [username, setUsername] = useState(user?.username);\n\tconst [usernameState, setUsernameState] = useState(true);\n\tconst [name, setName] = useState(user?.name);\n\tconst [nameState, setNameState] = useState(true);\n\tconst [email, setEmail] = useState(user?.email);\n\tconst [emailState, setEmailState] = useState(true);\n\tconst [imageURL, setImageURL] = useState(user?.image);\n\tconst [imageURLState, setImageURLState] = useState(true);\n\tconst [password, setPassword] = useState(\"\");\n\tconst [passwordState, setPasswordState] = useState(true);\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\n\tconst [confirmPasswordState, setConfirmPasswordState] = useState(true);\n\tconst router = useRouter();\n\n\tconst toggleMultipleExpandablePanels = (event, value) => {\n\t\tif (multipleExpandablePanels.includes(value)) {\n\t\t\tsetMultipleExpandablePanels(multipleExpandablePanels.filter((prop) => prop !== value));\n\t\t} else {\n\t\t\tsetMultipleExpandablePanels([...multipleExpandablePanels, value]);\n\t\t}\n\t};\n\n\tconsole.log(\"props user\", user);\n\n\tconst updateProfile = () => {\n\t\tif (!usernameState || !isRequired(username)) {\n\t\t\tsetUsernameState(false);\n\t\t} else {\n\t\t\tsetUsernameState(true);\n\t\t}\n\t\tif (!emailState || !emailValidation(email)) {\n\t\t\tsetEmailState(false);\n\t\t} else {\n\t\t\tsetEmailState(true);\n\t\t}\n\t\tif (!passwordState || !minLength(password, 1)) {\n\t\t\tsetPasswordState(false);\n\t\t} else {\n\t\t\tsetPasswordState(true);\n\t\t}\n\t\tif (!confirmPasswordState || !minLength(confirmPassword, 1) || !equalTo(confirmPassword, password)) {\n\t\t\tsetConfirmPasswordState(false);\n\t\t} else {\n\t\t\tsetConfirmPasswordState(true);\n\t\t}\n\n\t\tif (usernameState && emailState && passwordState && confirmPasswordState) {\n\t\t\tlet updatedUser = {\n\t\t\t\tusername,\n\t\t\t\tname,\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t};\n\t\t\taxios.post(\"http://localhost:4000/api/user\", updatedUser);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (router.query.newUser) {\n\t\t\tsetNewUserState(true);\n\t\t}\n\t}, [router]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<Row>\n\t\t\t\t<Col md=\"8\" sm=\"6\">\n\t\t\t\t\t<Form onSubmit={updateProfile}>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t<Card.Title as=\"h4\">Edit Profile</Card.Title>\n\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (usernameState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\tUsername <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetUsername(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (isRequired(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetUsernameState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetUsernameState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t{usernameState ? null : <label className=\"error\">This field is required.</label>}\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col className=\"p1-1\">\n\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (nameState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetName(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t// if (isRequired(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tsetNameState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// \tsetNameState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (emailState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\tEmail Address <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmail(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (emailValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmailState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmailState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t{emailState ? null : <label className=\"error\">This field is required.</label>}\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col className=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (imageURLState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t<label>Image</label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"URL\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={imageURL}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURL(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (urlValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURLState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURLState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (passwordState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\tPassword <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetPassword(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (minLength(e.target.value, 1)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPasswordState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPasswordState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t{passwordState ? null : <label className=\"error\">This field is required.</label>}\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t<Col className=\"p1-1\">\n\t\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\t\tclassName={\"has-label \" + (confirmPasswordState ? \"has-success\" : \"has-error\")}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\tConfirm Password <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetConfirmPassword(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (equalTo(e.target.value, password)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetConfirmPasswordState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetConfirmPasswordState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t{confirmPasswordState ? null : (\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"error\">\n\t\t\t\t\t\t\t\t\t\t\t\t\tThis field is required and needs to be equal with your entered password.\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t<div className=\"card-category form-category\">\n\t\t\t\t\t\t\t\t\t<span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\tRequired fields\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t\t<Button className=\"btn-fill pull-right\" type=\"submit\" variant=\"info\">\n\t\t\t\t\t\t\t\t\tUpdate Profile\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<div className=\"clearfix\"></div>\n\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Form>\n\t\t\t\t</Col>\n\t\t\t\t<Col md=\"4\">\n\t\t\t\t\t<Card className=\"card-user\">\n\t\t\t\t\t\t<Card.Header className=\"no-padding\">\n\t\t\t\t\t\t\t<div className=\"card-image\">\n\t\t\t\t\t\t\t\t<img alt=\"...\" src={\"../static/img/full-screen-image-3.jpg\"}></img>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t<div className=\"author\">\n\t\t\t\t\t\t\t\t<img alt=\"...\" className=\"avatar border-gray\" src={\"../static/img/faces/face-0.jpg\"}></img>\n\t\t\t\t\t\t\t\t<Card.Title as=\"h5\">{user.name}</Card.Title>\n\t\t\t\t\t\t\t\t<p className=\"card-description\">{user.username}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"card-description text-center\">Balance</div>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t<div className=\"button-container text-center\">\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"btn-simple btn-icon\"\n\t\t\t\t\t\t\t\t\thref=\"#pablo\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-facebook-square\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"btn-simple btn-icon\"\n\t\t\t\t\t\t\t\t\thref=\"#pablo\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-twitter\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName=\"btn-simple btn-icon\"\n\t\t\t\t\t\t\t\t\thref=\"#pablo\"\n\t\t\t\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<i className=\"fab fa-google-plus-square\"></i>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nexport default UserPage;\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\n\tif (session) {\n\t\treturn {\n\t\t\tprops: { session },\n\t\t};\n\t} else {\n\t\tres.writeHead(302, { Location: \"/\" });\n\t\tres.end();\n\t\treturn { props: {} };\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}