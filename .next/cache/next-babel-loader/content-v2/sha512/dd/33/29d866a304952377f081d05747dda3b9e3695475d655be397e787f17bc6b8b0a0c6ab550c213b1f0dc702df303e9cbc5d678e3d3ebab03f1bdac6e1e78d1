{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/components/SportCard.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Card, Button, Tab, Accordion, Icon, Grid } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport GameScoreTable from \"./GameScoreTable\";\n\nclass SportCard extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClick\", (e, titleProps) => {\n      const {\n        index\n      } = titleProps;\n      const {\n        activeIndex\n      } = this.state;\n      const newIndex = activeIndex === index ? -1 : index;\n      this.setState({\n        activeIndex: newIndex\n      });\n    });\n\n    this.state = {\n      index: 0,\n      activeIndex: 0,\n      gameScoreCard: {}\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  gameScoreCardHelper(game) {\n    let gameData = {\n      shortDetail: game.competitions[0].status.type.shortDetail,\n      away: {\n        logo: game.competitions[0].competitors[0].team.logo,\n        name: game.competitions[0].competitors[0].team.name,\n        totalRecord: game.competitions[0].competitors[0].records[0].summary,\n        record: game.competitions[0].competitors[0].records[2].summary,\n        linescore1: game.competitions[0].competitors[0].linescores[0].value,\n        linescore2: game.competitions[0].competitors[0].linescores[1].value,\n        linescore3: game.competitions[0].competitors[0].linescores[2].value,\n        linescore4: game.competitions[0].competitors[0].linescores[3].value,\n        score: game.competitions[0].competitors[0].score\n      },\n      home: {\n        logo: game.competitions[0].competitors[1].team.logo,\n        name: game.competitions[0].competitors[1].team.name,\n        totalRecord: game.competitions[0].competitors[1].records[0].summary,\n        record: game.competitions[0].competitors[1].records[2].summary,\n        linescore1: game.competitions[0].competitors[1].linescores[0].value,\n        linescore2: game.competitions[0].competitors[1].linescores[1].value,\n        linescore3: game.competitions[0].competitors[1].linescores[2].value,\n        linescore4: game.competitions[0].competitors[1].linescores[3].value,\n        score: game.competitions[0].competitors[1].score\n      }\n    };\n    return gameData;\n  }\n\n  renderGamesCards(sportId) {\n    const {\n      activeIndex\n    } = this.state;\n    let gameItems = this.props.sportData[sportId].data.events.map(game => {\n      const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      let gameTime = new Date(game.date).toLocaleString(\"en-US\", {\n        timeZone: timeZone\n      });\n      let eventDate = gameTime.split(\",\");\n      console.log(this.gameScoreCardHelper(game));\n      console.log(game);\n      return {\n        date: eventDate[0],\n        description: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            celled: \"internally\",\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 9,\n              children: /*#__PURE__*/_jsxDEV(GameScoreTable, {\n                gameScoreCardData: this.gameScoreCardHelper(game)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 2,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Last Play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 5,\n              children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"TOP PERFORMERS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"ui avatar image\",\n                  src: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Title, {\n              active: activeIndex === game.event_id,\n              index: game.event_id,\n              onClick: this.handleClick,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"dropdown\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 9\n              }, this), \"Matchup Predictor\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Content, {\n              active: activeIndex === game.event_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this),\n        fluid: true\n      };\n    });\n    let datesArray = gameItems.map(obj => {\n      return obj.date;\n    });\n    let dates = datesArray.filter((item, index) => datesArray.indexOf(item) === index).reduce((unique, item) => unique.includes(item) ? unique : [...unique, item], []);\n    let eventsResult = dates.map(date => {\n      return gameItems.filter(obj => {\n        return obj.date === date;\n      });\n    });\n    let paneResult = eventsResult.map(obj => {\n      let tempDate = new Date(obj[0].date);\n      let tempsDate = tempDate.toString().slice(0, 10);\n      return {\n        menuItem: obj[0].date,\n        render: () => /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          attached: false,\n          style: {\n            overflow: \"auto\",\n            maxHeight: \"75em\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: tempsDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Card.Group, {\n            items: obj\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this)\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Tab, {\n      menu: {\n        attached: false\n      },\n      panes: paneResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderGamesCards(this.props.sportIndex)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default SportCard;","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/components/SportCard.js"],"names":["React","Component","Card","Button","Tab","Accordion","Icon","Grid","Link","GameScoreTable","SportCard","constructor","props","e","titleProps","index","activeIndex","state","newIndex","setState","gameScoreCard","handleClick","bind","gameScoreCardHelper","game","gameData","shortDetail","competitions","status","type","away","logo","competitors","team","name","totalRecord","records","summary","record","linescore1","linescores","value","linescore2","linescore3","linescore4","score","home","renderGamesCards","sportId","gameItems","sportData","data","events","map","timeZone","Intl","DateTimeFormat","resolvedOptions","gameTime","Date","date","toLocaleString","eventDate","split","console","log","description","event_id","fluid","datesArray","obj","dates","filter","item","indexOf","reduce","unique","includes","eventsResult","paneResult","tempDate","tempsDate","toString","slice","menuItem","render","overflow","maxHeight","attached","sportIndex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Button, Tab, Accordion, Icon, Grid } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport GameScoreTable from \"./GameScoreTable\";\n\nclass SportCard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tindex: 0,\n\t\t\tactiveIndex: 0,\n\t\t\tgameScoreCard: {},\n\t\t};\n\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick = (e, titleProps) => {\n\t\tconst { index } = titleProps;\n\t\tconst { activeIndex } = this.state;\n\t\tconst newIndex = activeIndex === index ? -1 : index;\n\n\t\tthis.setState({ activeIndex: newIndex });\n\t};\n\n\tgameScoreCardHelper(game) {\n\t\tlet gameData = {\n\t\t\tshortDetail: game.competitions[0].status.type.shortDetail,\n\t\t\taway: {\n\t\t\t\tlogo: game.competitions[0].competitors[0].team.logo,\n\t\t\t\tname: game.competitions[0].competitors[0].team.name,\n\t\t\t\ttotalRecord: game.competitions[0].competitors[0].records[0].summary,\n\t\t\t\trecord: game.competitions[0].competitors[0].records[2].summary,\n\t\t\t\tlinescore1: game.competitions[0].competitors[0].linescores[0].value,\n\t\t\t\tlinescore2: game.competitions[0].competitors[0].linescores[1].value,\n\t\t\t\tlinescore3: game.competitions[0].competitors[0].linescores[2].value,\n\t\t\t\tlinescore4: game.competitions[0].competitors[0].linescores[3].value,\n\t\t\t\tscore: game.competitions[0].competitors[0].score,\n\t\t\t},\n\t\t\thome: {\n\t\t\t\tlogo: game.competitions[0].competitors[1].team.logo,\n\t\t\t\tname: game.competitions[0].competitors[1].team.name,\n\t\t\t\ttotalRecord: game.competitions[0].competitors[1].records[0].summary,\n\t\t\t\trecord: game.competitions[0].competitors[1].records[2].summary,\n\t\t\t\tlinescore1: game.competitions[0].competitors[1].linescores[0].value,\n\t\t\t\tlinescore2: game.competitions[0].competitors[1].linescores[1].value,\n\t\t\t\tlinescore3: game.competitions[0].competitors[1].linescores[2].value,\n\t\t\t\tlinescore4: game.competitions[0].competitors[1].linescores[3].value,\n\t\t\t\tscore: game.competitions[0].competitors[1].score,\n\t\t\t},\n\t\t};\n\t\treturn gameData;\n\t}\n\n\trenderGamesCards(sportId) {\n\t\tconst { activeIndex } = this.state;\n\n\t\tlet gameItems = this.props.sportData[sportId].data.events.map((game) => {\n\t\t\tconst timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tlet gameTime = new Date(game.date).toLocaleString(\"en-US\", {\n\t\t\t\ttimeZone: timeZone,\n\t\t\t});\n\t\t\tlet eventDate = gameTime.split(\",\");\n\n\t\t\tconsole.log(this.gameScoreCardHelper(game));\n\t\t\tconsole.log(game);\n\n\t\t\treturn {\n\t\t\t\tdate: eventDate[0],\n\t\t\t\tdescription: (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Grid celled=\"internally\">\n\t\t\t\t\t\t\t<Grid.Column width={9}>\n\t\t\t\t\t\t\t\t<GameScoreTable gameScoreCardData={this.gameScoreCardHelper(game)} />\n\t\t\t\t\t\t\t</Grid.Column>\n\n\t\t\t\t\t\t\t<Grid.Column width={2}>\n\t\t\t\t\t\t\t\t<div>{\"Last Play\"}</div>\n\t\t\t\t\t\t\t</Grid.Column>\n\n\t\t\t\t\t\t\t<Grid.Column width={5}>\n\t\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t\t<div>{\"TOP PERFORMERS\"}</div>\n\t\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t\t\t<Grid.Row>\n\t\t\t\t\t\t\t\t\t<img className=\"ui avatar image\" src={\"\"} />\n\t\t\t\t\t\t\t\t</Grid.Row>\n\t\t\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t\t<Accordion.Title\n\t\t\t\t\t\t\t\tactive={activeIndex === game.event_id}\n\t\t\t\t\t\t\t\tindex={game.event_id}\n\t\t\t\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Icon name=\"dropdown\" />\n\t\t\t\t\t\t\t\tMatchup Predictor\n\t\t\t\t\t\t\t</Accordion.Title>\n\t\t\t\t\t\t\t<Accordion.Content active={activeIndex === game.event_id}></Accordion.Content>\n\t\t\t\t\t\t</Accordion>\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\tfluid: true,\n\t\t\t};\n\t\t});\n\n\t\tlet datesArray = gameItems.map((obj) => {\n\t\t\treturn obj.date;\n\t\t});\n\n\t\tlet dates = datesArray\n\t\t\t.filter((item, index) => datesArray.indexOf(item) === index)\n\t\t\t.reduce((unique, item) => (unique.includes(item) ? unique : [...unique, item]), []);\n\n\t\tlet eventsResult = dates.map((date) => {\n\t\t\treturn gameItems.filter((obj) => {\n\t\t\t\treturn obj.date === date;\n\t\t\t});\n\t\t});\n\n\t\tlet paneResult = eventsResult.map((obj) => {\n\t\t\tlet tempDate = new Date(obj[0].date);\n\t\t\tlet tempsDate = tempDate.toString().slice(0, 10);\n\n\t\t\treturn {\n\t\t\t\tmenuItem: obj[0].date,\n\t\t\t\trender: () => (\n\t\t\t\t\t<Tab.Pane attached={false} style={{ overflow: \"auto\", maxHeight: \"75em\" }}>\n\t\t\t\t\t\t<h2>{tempsDate}</h2>\n\t\t\t\t\t\t<Card.Group items={obj} />\n\t\t\t\t\t</Tab.Pane>\n\t\t\t\t),\n\t\t\t};\n\t\t});\n\n\t\treturn <Tab menu={{ attached: false }} panes={paneResult} />;\n\t}\n\n\trender() {\n\t\treturn <div>{this.renderGamesCards(this.props.sportIndex)}</div>;\n\t}\n}\n\nexport default SportCard;\n"]},"metadata":{},"sourceType":"module"}