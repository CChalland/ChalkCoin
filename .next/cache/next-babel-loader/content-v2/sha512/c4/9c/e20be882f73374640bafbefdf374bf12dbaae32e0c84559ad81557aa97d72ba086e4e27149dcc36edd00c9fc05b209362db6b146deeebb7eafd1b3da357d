{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _classCallCheck from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\"; // import { Card, Button } from \"semantic-ui-react\";\n// import { Link } from \"../routes\";\n// import Layout from \"../components/Layout\";\n// import SportTabs from \"../components/SportTabs\";\n// import { SportContext } from \"../contexts/SportContext\";\n\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nvar BetokenIndex = /*#__PURE__*/function (_Component) {\n  _inherits(BetokenIndex, _Component);\n\n  var _super = _createSuper(BetokenIndex);\n\n  // static contextType = SportContext;\n  function BetokenIndex(props) {\n    var _this;\n\n    _classCallCheck(this, BetokenIndex);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      sportsData: [],\n      blockchain: {},\n      loadingData: false,\n      fetchedSportData: false\n    }; // this.renderCurrentBets = this.renderCurrentBets.bind(this);\n\n    return _this;\n  } // renderCurrentBets(blockchain) {\n  // \tconst betItems = blockchain.openTransactions.map((bet) => {\n  // \t\treturn {\n  // \t\t\theader: bet.amount,\n  // \t\t\tdescription: <a>View Bet</a>,\n  // \t\t\tfluid: true,\n  // \t\t};\n  // \t});\n  // \treturn <Card.Group items={betItems} />;\n  // }\n  // render() {\n  // \t//let { loadingData } = this.state;\n  // \tconst { sportsData, blockchain, fetchedSportData } = this.context;\n  // \tlet result;\n  // \tif (fetchedSportData) {\n  // \t\tresult = (\n  // \t\t\t<div>\n  // \t\t\t\t<br />\n  // \t\t\t\t<SportTabs allSportsData={sportsData} />\n  // \t\t\t\t<h3>Open Bets</h3>\n  // \t\t\t\t<Button floated=\"right\" content=\"Create Bet\" icon=\"add circle\" primary />\n  // \t\t\t\t{this.renderCurrentBets(blockchain)}\n  // \t\t\t</div>\n  // \t\t);\n  // \t} else {\n  // \t\tresult = (\n  // \t\t\t<div>\n  // \t\t\t\t<h3>Loading...</h3>\n  // \t\t\t</div>\n  // \t\t);\n  // \t}\n  // \treturn <Layout>{result}</Layout>;\n  // }\n\n\n  _createClass(BetokenIndex, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Next.js React Bootstrap\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 6\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }, this);\n    }\n  }]);\n\n  return BetokenIndex;\n}(Component);\n\nexport default BetokenIndex;","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/index.js"],"names":["React","Component","Container","Row","Col","BetokenIndex","props","state","sportsData","blockchain","loadingData","fetchedSportData"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;;IAEMC,Y;;;;;AACL;AAEA,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE,EADA;AAEZC,MAAAA,UAAU,EAAE,EAFA;AAGZC,MAAAA,WAAW,EAAE,KAHD;AAIZC,MAAAA,gBAAgB,EAAE;AAJN,KAAb,CAFkB,CASlB;;AATkB;AAUlB,G,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;6BAES;AACR,0BACC,QAAC,SAAD;AAAA,+BACC,QAAC,GAAD;AAAA,iCACC,QAAC,GAAD;AAAA,mCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AASA;;;;EA/DyBV,S;;AAkE3B,eAAeI,YAAf","sourcesContent":["import React, { Component } from \"react\";\n// import { Card, Button } from \"semantic-ui-react\";\n// import { Link } from \"../routes\";\n// import Layout from \"../components/Layout\";\n// import SportTabs from \"../components/SportTabs\";\n// import { SportContext } from \"../contexts/SportContext\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nclass BetokenIndex extends Component {\n\t// static contextType = SportContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsportsData: [],\n\t\t\tblockchain: {},\n\t\t\tloadingData: false,\n\t\t\tfetchedSportData: false,\n\t\t};\n\n\t\t// this.renderCurrentBets = this.renderCurrentBets.bind(this);\n\t}\n\n\t// renderCurrentBets(blockchain) {\n\t// \tconst betItems = blockchain.openTransactions.map((bet) => {\n\t// \t\treturn {\n\t// \t\t\theader: bet.amount,\n\t// \t\t\tdescription: <a>View Bet</a>,\n\t// \t\t\tfluid: true,\n\t// \t\t};\n\t// \t});\n\n\t// \treturn <Card.Group items={betItems} />;\n\t// }\n\n\t// render() {\n\t// \t//let { loadingData } = this.state;\n\t// \tconst { sportsData, blockchain, fetchedSportData } = this.context;\n\n\t// \tlet result;\n\t// \tif (fetchedSportData) {\n\t// \t\tresult = (\n\t// \t\t\t<div>\n\t// \t\t\t\t<br />\n\t// \t\t\t\t<SportTabs allSportsData={sportsData} />\n\t// \t\t\t\t<h3>Open Bets</h3>\n\t// \t\t\t\t<Button floated=\"right\" content=\"Create Bet\" icon=\"add circle\" primary />\n\t// \t\t\t\t{this.renderCurrentBets(blockchain)}\n\t// \t\t\t</div>\n\t// \t\t);\n\t// \t} else {\n\t// \t\tresult = (\n\t// \t\t\t<div>\n\t// \t\t\t\t<h3>Loading...</h3>\n\t// \t\t\t</div>\n\t// \t\t);\n\t// \t}\n\n\t// \treturn <Layout>{result}</Layout>;\n\t// }\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h1>Next.js React Bootstrap</h1>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default BetokenIndex;\n"]},"metadata":{},"sourceType":"module"}