{"ast":null,"code":"import prisma from \"../../contexts/prisma\";\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\nexport default (async (req, res) => {\n  const session = await getSession({\n    req\n  });\n\n  if (req.method !== \"POST\") {\n    return res.status(405).json({\n      message: \"Method not allowed\"\n    });\n  } else if (req.method === \"POST\") {\n    const bet = req.body;\n\n    if (session) {\n      try {\n        return res.json({\n          bet\n        }); // const acceptedBet = await prisma.bet.update({\n        // \twhere: {\n        // \t\tid: bet.id,\n        // \t},\n        // \tdata: {\n        // \t\taccepted: true,\n        // \t\taccepterId: {\n        // \t\t\tconnect: {\n        // \t\t\t\tid: session.user.id,\n        // \t\t\t},\n        // \t\t},\n        // \t},\n        // });\n        // return res.json(acceptedBet);\n      } catch (e) {\n        console.log(e);\n\n        if (e.code === \"P2002\") {\n          return res.json({\n            error: `There's already an account with that ${e.meta.target[0]}`\n          });\n        } // throw e;\n\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/api/acceptBet.js"],"names":["prisma","getSession","axios","req","res","session","method","status","json","message","bet","body","e","console","log","code","error","meta","target"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAMC,OAAO,GAAG,MAAMJ,UAAU,CAAC;AAAEE,IAAAA;AAAF,GAAD,CAAhC;;AAEA,MAAIA,GAAG,CAACG,MAAJ,KAAe,MAAnB,EAA2B;AAC1B,WAAOF,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACA,GAFD,MAEO,IAAIN,GAAG,CAACG,MAAJ,KAAe,MAAnB,EAA2B;AACjC,UAAMI,GAAG,GAAGP,GAAG,CAACQ,IAAhB;;AACA,QAAIN,OAAJ,EAAa;AACZ,UAAI;AACH,eAAOD,GAAG,CAACI,IAAJ,CAAS;AAAEE,UAAAA;AAAF,SAAT,CAAP,CADG,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAhBD,CAgBE,OAAOE,CAAP,EAAU;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;;AACA,YAAIA,CAAC,CAACG,IAAF,KAAW,OAAf,EAAwB;AACvB,iBAAOX,GAAG,CAACI,IAAJ,CAAS;AAAEQ,YAAAA,KAAK,EAAG,wCAAuCJ,CAAC,CAACK,IAAF,CAAOC,MAAP,CAAc,CAAd,CAAiB;AAAlE,WAAT,CAAP;AACA,SAJU,CAKX;;AACA;AACD;AACD;AACD,CAjCD","sourcesContent":["import prisma from \"../../contexts/prisma\";\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\n\nexport default async (req, res) => {\n\tconst session = await getSession({ req });\n\n\tif (req.method !== \"POST\") {\n\t\treturn res.status(405).json({ message: \"Method not allowed\" });\n\t} else if (req.method === \"POST\") {\n\t\tconst bet = req.body;\n\t\tif (session) {\n\t\t\ttry {\n\t\t\t\treturn res.json({ bet });\n\t\t\t\t// const acceptedBet = await prisma.bet.update({\n\t\t\t\t// \twhere: {\n\t\t\t\t// \t\tid: bet.id,\n\t\t\t\t// \t},\n\t\t\t\t// \tdata: {\n\t\t\t\t// \t\taccepted: true,\n\t\t\t\t// \t\taccepterId: {\n\t\t\t\t// \t\t\tconnect: {\n\t\t\t\t// \t\t\t\tid: session.user.id,\n\t\t\t\t// \t\t\t},\n\t\t\t\t// \t\t},\n\t\t\t\t// \t},\n\t\t\t\t// });\n\t\t\t\t// return res.json(acceptedBet);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\tif (e.code === \"P2002\") {\n\t\t\t\t\treturn res.json({ error: `There's already an account with that ${e.meta.target[0]}` });\n\t\t\t\t}\n\t\t\t\t// throw e;\n\t\t\t}\n\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}