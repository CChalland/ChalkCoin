{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/contexts/Sports.Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport sportsReducer from \"../reducers/Sports.Reducer\";\nexport var SportContext = /*#__PURE__*/createContext();\nexport var SportDispatch = /*#__PURE__*/createContext();\nexport function SportProvider(props) {\n  _s();\n\n  var initialSportsData = [// { id: 1, abbrv: \"NCAAF\", sport: \"football\", display_name: \"NCAA Football\", league_name: \"college-football\", data: {}, reload: false },\n  {\n    id: 2,\n    abbrv: \"NFL\",\n    sport: \"football\",\n    display_name: \"NFL\",\n    league_name: \"nfl\",\n    data: {},\n    reload: false\n  }, {\n    id: 3,\n    abbrv: \"MLB\",\n    sport: \"baseball\",\n    display_name: \"MLB\",\n    league_name: \"mlb\",\n    data: {},\n    reload: false\n  }, {\n    id: 4,\n    abbrv: \"NBA\",\n    sport: \"basketball\",\n    display_name: \"NBA\",\n    league_name: \"nba\",\n    data: {},\n    reload: false\n  }, {\n    id: 5,\n    abbrv: \"NCAAM\",\n    sport: \"basketball\",\n    display_name: \"NCAA Men's Basketball\",\n    league_name: \"mens-college-basketball\",\n    data: {},\n    reload: false\n  }, {\n    id: 6,\n    abbrv: \"NHL\",\n    sport: \"hockey\",\n    display_name: \"NHL\",\n    league_name: \"nhl\",\n    data: {},\n    reload: false\n  }, {\n    id: 8,\n    abbrv: \"WNBA\",\n    sport: \"basketball\",\n    display_name: \"WNBA\",\n    league_name: \"wnba\",\n    data: {},\n    reload: false\n  } // { id: 10, abbrv: \"MLS\", sport: \"soccer\", display_name: \"MLS\", league_name: \"MLS\", data: {}, reload: false },\n  ]; // const [sportsData, setSportsData] = useState(initialSportsData);\n\n  var _useReducer = useReducer(sportsReducer, initialSportsData),\n      sportsData = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var _useState = useState({}),\n      blockchain = _useState[0],\n      setBlockchain = _useState[1];\n\n  var _useState2 = useState(false),\n      fetchedSportData = _useState2[0],\n      setFetchedSportData = _useState2[1];\n\n  useEffect(function () {\n    function getSportsData() {\n      return _getSportsData.apply(this, arguments);\n    }\n\n    function _getSportsData() {\n      _getSportsData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var removeSportsData, sportData, getNode1, response, blockchainData;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                removeSportsData = [];\n                sportData = sportsData;\n                getNode1 = \"http://localhost:3001/blockchain\";\n                _context2.next = 5;\n                return axios.get(getNode1);\n\n              case 5:\n                response = _context2.sent;\n                blockchainData = response.data;\n                _context2.prev = 7;\n                _context2.next = 10;\n                return Promise.all(sportData.map( /*#__PURE__*/function () {\n                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(league) {\n                    var leagueData, sortedGames, reloadData;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            _context.next = 2;\n                            return axios({\n                              method: \"GET\",\n                              url: \"http://site.api.espn.com/apis/site/v2/sports/\".concat(league.sport, \"/\").concat(league.league_name, \"/scoreboard\")\n                            }).then(function (response) {\n                              if (response.data.events.length === 0) {\n                                removeSportsData.push(league);\n                              } else {\n                                leagueData = response.data;\n                                sortedGames = response.data.events.filter(function (game) {\n                                  reloadData = true;\n                                  return game.status.type.state === \"in\";\n                                });\n                                sortedGames.push(response.data.events.filter(function (game) {\n                                  if (sortedGames.length === 0) reloadData = false;\n                                  return game.status.type.state === \"post\";\n                                }));\n                                sortedGames.push(response.data.events.filter(function (game) {\n                                  return game.status.type.state === \"pre\";\n                                }));\n                                leagueData.events = sortedGames.flat();\n                              }\n                            }.bind(_this));\n\n                          case 2:\n                            return _context.abrupt(\"return\", {\n                              id: league.id,\n                              abbrv: league.abbrv,\n                              sport: league.sport,\n                              display_name: league.display_name,\n                              league_name: league.league_name,\n                              data: leagueData,\n                              reload: reloadData\n                            });\n\n                          case 3:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }()));\n\n              case 10:\n                sportData = _context2.sent;\n                _context2.next = 16;\n                break;\n\n              case 13:\n                _context2.prev = 13;\n                _context2.t0 = _context2[\"catch\"](7);\n                console.log(_context2.t0.message);\n\n              case 16:\n                dispatch({\n                  type: \"ALL\",\n                  data: sportData\n                }); // setFetchedSportData(true);\n                // setBlockchain(blockchainData);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[7, 13]]);\n      }));\n      return _getSportsData.apply(this, arguments);\n    }\n\n    getSportsData();\n  }, [fetchedSportData]);\n  return /*#__PURE__*/_jsxDEV(SportContext.Provider, {\n    value: {\n      sportsData: sportsData,\n      blockchain: blockchain,\n      fetchedSportData: fetchedSportData\n    },\n    children: /*#__PURE__*/_jsxDEV(SportDispatch.Provider, {\n      value: dispatch,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 3\n  }, this);\n}\n\n_s(SportProvider, \"PpNp70Gis1ho5b4fd9liRfH4NjI=\");\n\n_c = SportProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SportProvider\");","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/contexts/Sports.Context.js"],"names":["React","createContext","useReducer","useEffect","useState","axios","sportsReducer","SportContext","SportDispatch","SportProvider","props","initialSportsData","id","abbrv","sport","display_name","league_name","data","reload","sportsData","dispatch","blockchain","setBlockchain","fetchedSportData","setFetchedSportData","getSportsData","removeSportsData","sportData","getNode1","get","response","blockchainData","Promise","all","map","league","method","url","then","events","length","push","leagueData","sortedGames","filter","game","reloadData","status","type","state","flat","bind","console","log","message","children"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport sportsReducer from \"../reducers/Sports.Reducer\";\n\nexport const SportContext = createContext();\nexport const SportDispatch = createContext();\n\nexport function SportProvider(props) {\n\tlet initialSportsData = [\n\t\t// { id: 1, abbrv: \"NCAAF\", sport: \"football\", display_name: \"NCAA Football\", league_name: \"college-football\", data: {}, reload: false },\n\t\t{\n\t\t\tid: 2,\n\t\t\tabbrv: \"NFL\",\n\t\t\tsport: \"football\",\n\t\t\tdisplay_name: \"NFL\",\n\t\t\tleague_name: \"nfl\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\tabbrv: \"MLB\",\n\t\t\tsport: \"baseball\",\n\t\t\tdisplay_name: \"MLB\",\n\t\t\tleague_name: \"mlb\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 4,\n\t\t\tabbrv: \"NBA\",\n\t\t\tsport: \"basketball\",\n\t\t\tdisplay_name: \"NBA\",\n\t\t\tleague_name: \"nba\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 5,\n\t\t\tabbrv: \"NCAAM\",\n\t\t\tsport: \"basketball\",\n\t\t\tdisplay_name: \"NCAA Men's Basketball\",\n\t\t\tleague_name: \"mens-college-basketball\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 6,\n\t\t\tabbrv: \"NHL\",\n\t\t\tsport: \"hockey\",\n\t\t\tdisplay_name: \"NHL\",\n\t\t\tleague_name: \"nhl\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t{\n\t\t\tid: 8,\n\t\t\tabbrv: \"WNBA\",\n\t\t\tsport: \"basketball\",\n\t\t\tdisplay_name: \"WNBA\",\n\t\t\tleague_name: \"wnba\",\n\t\t\tdata: {},\n\t\t\treload: false,\n\t\t},\n\t\t// { id: 10, abbrv: \"MLS\", sport: \"soccer\", display_name: \"MLS\", league_name: \"MLS\", data: {}, reload: false },\n\t];\n\t// const [sportsData, setSportsData] = useState(initialSportsData);\n\tconst [sportsData, dispatch] = useReducer(sportsReducer, initialSportsData);\n\tconst [blockchain, setBlockchain] = useState({});\n\tconst [fetchedSportData, setFetchedSportData] = useState(false);\n\n\tuseEffect(() => {\n\t\tasync function getSportsData() {\n\t\t\tlet removeSportsData = [];\n\t\t\tlet sportData = sportsData;\n\n\t\t\tconst getNode1 = `http://localhost:3001/blockchain`;\n\t\t\tlet response = await axios.get(getNode1);\n\t\t\tconst blockchainData = response.data;\n\n\t\t\ttry {\n\t\t\t\tsportData = await Promise.all(\n\t\t\t\t\tsportData.map(async (league) => {\n\t\t\t\t\t\tlet leagueData, sortedGames, reloadData;\n\n\t\t\t\t\t\tawait axios({\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\turl: `http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard`,\n\t\t\t\t\t\t}).then(\n\t\t\t\t\t\t\tfunction (response) {\n\t\t\t\t\t\t\t\tif (response.data.events.length === 0) {\n\t\t\t\t\t\t\t\t\tremoveSportsData.push(league);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tleagueData = response.data;\n\t\t\t\t\t\t\t\t\tsortedGames = response.data.events.filter((game) => {\n\t\t\t\t\t\t\t\t\t\treloadData = true;\n\t\t\t\t\t\t\t\t\t\treturn game.status.type.state === \"in\";\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tsortedGames.push(\n\t\t\t\t\t\t\t\t\t\tresponse.data.events.filter((game) => {\n\t\t\t\t\t\t\t\t\t\t\tif (sortedGames.length === 0) reloadData = false;\n\t\t\t\t\t\t\t\t\t\t\treturn game.status.type.state === \"post\";\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tsortedGames.push(\n\t\t\t\t\t\t\t\t\t\tresponse.data.events.filter((game) => {\n\t\t\t\t\t\t\t\t\t\t\treturn game.status.type.state === \"pre\";\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tleagueData.events = sortedGames.flat();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tid: league.id,\n\t\t\t\t\t\t\tabbrv: league.abbrv,\n\t\t\t\t\t\t\tsport: league.sport,\n\t\t\t\t\t\t\tdisplay_name: league.display_name,\n\t\t\t\t\t\t\tleague_name: league.league_name,\n\t\t\t\t\t\t\tdata: leagueData,\n\t\t\t\t\t\t\treload: reloadData,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err.message);\n\t\t\t}\n\n\t\t\tdispatch({ type: \"ALL\", data: sportData });\n\t\t\t// setFetchedSportData(true);\n\t\t\t// setBlockchain(blockchainData);\n\t\t}\n\n\t\tgetSportsData();\n\t}, [fetchedSportData]);\n\n\treturn (\n\t\t<SportContext.Provider value={{ sportsData, blockchain, fetchedSportData }}>\n\t\t\t<SportDispatch.Provider value={dispatch}>{props.children}</SportDispatch.Provider>\n\t\t</SportContext.Provider>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}