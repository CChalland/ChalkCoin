{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Select, { components } from \"react-select\"; // const { Option } = components;\n// const IconOption = (props) => (\n// \t<Option {...props}>\n// \t\t<SomeIcon />\n// \t\t{props.data.label}\n// \t</Option>\n// );\n\nfunction Test(props) {\n  _s();\n\n  var _useState = useState(\"\"),\n      singleSelect = _useState[0],\n      setSingleSelect = _useState[1];\n\n  var options = [{\n    value: \"\",\n    label: \"Single Option\",\n    isDisabled: true\n  }, {\n    value: \"2\",\n    label: \"Foobar\"\n  }, {\n    value: \"3\",\n    label: \"Is great\"\n  }];\n  return (\n    /*#__PURE__*/\n    // <Select\n    // \tclassName=\"react-select primary\"\n    // \tclassNamePrefix=\"react-select\"\n    // \tname=\"singleSelect\"\n    // \tvalue={singleSelect}\n    // \tonChange={(value) => setSingleSelect(value)}\n    // \toptions={[\n    // \t\t{\n    // \t\t\tvalue: \"\",\n    // \t\t\tlabel: \"Single Option\",\n    // \t\t\tisDisabled: true,\n    // \t\t},\n    // \t\t{ value: \"2\", label: \"Foobar\" },\n    // \t\t{ value: \"3\", label: \"Is great\" },\n    // \t]}\n    // \tplaceholder=\"Search Username\"\n    // \tcomponents={{ Options: IconOption }}\n    // />\n    _jsxDEV(\"div\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 3\n    }, this)\n  );\n} // import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\n// import Select from \"react-select\";\n// import prisma from \"../contexts/prisma\";\n// function Test(props) {\n// \tconst options = [\n// \t\t\"Inside Out\",\n// \t\t\"John Wick\",\n// \t\t\"Jurassic World\",\n// \t\t\"The Lord of the Rings\",\n// \t\t\"Pacific Rim\",\n// \t\t\"Pirates of the Caribbean\",\n// \t\t\"Planet of the Apes\",\n// \t\t\"Saw\",\n// \t\t\"Sicario\",\n// \t\t\"Zombies\",\n// \t];\n// \tconst [results, setResults] = useState(options);\n// \tconst [dropdownVisible, setDropdownVisible] = useState(false);\n// \tconst [singleSelect, setSingleSelect] = React.useState(\"\");\n// \tconst filterMethod = (options, query) => {\n// \t\treturn options.filter((option) => option.toLowerCase().includes(query.toLowerCase()));\n// \t};\n// \tconst searchList = (event) => {\n// \t\tconst results = filterMethod(options, event.target.value);\n// \t\tsetResults(results);\n// \t};\n// \tconst showDropdown = () => {\n// \t\tsetDropdownVisible(true);\n// \t};\n// \tconst hideDropdown = () => {\n// \t\tsetDropdownVisible(false);\n// \t};\n// \tconsole.log(props.users);\n// \treturn (\n// \t\t<Container>\n// \t\t\t<div className=\"autocomplete\">\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"text\"\n// \t\t\t\t\tplaceholder=\"Type to search list\"\n// \t\t\t\t\tonChange={searchList}\n// \t\t\t\t\tonFocus={() => showDropdown()}\n// \t\t\t\t\tonBlur={() => hideDropdown()}\n// \t\t\t\t/>\n// \t\t\t\t{dropdownVisible && (\n// \t\t\t\t\t<div className=\"autocomplete-dropdown\">\n// \t\t\t\t\t\t<ul className=\"autocomplete-search-results-list\">\n// \t\t\t\t\t\t\t{results.map((result) => (\n// \t\t\t\t\t\t\t\t<li className=\"autocomplete-search-result\" key={result}>\n// \t\t\t\t\t\t\t\t\t{result}\n// \t\t\t\t\t\t\t\t</li>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</ul>\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t</div>\n// \t\t\t<Select\n// \t\t\t\tclassName=\"react-select primary\"\n// \t\t\t\tclassNamePrefix=\"react-select\"\n// \t\t\t\tname=\"singleSelect\"\n// \t\t\t\tvalue={singleSelect}\n// \t\t\t\tonChange={(value) => setSingleSelect(value)}\n// \t\t\t\toptions={[\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvalue: \"\",\n// \t\t\t\t\t\tlabel: \"Single Option\",\n// \t\t\t\t\t\tisDisabled: true,\n// \t\t\t\t\t},\n// \t\t\t\t\t{ value: \"2\", label: \"Foobar\" },\n// \t\t\t\t\t{ value: \"3\", label: \"Is great\" },\n// \t\t\t\t]}\n// \t\t\t\tplaceholder=\"Search Username\"\n// \t\t\t/>\n// \t\t</Container>\n// \t);\n// }\n\n\n_s(Test, \"IL4JBQx7KCU1/7ebPnk4L1K1X6o=\");\n\n_c = Test;\nexport var __N_SSP = true;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js"],"names":["React","useState","Select","components","Test","props","singleSelect","setSingleSelect","options","value","label","isDisabled"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA,kBACoBJ,QAAQ,CAAC,EAAD,CAD5B;AAAA,MACbK,YADa;AAAA,MACCC,eADD;;AAGpB,MAAMC,OAAO,GAAG,CACf;AACCC,IAAAA,KAAK,EAAE,EADR;AAECC,IAAAA,KAAK,EAAE,eAFR;AAGCC,IAAAA,UAAU,EAAE;AAHb,GADe,EAMf;AAAEF,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GANe,EAOf;AAAED,IAAAA,KAAK,EAAE,GAAT;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAPe,CAAhB;AAUA;AAAA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBD;AAqBA,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxHSN,I;;KAAAA,I;;AA0HT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Select, { components } from \"react-select\";\n\n// const { Option } = components;\n// const IconOption = (props) => (\n// \t<Option {...props}>\n// \t\t<SomeIcon />\n// \t\t{props.data.label}\n// \t</Option>\n// );\n\nfunction Test(props) {\n\tconst [singleSelect, setSingleSelect] = useState(\"\");\n\n\tconst options = [\n\t\t{\n\t\t\tvalue: \"\",\n\t\t\tlabel: \"Single Option\",\n\t\t\tisDisabled: true,\n\t\t},\n\t\t{ value: \"2\", label: \"Foobar\" },\n\t\t{ value: \"3\", label: \"Is great\" },\n\t];\n\n\treturn (\n\t\t// <Select\n\t\t// \tclassName=\"react-select primary\"\n\t\t// \tclassNamePrefix=\"react-select\"\n\t\t// \tname=\"singleSelect\"\n\t\t// \tvalue={singleSelect}\n\t\t// \tonChange={(value) => setSingleSelect(value)}\n\t\t// \toptions={[\n\t\t// \t\t{\n\t\t// \t\t\tvalue: \"\",\n\t\t// \t\t\tlabel: \"Single Option\",\n\t\t// \t\t\tisDisabled: true,\n\t\t// \t\t},\n\t\t// \t\t{ value: \"2\", label: \"Foobar\" },\n\t\t// \t\t{ value: \"3\", label: \"Is great\" },\n\t\t// \t]}\n\t\t// \tplaceholder=\"Search Username\"\n\t\t// \tcomponents={{ Options: IconOption }}\n\t\t// />\n\t\t<div>test</div>\n\t);\n}\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\n// import Select from \"react-select\";\n// import prisma from \"../contexts/prisma\";\n\n// function Test(props) {\n// \tconst options = [\n// \t\t\"Inside Out\",\n// \t\t\"John Wick\",\n// \t\t\"Jurassic World\",\n// \t\t\"The Lord of the Rings\",\n// \t\t\"Pacific Rim\",\n// \t\t\"Pirates of the Caribbean\",\n// \t\t\"Planet of the Apes\",\n// \t\t\"Saw\",\n// \t\t\"Sicario\",\n// \t\t\"Zombies\",\n// \t];\n\n// \tconst [results, setResults] = useState(options);\n// \tconst [dropdownVisible, setDropdownVisible] = useState(false);\n// \tconst [singleSelect, setSingleSelect] = React.useState(\"\");\n\n// \tconst filterMethod = (options, query) => {\n// \t\treturn options.filter((option) => option.toLowerCase().includes(query.toLowerCase()));\n// \t};\n\n// \tconst searchList = (event) => {\n// \t\tconst results = filterMethod(options, event.target.value);\n// \t\tsetResults(results);\n// \t};\n\n// \tconst showDropdown = () => {\n// \t\tsetDropdownVisible(true);\n// \t};\n\n// \tconst hideDropdown = () => {\n// \t\tsetDropdownVisible(false);\n// \t};\n\n// \tconsole.log(props.users);\n// \treturn (\n// \t\t<Container>\n// \t\t\t<div className=\"autocomplete\">\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"text\"\n// \t\t\t\t\tplaceholder=\"Type to search list\"\n// \t\t\t\t\tonChange={searchList}\n// \t\t\t\t\tonFocus={() => showDropdown()}\n// \t\t\t\t\tonBlur={() => hideDropdown()}\n// \t\t\t\t/>\n// \t\t\t\t{dropdownVisible && (\n// \t\t\t\t\t<div className=\"autocomplete-dropdown\">\n// \t\t\t\t\t\t<ul className=\"autocomplete-search-results-list\">\n// \t\t\t\t\t\t\t{results.map((result) => (\n// \t\t\t\t\t\t\t\t<li className=\"autocomplete-search-result\" key={result}>\n// \t\t\t\t\t\t\t\t\t{result}\n// \t\t\t\t\t\t\t\t</li>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</ul>\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t</div>\n\n// \t\t\t<Select\n// \t\t\t\tclassName=\"react-select primary\"\n// \t\t\t\tclassNamePrefix=\"react-select\"\n// \t\t\t\tname=\"singleSelect\"\n// \t\t\t\tvalue={singleSelect}\n// \t\t\t\tonChange={(value) => setSingleSelect(value)}\n// \t\t\t\toptions={[\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvalue: \"\",\n// \t\t\t\t\t\tlabel: \"Single Option\",\n// \t\t\t\t\t\tisDisabled: true,\n// \t\t\t\t\t},\n// \t\t\t\t\t{ value: \"2\", label: \"Foobar\" },\n// \t\t\t\t\t{ value: \"3\", label: \"Is great\" },\n// \t\t\t\t]}\n// \t\t\t\tplaceholder=\"Search Username\"\n// \t\t\t/>\n// \t\t</Container>\n// \t);\n// }\n\nexport default Test;\n\nexport async function getServerSideProps(context) {\n\tlet users = await prisma.user.findMany();\n\tusers = users.map((user) => {\n\t\tdelete user.emailVerified;\n\t\tdelete user.createdAt;\n\t\tdelete user.updatedAt;\n\n\t\treturn user;\n\t});\n\n\treturn {\n\t\tprops: { users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}