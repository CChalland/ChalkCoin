{"ast":null,"code":"import _defineProperty from \"/Users/colechalland/Projects/ChalkCoin/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar userReducer = function userReducer(state, action) {\n  switch (action.type) {\n    case \"INIT\":\n      return action.data;\n\n    case \"REWARD\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        balance: state.balance + action.balance\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/reducers/User.Reducer.js"],"names":["userReducer","state","action","type","data","balance"],"mappings":";;;;;;AAAA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,MAAL;AACC,aAAOD,MAAM,CAACE,IAAd;;AAED,SAAK,QAAL;AACC,6CAAYH,KAAZ;AAAmBI,QAAAA,OAAO,EAAEJ,KAAK,CAACI,OAAN,GAAgBH,MAAM,CAACG;AAAnD;;AAED;AACC,aAAOJ,KAAP;AARF;AAUA,CAXD;;AAaA,eAAeD,WAAf","sourcesContent":["const userReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"INIT\":\n\t\t\treturn action.data;\n\n\t\tcase \"REWARD\":\n\t\t\treturn { ...state, balance: state.balance + action.balance };\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}