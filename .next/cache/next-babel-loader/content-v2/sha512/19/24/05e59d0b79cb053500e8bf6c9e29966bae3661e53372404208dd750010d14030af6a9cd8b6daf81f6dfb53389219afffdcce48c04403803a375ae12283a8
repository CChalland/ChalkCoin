{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Col, Row, Image, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport Select, { components } from \"react-select\";\nimport prisma from \"../contexts/prisma\";\n\nfunction Test(props) {\n  const {\n    0: singleSelect,\n    1: setSingleSelect\n  } = useState(\"\");\n\n  const IconOption = props => /*#__PURE__*/_jsxDEV(components.Option, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          width: 35,\n          height: 35,\n          src: props.data.image,\n          roundedCircle: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: props.data.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"text-muted\",\n          children: props.data.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n\n  const optionsUsers = props.users.map(user => {\n    return {\n      value: user.username,\n      image: user.image,\n      label: user.name\n    };\n  });\n  console.log(props.users);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      className: \"react-select primary\",\n      classNamePrefix: \"react-select\",\n      name: \"singleSelect\",\n      value: singleSelect,\n      onChange: value => setSingleSelect(value),\n      options: optionsUsers,\n      placeholder: \"Search Username\",\n      components: {\n        Option: IconOption\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Test;\nexport async function getServerSideProps(context) {\n  let users = await prisma.user.findMany();\n  users = users.map(user => {\n    delete user.emailVerified;\n    delete user.createdAt;\n    delete user.updatedAt;\n    return user;\n  });\n  return {\n    props: {\n      users\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js"],"names":["React","useState","axios","Container","Col","Row","Image","Button","Modal","Carousel","Tab","Nav","Card","Select","components","prisma","Test","props","singleSelect","setSingleSelect","IconOption","data","image","value","label","optionsUsers","users","map","user","username","name","console","log","Option","getServerSideProps","context","findMany","emailVerified","createdAt","updatedAt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Col, Row, Image, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport Select, { components } from \"react-select\";\nimport prisma from \"../contexts/prisma\";\n\nfunction Test(props) {\n\tconst [singleSelect, setSingleSelect] = useState(\"\");\n\tconst IconOption = (props) => (\n\t\t<components.Option {...props}>\n\t\t\t<Row className=\"align-items-center\">\n\t\t\t\t<Col xs=\"auto\">\n\t\t\t\t\t<Image width={35} height={35} src={props.data.image} roundedCircle />\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Row>{props.data.value}</Row>\n\t\t\t\t\t<Row className=\"text-muted\">{props.data.label}</Row>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</components.Option>\n\t);\n\n\tconst optionsUsers = props.users.map((user) => {\n\t\treturn {\n\t\t\tvalue: user.username,\n\t\t\timage: user.image,\n\t\t\tlabel: user.name,\n\t\t};\n\t});\n\n\tconsole.log(props.users);\n\treturn (\n\t\t<Container>\n\t\t\t<Select\n\t\t\t\tclassName=\"react-select primary\"\n\t\t\t\tclassNamePrefix=\"react-select\"\n\t\t\t\tname=\"singleSelect\"\n\t\t\t\tvalue={singleSelect}\n\t\t\t\tonChange={(value) => setSingleSelect(value)}\n\t\t\t\toptions={optionsUsers}\n\t\t\t\tplaceholder=\"Search Username\"\n\t\t\t\tcomponents={{ Option: IconOption }}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default Test;\n\nexport async function getServerSideProps(context) {\n\tlet users = await prisma.user.findMany();\n\tusers = users.map((user) => {\n\t\tdelete user.emailVerified;\n\t\tdelete user.createdAt;\n\t\tdelete user.updatedAt;\n\n\t\treturn user;\n\t});\n\n\treturn {\n\t\tprops: { users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}