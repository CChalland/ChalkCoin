{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js\";\nimport React, { useContext } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\"; // import prisma from \"../contexts/prisma\";\n\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\n\nfunction Bets(props) {\n  console.log(props.currentUser); // const getData = async () => {\n  // \tlet response;\n  // \tawait axios.get(\"http;//localhost:4000/api/bets\").then((res) => {\n  // \t\tresponse = res.data;\n  // \t\tconsole.log.log(res);\n  // \t});\n  // };\n  // getData();\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"BETS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Bets;\nexport async function getServerSideProps(context) {\n  const {\n    req,\n    res\n  } = context;\n  const session = await getSession({\n    req\n  });\n  let currentUser = {};\n\n  if (session) {\n    currentUser = await prisma.user.findUnique({\n      where: {\n        id: session.user.id\n      }\n    });\n    delete currentUser.password;\n    delete currentUser.paypal;\n    delete currentUser.emailVerified;\n    delete currentUser.createdAt;\n    delete currentUser.updatedAt;\n  }\n\n  let bets = await prisma.bet.findMany({\n    where: {\n      accepted: false\n    }\n  });\n  console.log(bets);\n  return {\n    props: {\n      currentUser\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js"],"names":["React","useContext","Container","SportContext","getSession","axios","Bets","props","console","log","currentUser","getServerSideProps","context","req","res","session","prisma","user","findUnique","where","id","password","paypal","emailVerified","createdAt","updatedAt","bets","bet","findMany","accepted"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,WAAlB,EADoB,CAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,sBACC,QAAC,SAAD;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;AAED,eAAeJ,IAAf;AAEA,OAAO,eAAeK,kBAAf,CAAkCC,OAAlC,EAA2C;AACjD,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAeF,OAArB;AACA,QAAMG,OAAO,GAAG,MAAMX,UAAU,CAAC;AAAES,IAAAA;AAAF,GAAD,CAAhC;AACA,MAAIH,WAAW,GAAG,EAAlB;;AACA,MAAIK,OAAJ,EAAa;AACZL,IAAAA,WAAW,GAAG,MAAMM,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuB;AAC1CC,MAAAA,KAAK,EAAE;AACNC,QAAAA,EAAE,EAAEL,OAAO,CAACE,IAAR,CAAaG;AADX;AADmC,KAAvB,CAApB;AAKA,WAAOV,WAAW,CAACW,QAAnB;AACA,WAAOX,WAAW,CAACY,MAAnB;AACA,WAAOZ,WAAW,CAACa,aAAnB;AACA,WAAOb,WAAW,CAACc,SAAnB;AACA,WAAOd,WAAW,CAACe,SAAnB;AACA;;AAED,MAAIC,IAAI,GAAG,MAAMV,MAAM,CAACW,GAAP,CAAWC,QAAX,CAAoB;AACpCT,IAAAA,KAAK,EAAE;AACNU,MAAAA,QAAQ,EAAE;AADJ;AAD6B,GAApB,CAAjB;AAKArB,EAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAZ;AAEA,SAAO;AACNnB,IAAAA,KAAK,EAAE;AAAEG,MAAAA;AAAF;AADD,GAAP;AAGA","sourcesContent":["import React, { useContext } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\n// import prisma from \"../contexts/prisma\";\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\n\nfunction Bets(props) {\n\tconsole.log(props.currentUser);\n\n\t// const getData = async () => {\n\t// \tlet response;\n\t// \tawait axios.get(\"http;//localhost:4000/api/bets\").then((res) => {\n\t// \t\tresponse = res.data;\n\t// \t\tconsole.log.log(res);\n\t// \t});\n\t// };\n\n\t// getData();\n\treturn (\n\t\t<Container>\n\t\t\t<div>BETS</div>\n\t\t</Container>\n\t);\n}\n\nexport default Bets;\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\tlet currentUser = {};\n\tif (session) {\n\t\tcurrentUser = await prisma.user.findUnique({\n\t\t\twhere: {\n\t\t\t\tid: session.user.id,\n\t\t\t},\n\t\t});\n\t\tdelete currentUser.password;\n\t\tdelete currentUser.paypal;\n\t\tdelete currentUser.emailVerified;\n\t\tdelete currentUser.createdAt;\n\t\tdelete currentUser.updatedAt;\n\t}\n\n\tlet bets = await prisma.bet.findMany({\n\t\twhere: {\n\t\t\taccepted: false,\n\t\t},\n\t});\n\tconsole.log(bets);\n\n\treturn {\n\t\tprops: { currentUser },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}