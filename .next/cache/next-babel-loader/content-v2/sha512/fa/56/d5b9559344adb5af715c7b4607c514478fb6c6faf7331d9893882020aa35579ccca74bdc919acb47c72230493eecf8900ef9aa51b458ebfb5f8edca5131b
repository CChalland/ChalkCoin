{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport Select, { components } from \"react-select\";\nimport prisma from \"../contexts/prisma\";\n\nfunction Test(props) {\n  const {\n    0: singleSelect,\n    1: setSingleSelect\n  } = useState(\"\");\n  const {\n    Option\n  } = components;\n\n  const IconOption = props => {\n    console.log(props);\n    return /*#__PURE__*/_jsxDEV(Option, _objectSpread(_objectSpread({}, props), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.data.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this), props.data.label]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this);\n  };\n\n  const optionsSelect = [{\n    value: \"\",\n    label: \"Single Option\",\n    isDisabled: true\n  }, {\n    value: \"2\",\n    label: \"Foobar\"\n  }, {\n    value: \"3\",\n    label: \"Is great\"\n  }];\n  const optionsUsers = props.users.map(user => {\n    return {\n      value: user.id,\n      image: user.image,\n      label: user.username\n    };\n  }); // const options = [\n  // \t\"Inside Out\",\n  // \t\"John Wick\",\n  // \t\"Jurassic World\",\n  // \t\"The Lord of the Rings\",\n  // \t\"Pacific Rim\",\n  // \t\"Pirates of the Caribbean\",\n  // \t\"Planet of the Apes\",\n  // \t\"Saw\",\n  // \t\"Sicario\",\n  // \t\"Zombies\",\n  // ];\n  // const [results, setResults] = useState(options);\n  // const [dropdownVisible, setDropdownVisible] = useState(false);\n  // const filterMethod = (options, query) => {\n  // \treturn options.filter((option) => option.toLowerCase().includes(query.toLowerCase()));\n  // };\n  // const searchList = (event) => {\n  // \tconst results = filterMethod(options, event.target.value);\n  // \tsetResults(results);\n  // };\n  // const showDropdown = () => {\n  // \tsetDropdownVisible(true);\n  // };\n  // const hideDropdown = () => {\n  // \tsetDropdownVisible(false);\n  // };\n\n  console.log(props.users);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      className: \"react-select primary\",\n      classNamePrefix: \"react-select\",\n      name: \"singleSelect\",\n      value: singleSelect,\n      onChange: value => setSingleSelect(value),\n      options: optionsUsers,\n      placeholder: \"Search Username\",\n      components: {\n        Options: IconOption\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Test;\nexport async function getServerSideProps(context) {\n  let users = await prisma.user.findMany();\n  users = users.map(user => {\n    delete user.emailVerified;\n    delete user.createdAt;\n    delete user.updatedAt;\n    return user;\n  });\n  return {\n    props: {\n      users\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js"],"names":["React","useState","axios","Container","Col","Row","Button","Modal","Carousel","Tab","Nav","Card","Select","components","prisma","Test","props","singleSelect","setSingleSelect","Option","IconOption","console","log","data","image","label","optionsSelect","value","isDisabled","optionsUsers","users","map","user","id","username","Options","getServerSideProps","context","findMany","emailVerified","createdAt","updatedAt"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport Select, { components } from \"react-select\";\nimport prisma from \"../contexts/prisma\";\n\nfunction Test(props) {\n\tconst [singleSelect, setSingleSelect] = useState(\"\");\n\tconst { Option } = components;\n\tconst IconOption = (props) => {\n\t\tconsole.log(props);\n\t\treturn (\n\t\t\t<Option {...props}>\n\t\t\t\t<img src={props.data.image} />\n\t\t\t\t{props.data.label}\n\t\t\t</Option>\n\t\t);\n\t};\n\tconst optionsSelect = [\n\t\t{\n\t\t\tvalue: \"\",\n\t\t\tlabel: \"Single Option\",\n\t\t\tisDisabled: true,\n\t\t},\n\t\t{ value: \"2\", label: \"Foobar\" },\n\t\t{ value: \"3\", label: \"Is great\" },\n\t];\n\n\tconst optionsUsers = props.users.map((user) => {\n\t\treturn {\n\t\t\tvalue: user.id,\n\t\t\timage: user.image,\n\t\t\tlabel: user.username,\n\t\t};\n\t});\n\n\t// const options = [\n\t// \t\"Inside Out\",\n\t// \t\"John Wick\",\n\t// \t\"Jurassic World\",\n\t// \t\"The Lord of the Rings\",\n\t// \t\"Pacific Rim\",\n\t// \t\"Pirates of the Caribbean\",\n\t// \t\"Planet of the Apes\",\n\t// \t\"Saw\",\n\t// \t\"Sicario\",\n\t// \t\"Zombies\",\n\t// ];\n\t// const [results, setResults] = useState(options);\n\t// const [dropdownVisible, setDropdownVisible] = useState(false);\n\t// const filterMethod = (options, query) => {\n\t// \treturn options.filter((option) => option.toLowerCase().includes(query.toLowerCase()));\n\t// };\n\n\t// const searchList = (event) => {\n\t// \tconst results = filterMethod(options, event.target.value);\n\t// \tsetResults(results);\n\t// };\n\n\t// const showDropdown = () => {\n\t// \tsetDropdownVisible(true);\n\t// };\n\n\t// const hideDropdown = () => {\n\t// \tsetDropdownVisible(false);\n\t// };\n\n\tconsole.log(props.users);\n\treturn (\n\t\t<Container>\n\t\t\t{/* <div className=\"autocomplete\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Type to search list\"\n\t\t\t\t\tonChange={searchList}\n\t\t\t\t\tonFocus={() => showDropdown()}\n\t\t\t\t\tonBlur={() => hideDropdown()}\n\t\t\t\t/>\n\t\t\t\t{dropdownVisible && (\n\t\t\t\t\t<div className=\"autocomplete-dropdown\">\n\t\t\t\t\t\t<ul className=\"autocomplete-search-results-list\">\n\t\t\t\t\t\t\t{results.map((result) => (\n\t\t\t\t\t\t\t\t<li className=\"autocomplete-search-result\" key={result}>\n\t\t\t\t\t\t\t\t\t{result}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div> */}\n\n\t\t\t<Select\n\t\t\t\tclassName=\"react-select primary\"\n\t\t\t\tclassNamePrefix=\"react-select\"\n\t\t\t\tname=\"singleSelect\"\n\t\t\t\tvalue={singleSelect}\n\t\t\t\tonChange={(value) => setSingleSelect(value)}\n\t\t\t\toptions={optionsUsers}\n\t\t\t\tplaceholder=\"Search Username\"\n\t\t\t\tcomponents={{ Options: IconOption }}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default Test;\n\nexport async function getServerSideProps(context) {\n\tlet users = await prisma.user.findMany();\n\tusers = users.map((user) => {\n\t\tdelete user.emailVerified;\n\t\tdelete user.createdAt;\n\t\tdelete user.updatedAt;\n\n\t\treturn user;\n\t});\n\n\treturn {\n\t\tprops: { users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}