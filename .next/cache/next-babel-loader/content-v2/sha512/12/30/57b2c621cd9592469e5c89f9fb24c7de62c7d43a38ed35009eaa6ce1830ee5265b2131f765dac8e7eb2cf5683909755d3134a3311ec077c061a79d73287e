{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/ChalkCoin/pages/games.js\";\nimport { useRouter } from \"next/router\";\nimport { useCallback, useContext, useState, useRef, useEffect } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { getSession } from \"next-auth/client\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport { UserContext } from \"../contexts/User.Context\";\nimport GameCard from \"../components/Game/GameCard\";\nimport NotificationAlert from \"react-notification-alert\";\nimport Loading from \"../components/Utility/Loading\";\nexport default function Games({\n  query,\n  users\n}) {\n  const router = useRouter();\n  const currentUser = useContext(UserContext);\n  const sportsData = useContext(SportContext);\n  const notificationAlertRef = useRef(null);\n  const {\n    0: date,\n    1: setDate\n  } = useState(\"\");\n  let sportData = sportsData.find(sport => {\n    var _query$sport;\n\n    return sport.abbrv === ((_query$sport = query.sport) === null || _query$sport === void 0 ? void 0 : _query$sport.toUpperCase());\n  });\n\n  const notify = errMsg => {\n    let options = {\n      place: \"tc\",\n      message: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: errMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this),\n      type: \"danger\",\n      icon: \"nc-icon nc-bell-55\",\n      autoDismiss: 7\n    };\n    notificationAlertRef.current.notificationAlert(options);\n    router.replace(`${router.pathname}?sport=${query.sport}`, undefined, {\n      shallow: true\n    });\n  };\n\n  const getData = useCallback(async (league, date) => {\n    let preGames,\n        inGames,\n        postGames,\n        leagueData,\n        sortedGames = [];\n\n    if (league.reload) {\n      axios.get(`http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard`).then(response => {\n        leagueData = response.data;\n        inGames = response.data.events.filter(game => {\n          league.reload = true;\n          return game.status.type.state === \"in\";\n        });\n        postGames = response.data.events.filter(game => {\n          return game.status.type.state === \"post\";\n        });\n        preGames = response.data.events.filter(game => {\n          return game.status.type.state === \"pre\";\n        });\n        if (inGames.length === 0) league.reload = false;\n        sortedGames.push(preGames, inGames, postGames);\n        leagueData.events = sortedGames.flat(); // dispatch({ type: league.display_name, data: leagueData, reload: league.reload });\n        // console.log(sortedGames.flat());\n      });\n    } // console.log(\"getData - league\", league);\n\n  });\n  useEffect(() => {\n    console.log(\"games - date\", date);\n  }, [date]);\n  useEffect(() => {\n    if (router.query.error) {\n      notify(router.query.error);\n    }\n\n    if (!sportData || !router.query.sport) {\n      router.replace(\"/\", undefined, {\n        shallow: true\n      });\n    }\n  }, [router]);\n  let gameItems = sportData !== null && sportData !== void 0 && sportData.data.events ? sportData.data.events.map((game, key) => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"my-3\",\n      children: /*#__PURE__*/_jsxDEV(GameCard, {\n        panelKey: key,\n        gameData: game,\n        sportName: sportData === null || sportData === void 0 ? void 0 : sportData.display_name,\n        users: users,\n        currentUser: currentUser,\n        completed: game.status.type.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 6\n      }, this)\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 3\n  }, this); // console.log(\"sportData\", sportData);\n  // console.log(\"sportsData\", sportsData);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rna-container\",\n      children: /*#__PURE__*/_jsxDEV(NotificationAlert, {\n        ref: notificationAlertRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: sportData === null || sportData === void 0 ? void 0 : sportData.display_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n        slidesPerView: 3,\n        spaceBetween: 30,\n        children: [/*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: \"Slide 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: \"Slide 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: \"Slide 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: \"Slide 4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: \"Slide 5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: \"Slide 6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: \"Slide 7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: \"Slide 8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          children: \"Slide 9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this), gameItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\nexport async function getServerSideProps(context) {\n  const {\n    req,\n    res\n  } = context;\n  const session = await getSession({\n    req\n  });\n  let users = [];\n\n  if (session) {\n    users = await prisma.user.findMany();\n    users = users.map(user => {\n      delete user.password;\n      delete user.balance;\n      delete user.paypal;\n      delete user.emailVerified;\n      delete user.createdAt;\n      delete user.updatedAt;\n      return user;\n    }).filter(user => {\n      return user.id !== session.user.id;\n    });\n  }\n\n  return {\n    props: {\n      query: context.query,\n      users\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/pages/games.js"],"names":["useRouter","useCallback","useContext","useState","useRef","useEffect","Swiper","SwiperSlide","getSession","Container","Row","SportContext","UserContext","GameCard","NotificationAlert","Loading","Games","query","users","router","currentUser","sportsData","notificationAlertRef","date","setDate","sportData","find","sport","abbrv","toUpperCase","notify","errMsg","options","place","message","type","icon","autoDismiss","current","notificationAlert","replace","pathname","undefined","shallow","getData","league","preGames","inGames","postGames","leagueData","sortedGames","reload","axios","get","league_name","then","response","data","events","filter","game","status","state","length","push","flat","console","log","error","gameItems","map","key","display_name","completed","id","getServerSideProps","context","req","res","session","prisma","user","findMany","password","balance","paypal","emailVerified","createdAt","updatedAt","props"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useCallback, useContext, useState, useRef, useEffect } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { getSession } from \"next-auth/client\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport { UserContext } from \"../contexts/User.Context\";\nimport GameCard from \"../components/Game/GameCard\";\nimport NotificationAlert from \"react-notification-alert\";\nimport Loading from \"../components/Utility/Loading\";\n\nexport default function Games({ query, users }) {\n\tconst router = useRouter();\n\tconst currentUser = useContext(UserContext);\n\tconst sportsData = useContext(SportContext);\n\tconst notificationAlertRef = useRef(null);\n\tconst [date, setDate] = useState(\"\");\n\tlet sportData = sportsData.find((sport) => {\n\t\treturn sport.abbrv === query.sport?.toUpperCase();\n\t});\n\n\tconst notify = (errMsg) => {\n\t\tlet options = {\n\t\t\tplace: \"tc\",\n\t\t\tmessage: (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>{errMsg}</b>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\ttype: \"danger\",\n\t\t\ticon: \"nc-icon nc-bell-55\",\n\t\t\tautoDismiss: 7,\n\t\t};\n\t\tnotificationAlertRef.current.notificationAlert(options);\n\t\trouter.replace(`${router.pathname}?sport=${query.sport}`, undefined, { shallow: true });\n\t};\n\n\tconst getData = useCallback(async (league, date) => {\n\t\tlet preGames,\n\t\t\tinGames,\n\t\t\tpostGames,\n\t\t\tleagueData,\n\t\t\tsortedGames = [];\n\n\t\tif (league.reload) {\n\t\t\taxios\n\t\t\t\t.get(`http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tleagueData = response.data;\n\t\t\t\t\tinGames = response.data.events.filter((game) => {\n\t\t\t\t\t\tleague.reload = true;\n\t\t\t\t\t\treturn game.status.type.state === \"in\";\n\t\t\t\t\t});\n\t\t\t\t\tpostGames = response.data.events.filter((game) => {\n\t\t\t\t\t\treturn game.status.type.state === \"post\";\n\t\t\t\t\t});\n\t\t\t\t\tpreGames = response.data.events.filter((game) => {\n\t\t\t\t\t\treturn game.status.type.state === \"pre\";\n\t\t\t\t\t});\n\n\t\t\t\t\tif (inGames.length === 0) league.reload = false;\n\t\t\t\t\tsortedGames.push(preGames, inGames, postGames);\n\t\t\t\t\tleagueData.events = sortedGames.flat();\n\t\t\t\t\t// dispatch({ type: league.display_name, data: leagueData, reload: league.reload });\n\n\t\t\t\t\t// console.log(sortedGames.flat());\n\t\t\t\t});\n\t\t}\n\t\t// console.log(\"getData - league\", league);\n\t});\n\n\tuseEffect(() => {\n\t\tconsole.log(\"games - date\", date);\n\t}, [date]);\n\n\tuseEffect(() => {\n\t\tif (router.query.error) {\n\t\t\tnotify(router.query.error);\n\t\t}\n\t\tif (!sportData || !router.query.sport) {\n\t\t\trouter.replace(\"/\", undefined, { shallow: true });\n\t\t}\n\t}, [router]);\n\n\tlet gameItems = sportData?.data.events ? (\n\t\tsportData.data.events.map((game, key) => {\n\t\t\treturn (\n\t\t\t\t<Row className=\"my-3\" key={game.id}>\n\t\t\t\t\t<GameCard\n\t\t\t\t\t\tpanelKey={key}\n\t\t\t\t\t\tgameData={game}\n\t\t\t\t\t\tsportName={sportData?.display_name}\n\t\t\t\t\t\tusers={users}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tcompleted={game.status.type.completed}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t);\n\t\t})\n\t) : (\n\t\t<Loading />\n\t);\n\n\t// console.log(\"sportData\", sportData);\n\t// console.log(\"sportsData\", sportsData);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"rna-container\">\n\t\t\t\t<NotificationAlert ref={notificationAlertRef} />\n\t\t\t</div>\n\t\t\t<Container fluid>\n\t\t\t\t<h1>{sportData?.display_name}</h1>\n\n\t\t\t\t<Swiper slidesPerView={3} spaceBetween={30}>\n\t\t\t\t\t<SwiperSlide>Slide 1</SwiperSlide>\n\t\t\t\t\t<SwiperSlide>Slide 2</SwiperSlide>\n\t\t\t\t\t<SwiperSlide>Slide 3</SwiperSlide>\n\t\t\t\t\t<SwiperSlide>Slide 4</SwiperSlide>\n\t\t\t\t\t<SwiperSlide>Slide 5</SwiperSlide>\n\t\t\t\t\t<SwiperSlide>Slide 6</SwiperSlide>\n\t\t\t\t\t<SwiperSlide>Slide 7</SwiperSlide>\n\t\t\t\t\t<SwiperSlide>Slide 8</SwiperSlide>\n\t\t\t\t\t<SwiperSlide>Slide 9</SwiperSlide>\n\t\t\t\t</Swiper>\n\n\t\t\t\t{gameItems}\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\tlet users = [];\n\tif (session) {\n\t\tusers = await prisma.user.findMany();\n\t\tusers = users\n\t\t\t.map((user) => {\n\t\t\t\tdelete user.password;\n\t\t\t\tdelete user.balance;\n\t\t\t\tdelete user.paypal;\n\t\t\t\tdelete user.emailVerified;\n\t\t\t\tdelete user.createdAt;\n\t\t\t\tdelete user.updatedAt;\n\n\t\t\t\treturn user;\n\t\t\t})\n\t\t\t.filter((user) => {\n\t\t\t\treturn user.id !== session.user.id;\n\t\t\t});\n\t}\n\n\treturn {\n\t\tprops: { query: context.query, users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}