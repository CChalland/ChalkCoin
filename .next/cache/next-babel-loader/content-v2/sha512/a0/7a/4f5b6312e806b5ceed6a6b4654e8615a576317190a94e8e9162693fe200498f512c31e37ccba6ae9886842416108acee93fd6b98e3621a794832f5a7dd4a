{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useSession } from \"next-auth/client\"; // react-bootstrap components\n\nimport { Badge, Button, Card, Form, InputGroup, Navbar, Nav, Container, Row, Col } from \"react-bootstrap\";\nimport { PrismaClient } from \"@prisma/client\"; // async function saveUser(user) {\n// \tconst response = await fetch(\"/api/users\", {\n// \t\tmethod: \"POST\",\n// \t\tbody: JSON.stringify(user),\n// \t});\n// \tif (!response.ok) {\n// \t\tthrow new Error(response.statusText);\n// \t}\n// \treturn await response.json();\n// }\n\nvar emailValidation = function emailValidation(value) {\n  return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\n};\n\nvar urlValidation = function urlValidation(value) {\n  var returnValue = true;\n\n  try {\n    new URL(value);\n  } catch (e) {\n    returnValue = false;\n  } finally {\n    return returnValue;\n  }\n\n  return false;\n};\n\nvar isRequired = function isRequired(value) {\n  return value !== null && value !== \"\" && value;\n};\n\nvar equalTo = function equalTo(value1, value2) {\n  return value1 === value2;\n};\n\nvar minLength = function minLength(value, length) {\n  return value.length >= length;\n};\n\nvar maxLength = function maxLength(value, length) {\n  return value.length <= length && value !== \"\";\n};\n\nfunction UserPage(props) {\n  _s();\n\n  var user = props.user;\n  console.log(user);\n\n  var _useState = useState(user === null || user === void 0 ? void 0 : user.username),\n      username = _useState[0],\n      setUsername = _useState[1];\n\n  var _useState2 = useState(true),\n      usernameState = _useState2[0],\n      setUsernameState = _useState2[1];\n\n  var _useState3 = useState(user === null || user === void 0 ? void 0 : user.name),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var _useState4 = useState(true),\n      nameState = _useState4[0],\n      setNameState = _useState4[1];\n\n  var _useState5 = useState(user === null || user === void 0 ? void 0 : user.email),\n      email = _useState5[0],\n      setEmail = _useState5[1];\n\n  var _useState6 = useState(true),\n      emailState = _useState6[0],\n      setEmailState = _useState6[1];\n\n  var _useState7 = useState(user === null || user === void 0 ? void 0 : user.image),\n      imageURL = _useState7[0],\n      setImageURL = _useState7[1];\n\n  var _useState8 = useState(true),\n      imageURLState = _useState8[0],\n      setImageURLState = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      password = _useState9[0],\n      setPassword = _useState9[1];\n\n  var _useState10 = useState(true),\n      passwordState = _useState10[0],\n      setPasswordState = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      passwordVerify = _useState11[0],\n      setPasswordVerify = _useState11[1];\n\n  var _useState12 = useState(true),\n      passwordVerifyState = _useState12[0],\n      setPasswordVerifyState = _useState12[1]; // const updateUser = async (event) => {\n  // \tevent.preventDefault();\n  // \tconst res = await fetch(\"http://localhost:4000/api/users\", {\n  // \t\tbody: JSON.stringify({\n  // \t\t\tname,\n  // \t\t\temail,\n  // \t\t\tpassword,\n  // \t\t\timageURL,\n  // \t\t}),\n  // \t\theaders: {\n  // \t\t\t\"Content-Type\": \"application/json\",\n  // \t\t},\n  // \t\tmethod: \"POST\",\n  // \t});\n  // \tuser = await res.json();\n  // \t// result.user => 'Ada Lovelace'\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"8\",\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            action: \"\",\n            className: \"form\",\n            method: \"\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                    as: \"h4\",\n                    children: \"Edit Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pr-1\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"has-label \" + (usernameState ? \"has-success\" : \"has-error\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: [\"Username \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"star\",\n                          children: \"*\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 90,\n                          columnNumber: 23\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        placeholder: \"Username\",\n                        name: \"username\",\n                        type: \"text\",\n                        value: username,\n                        onChange: function onChange(e) {\n                          setUsername(e.target.value);\n\n                          if (isRequired(e.target.value)) {\n                            setUsernameState(true);\n                          } else {\n                            setUsernameState(false);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 92,\n                        columnNumber: 13\n                      }, this), usernameState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"error\",\n                        children: \"This field is required.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pr-1\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"has-label \" + (nameState ? \"has-success\" : \"has-error\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 111,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        placeholder: \"Name\",\n                        name: \"name\",\n                        type: \"text\",\n                        value: name,\n                        onChange: function onChange(e) {\n                          setName(e.target.value); // if (isRequired(e.target.value)) {\n                          // \tsetNameState(true);\n                          // } else {\n                          // \tsetNameState(false);\n                          // }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pr-1\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"has-label \" + (emailState ? \"has-success\" : \"has-error\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"exampleInputEmail1\",\n                        children: \"Email address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        placeholder: \"Email\",\n                        name: \"email\",\n                        type: \"text\",\n                        value: email,\n                        onChange: function onChange(e) {\n                          setEmail(e.target.value);\n\n                          if (emailValidation(e.target.value)) {\n                            setEmailState(true);\n                          } else {\n                            setEmailState(false);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 13\n                      }, this), emailState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"error\",\n                        children: \"This field is required.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 147,\n                        columnNumber: 34\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pl-1\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"has-label \" + (imageURLState ? \"has-success\" : \"has-error\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        placeholder: \"URL\",\n                        name: \"image\",\n                        type: \"text\",\n                        value: imageURL,\n                        onChange: function onChange(e) {\n                          setImageURL(e.target.value);\n\n                          if (urlValidation(e.target.value)) {\n                            setImageURLState(true);\n                          } else {\n                            setImageURLState(false);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 151,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pr-1\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"has-label \" + (passwordState ? \"has-success\" : \"has-error\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        placeholder: \"Password\",\n                        name: \"password\",\n                        type: \"password\",\n                        value: password,\n                        onChange: function onChange(e) {\n                          setPassword(e.target.value);\n\n                          if (minLength(e.target.value, 1)) {\n                            setPasswordState(true);\n                          } else {\n                            setPasswordState(false);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 174,\n                        columnNumber: 13\n                      }, this), passwordState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"error\",\n                        children: \"This field is required.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 188,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"p1-1\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: \"has-label \" + (passwordVerifyState ? \"has-success\" : \"has-error\"),\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Verify Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        placeholder: \"Password\",\n                        name: \"passwordVerify\",\n                        type: \"password\",\n                        value: passwordVerify,\n                        onChange: function onChange(e) {\n                          setPasswordVerify(e.target.value);\n\n                          if (equalTo(e.target.value, registerPassword)) {\n                            setPasswordStateVerify(true);\n                          } else {\n                            setPasswordStateVerify(false);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 196,\n                        columnNumber: 13\n                      }, this), passwordVerifyState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"error\",\n                        children: \"This field is required and needs to be equal with your entered password.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 14\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-fill pull-right\",\n                  type: \"submit\",\n                  variant: \"info\",\n                  children: \"Update Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"clearfix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card-user\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              className: \"no-padding\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  alt: \"...\",\n                  src: require(\"../assets/img/full-screen-image-3.jpg\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author\",\n                children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#pablo\",\n                  onClick: function onClick(e) {\n                    return e.preventDefault();\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    alt: \"...\",\n                    className: \"avatar border-gray\",\n                    src: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n                    as: \"h5\",\n                    children: \"Tania Keatley\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"card-description\",\n                  children: \"michael24\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-description text-center\",\n                children: [\"Hey there! As you can see, \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this), \"it is already looking great.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-container text-center\",\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-simple btn-icon\",\n                  href: \"#pablo\",\n                  onClick: function onClick(e) {\n                    return e.preventDefault();\n                  },\n                  variant: \"link\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fab fa-facebook-square\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-simple btn-icon\",\n                  href: \"#pablo\",\n                  onClick: function onClick(e) {\n                    return e.preventDefault();\n                  },\n                  variant: \"link\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fab fa-twitter\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-simple btn-icon\",\n                  href: \"#pablo\",\n                  onClick: function onClick(e) {\n                    return e.preventDefault();\n                  },\n                  variant: \"link\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fab fa-google-plus-square\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserPage, \"TcWQcRwRnNkgSwgmmk94XHYGNMg=\");\n\n_c = UserPage;\nexport var __N_SSP = true;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/UserPage.js"],"names":["React","useState","useSession","Badge","Button","Card","Form","InputGroup","Navbar","Nav","Container","Row","Col","PrismaClient","emailValidation","value","test","urlValidation","returnValue","URL","e","isRequired","equalTo","value1","value2","minLength","length","maxLength","UserPage","props","user","console","log","username","setUsername","usernameState","setUsernameState","name","setName","nameState","setNameState","email","setEmail","emailState","setEmailState","image","imageURL","setImageURL","imageURLState","setImageURLState","password","setPassword","passwordState","setPasswordState","passwordVerify","setPasswordVerify","passwordVerifyState","setPasswordVerifyState","target","registerPassword","setPasswordStateVerify","require","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { getSession, useSession } from \"next-auth/client\";\n// react-bootstrap components\nimport { Badge, Button, Card, Form, InputGroup, Navbar, Nav, Container, Row, Col } from \"react-bootstrap\";\nimport { PrismaClient } from \"@prisma/client\";\n\n// async function saveUser(user) {\n// \tconst response = await fetch(\"/api/users\", {\n// \t\tmethod: \"POST\",\n// \t\tbody: JSON.stringify(user),\n// \t});\n// \tif (!response.ok) {\n// \t\tthrow new Error(response.statusText);\n// \t}\n\n// \treturn await response.json();\n// }\n\nconst emailValidation = (value) =>\n\t/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\nconst urlValidation = (value) => {\n\tlet returnValue = true;\n\ttry {\n\t\tnew URL(value);\n\t} catch (e) {\n\t\treturnValue = false;\n\t} finally {\n\t\treturn returnValue;\n\t}\n\treturn false;\n};\nconst isRequired = (value) => value !== null && value !== \"\" && value;\nconst equalTo = (value1, value2) => value1 === value2;\nconst minLength = (value, length) => value.length >= length;\nconst maxLength = (value, length) => value.length <= length && value !== \"\";\n\nfunction UserPage(props) {\n\tconst user = props.user;\n\tconsole.log(user);\n\tconst [username, setUsername] = useState(user?.username);\n\tconst [usernameState, setUsernameState] = useState(true);\n\tconst [name, setName] = useState(user?.name);\n\tconst [nameState, setNameState] = useState(true);\n\tconst [email, setEmail] = useState(user?.email);\n\tconst [emailState, setEmailState] = useState(true);\n\tconst [imageURL, setImageURL] = useState(user?.image);\n\tconst [imageURLState, setImageURLState] = useState(true);\n\tconst [password, setPassword] = useState(\"\");\n\tconst [passwordState, setPasswordState] = useState(true);\n\tconst [passwordVerify, setPasswordVerify] = useState(\"\");\n\tconst [passwordVerifyState, setPasswordVerifyState] = useState(true);\n\n\t// const updateUser = async (event) => {\n\t// \tevent.preventDefault();\n\n\t// \tconst res = await fetch(\"http://localhost:4000/api/users\", {\n\t// \t\tbody: JSON.stringify({\n\t// \t\t\tname,\n\t// \t\t\temail,\n\t// \t\t\tpassword,\n\t// \t\t\timageURL,\n\t// \t\t}),\n\t// \t\theaders: {\n\t// \t\t\t\"Content-Type\": \"application/json\",\n\t// \t\t},\n\t// \t\tmethod: \"POST\",\n\t// \t});\n\n\t// \tuser = await res.json();\n\t// \t// result.user => 'Ada Lovelace'\n\t// };\n\n\treturn (\n\t\t<>\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md=\"8\" sm=\"6\">\n\t\t\t\t\t\t<Form action=\"\" className=\"form\" method=\"\">\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t\t<Card.Title as=\"h4\">Edit Profile</Card.Title>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (usernameState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t\tUsername <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Username\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetUsername(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (isRequired(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetUsernameState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetUsernameState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t{usernameState ? null : <label className=\"error\">This field is required.</label>}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (nameState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetName(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// if (isRequired(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tsetNameState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// } else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tsetNameState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (emailState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"exampleInputEmail1\">Email address</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmail(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (emailValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmailState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmailState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t{emailState ? null : <label className=\"error\">This field is required.</label>}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"pl-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (imageURLState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Image</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"URL\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={imageURL}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURL(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (urlValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURLState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURLState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={\"has-label \" + (passwordState ? \"has-success\" : \"has-error\")}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPassword(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (minLength(e.target.value, 1)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPasswordState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPasswordState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t{passwordState ? null : <label className=\"error\">This field is required.</label>}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"p1-1\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"has-label \" + (passwordVerifyState ? \"has-success\" : \"has-error\")}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Verify Password</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"passwordVerify\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={passwordVerify}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPasswordVerify(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (equalTo(e.target.value, registerPassword)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPasswordStateVerify(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetPasswordStateVerify(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t{passwordVerifyState ? null : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"error\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tThis field is required and needs to be equal with your entered password.\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t\t\t<Button className=\"btn-fill pull-right\" type=\"submit\" variant=\"info\">\n\t\t\t\t\t\t\t\t\t\tUpdate Profile\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<div className=\"clearfix\"></div>\n\t\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col md=\"4\">\n\t\t\t\t\t\t<Card className=\"card-user\">\n\t\t\t\t\t\t\t<Card.Header className=\"no-padding\">\n\t\t\t\t\t\t\t\t<div className=\"card-image\">\n\t\t\t\t\t\t\t\t\t<img alt=\"...\" src={require(\"../assets/img/full-screen-image-3.jpg\")}></img>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t<div className=\"author\">\n\t\t\t\t\t\t\t\t\t<a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n\t\t\t\t\t\t\t\t\t\t<img alt=\"...\" className=\"avatar border-gray\" src=\"\"></img>\n\t\t\t\t\t\t\t\t\t\t<Card.Title as=\"h5\">Tania Keatley</Card.Title>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<p className=\"card-description\">michael24</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<p className=\"card-description text-center\">\n\t\t\t\t\t\t\t\t\tHey there! As you can see, <br></br>\n\t\t\t\t\t\t\t\t\tit is already looking great.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t\t<hr></hr>\n\t\t\t\t\t\t\t\t<div className=\"button-container text-center\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn-simple btn-icon\"\n\t\t\t\t\t\t\t\t\t\thref=\"#pablo\"\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fab fa-facebook-square\"></i>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn-simple btn-icon\"\n\t\t\t\t\t\t\t\t\t\thref=\"#pablo\"\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fab fa-twitter\"></i>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn-simple btn-icon\"\n\t\t\t\t\t\t\t\t\t\thref=\"#pablo\"\n\t\t\t\t\t\t\t\t\t\tonClick={(e) => e.preventDefault()}\n\t\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fab fa-google-plus-square\"></i>\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nexport default UserPage;\n\nexport async function getServerSideProps(context) {\n\tconst session = await getSession(context);\n\tlet user = await prisma.user.findUnique({\n\t\twhere: { id: session.user.id },\n\t});\n\tuser.emailVerified = JSON.stringify(user.emailVerified);\n\tuser.createdAt = JSON.stringify(user.createdAt);\n\tuser.updatedAt = JSON.stringify(user.updatedAt);\n\n\treturn {\n\t\tprops: { user },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}