{"ast":null,"code":"import _regeneratorRuntime from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { getSession, useSession } from \"next-auth/client\"; // react-bootstrap components\n\nimport { Badge, Button, Card, Form, InputGroup, Navbar, Nav, Container, Row, Col } from \"react-bootstrap\";\nimport { PrismaClient } from \"@prisma/client\";\n\nfunction saveUser(_x) {\n  return _saveUser.apply(this, arguments);\n}\n\nfunction _saveUser() {\n  _saveUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(user) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"/api/users\", {\n              method: \"POST\",\n              body: JSON.stringify(user)\n            });\n\n          case 2:\n            response = _context2.sent;\n\n            if (response.ok) {\n              _context2.next = 5;\n              break;\n            }\n\n            throw new Error(response.statusText);\n\n          case 5:\n            _context2.next = 7;\n            return response.json();\n\n          case 7:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _saveUser.apply(this, arguments);\n}\n\nvar emailValidation = function emailValidation(value) {\n  return /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\n};\n\nvar urlValidation = function urlValidation(value) {\n  var returnValue = true;\n\n  try {\n    new URL(value);\n  } catch (e) {\n    returnValue = false;\n  } finally {\n    return returnValue;\n  }\n\n  return false;\n};\n\nvar isRequired = function isRequired(value) {\n  return value !== null && value !== \"\" && value;\n};\n\nfunction UserPage(props) {\n  _s();\n\n  console.log(props);\n  var user;\n\n  var _useState = useState(user === null || user === void 0 ? void 0 : user.name),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState(true),\n      nameState = _useState2[0],\n      setNameState = _useState2[1];\n\n  var _useState3 = useState(user === null || user === void 0 ? void 0 : user.email),\n      email = _useState3[0],\n      setEmail = _useState3[1];\n\n  var _useState4 = useState(true),\n      emailState = _useState4[0],\n      setEmailState = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      password = _useState5[0],\n      setPassword = _useState5[1];\n\n  var _useState6 = useState(true),\n      passwordState = _useState6[0],\n      setPasswordState = _useState6[1];\n\n  var _useState7 = useState(user === null || user === void 0 ? void 0 : user.image),\n      imageURL = _useState7[0],\n      setImageURL = _useState7[1];\n\n  var _useState8 = useState(true),\n      imageURLState = _useState8[0],\n      setImageURLState = _useState8[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: \"8\",\n          sm: \"6\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            action: \"\",\n            className: \"form\",\n            method: \"\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: /*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                    as: \"h4\",\n                    children: \"Edit Profile\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pr-1\",\n                    md: \"5\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: nameState ? \"has-success\" : \"has-error\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        placeholder: \"Name\",\n                        name: \"name\",\n                        type: \"text\",\n                        value: name,\n                        onChange: function onChange(e) {\n                          setName(e.target.value);\n\n                          if (isRequired(e.target.value)) {\n                            setNameState(true);\n                          } else {\n                            setNameState(false);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 64,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pl-1\",\n                    md: \"4\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: emailState ? \"has-success\" : \"has-error\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"exampleInputEmail1\",\n                        children: \"Email address\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        placeholder: \"Email\",\n                        name: \"email\",\n                        type: \"text\",\n                        value: email,\n                        onChange: function onChange(e) {\n                          setEmail(e.target.value);\n\n                          if (emailValidation(e.target.value)) {\n                            setEmailState(true);\n                          } else {\n                            setEmailState(false);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pr-1\",\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        // value={user.password}\n                        placeholder: \"Password\",\n                        type: \"password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"pl-1\",\n                    md: \"6\",\n                    children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                      className: imageURLState ? \"has-success\" : \"has-error\",\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"Image\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 13\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                        placeholder: \"URL\",\n                        name: \"image\",\n                        type: \"text\",\n                        value: imageURL,\n                        onChange: function onChange(e) {\n                          setImageURL(e.target.value);\n\n                          if (urlValidation(e.target.value)) {\n                            setImageURLState(true);\n                          } else {\n                            setImageURLState(false);\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 13\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 12\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"btn-fill pull-right\",\n                  type: \"submit\",\n                  variant: \"info\",\n                  children: \"Update Profile\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"clearfix\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(UserPage, \"GvuI489aXp3/MVGRZ4u8FZ0OfG4=\");\n\n_c = UserPage;\n\nUserPage.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var session;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return getSession(ctx);\n\n          case 2:\n            session = _context.sent;\n            return _context.abrupt(\"return\", {\n              session: session\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/UserPage.js"],"names":["React","useState","getSession","useSession","Badge","Button","Card","Form","InputGroup","Navbar","Nav","Container","Row","Col","PrismaClient","saveUser","user","fetch","method","body","JSON","stringify","response","ok","Error","statusText","json","emailValidation","value","test","urlValidation","returnValue","URL","e","isRequired","UserPage","props","console","log","name","setName","nameState","setNameState","email","setEmail","emailState","setEmailState","password","setPassword","passwordState","setPasswordState","image","imageURL","setImageURL","imageURLState","setImageURLState","target","getInitialProps","ctx","session"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { getSession, useSession } from \"next-auth/client\";\n// react-bootstrap components\nimport { Badge, Button, Card, Form, InputGroup, Navbar, Nav, Container, Row, Col } from \"react-bootstrap\";\nimport { PrismaClient } from \"@prisma/client\";\n\nasync function saveUser(user) {\n\tconst response = await fetch(\"/api/users\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify(user),\n\t});\n\tif (!response.ok) {\n\t\tthrow new Error(response.statusText);\n\t}\n\n\treturn await response.json();\n}\n\nconst emailValidation = (value) =>\n\t/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\nconst urlValidation = (value) => {\n\tlet returnValue = true;\n\ttry {\n\t\tnew URL(value);\n\t} catch (e) {\n\t\treturnValue = false;\n\t} finally {\n\t\treturn returnValue;\n\t}\n\treturn false;\n};\nconst isRequired = (value) => value !== null && value !== \"\" && value;\n\nfunction UserPage(props) {\n\tconsole.log(props);\n\tlet user;\n\n\tconst [name, setName] = useState(user?.name);\n\tconst [nameState, setNameState] = useState(true);\n\tconst [email, setEmail] = useState(user?.email);\n\tconst [emailState, setEmailState] = useState(true);\n\tconst [password, setPassword] = useState(\"\");\n\tconst [passwordState, setPasswordState] = useState(true);\n\tconst [imageURL, setImageURL] = useState(user?.image);\n\tconst [imageURLState, setImageURLState] = useState(true);\n\n\treturn (\n\t\t<>\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col md=\"8\" sm=\"6\">\n\t\t\t\t\t\t<Form action=\"\" className=\"form\" method=\"\">\n\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t\t<Card.Title as=\"h4\">Edit Profile</Card.Title>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\" md=\"5\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={nameState ? \"has-success\" : \"has-error\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Name</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetName(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (isRequired(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetNameState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetNameState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"pl-1\" md=\"4\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={emailState ? \"has-success\" : \"has-error\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"exampleInputEmail1\">Email address</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmail(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (emailValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmailState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetEmailState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"pr-1\" md=\"6\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Password</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t// value={user.password}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"pl-1\" md=\"6\">\n\t\t\t\t\t\t\t\t\t\t\t<Form.Group className={imageURLState ? \"has-success\" : \"has-error\"}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label>Image</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"URL\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={imageURL}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURL(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (urlValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURLState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetImageURLState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t<Card.Footer>\n\t\t\t\t\t\t\t\t\t<Button className=\"btn-fill pull-right\" type=\"submit\" variant=\"info\">\n\t\t\t\t\t\t\t\t\t\tUpdate Profile\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<div className=\"clearfix\"></div>\n\t\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nUserPage.getInitialProps = async (ctx) => {\n\tconst session = await getSession(ctx);\n\t// const prisma = new PrismaClient();\n\t// if (session) {\n\t// \tconst user = await prisma.user.findUnique({\n\t// \t\twhere: {\n\t// \t\t\temail: session.user.email,\n\t// \t\t},\n\t// \t\tinclude: { requester: true, accepter: true },\n\t// \t});\n\t// }\n\treturn { session };\n};\n\nexport default UserPage;\n"]},"metadata":{},"sourceType":"module"}