{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/contexts/SportContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst qs = require(\"qs\");\n\nimport React, { Component, createContext } from \"react\";\nimport axios from \"axios\";\nexport const SportContext = /*#__PURE__*/createContext();\nexport class SportProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sportsData: [// { sport_id: 1, sport: \"football\", sport_name: \"NCAA Football\", league_name: \"college-football\", data: {} },\n      {\n        sport_id: 2,\n        sport: \"football\",\n        sport_name: \"NFL\",\n        league_name: \"nfl\",\n        data: {}\n      }, {\n        sport_id: 3,\n        sport: \"baseball\",\n        sport_name: \"MLB\",\n        league_name: \"mlb\",\n        data: {}\n      }, {\n        sport_id: 4,\n        sport: \"basketball\",\n        sport_name: \"NBA\",\n        league_name: \"nba\",\n        data: {}\n      }, {\n        sport_id: 5,\n        sport: \"basketball\",\n        sport_name: \"NCAA Men's Basketball\",\n        league_name: \"mens-college-basketball\",\n        data: {}\n      }, // { sport_id: 6, sport: \"hockey\", sport_name: \"NHL\", league_name: \"nhl\", data: {} },\n      {\n        sport_id: 8,\n        sport: \"basketball\",\n        sport_name: \"WNBA\",\n        league_name: \"wnba\",\n        data: {}\n      } // { sport_id: 10, sport: \"soccer\", sport_name: \"MLS\", league_name: \"MLS\", data: {} },\n      ],\n      blockchain: {},\n      fetchedSportData: false\n    };\n  }\n\n  async componentDidMount() {\n    let removeSportsData = [];\n    let sportsData = this.state.sportsData;\n    const getNode1 = `http://localhost:3001/blockchain`;\n    let response = await axios.get(getNode1);\n    const blockchain = response.data;\n\n    try {\n      sportsData = await Promise.all(sportsData.map(async league => {\n        let leagueData;\n        response = await axios({\n          method: \"GET\",\n          url: `http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard`\n        }).then(function (response) {\n          if (response.data.events.length === 0) {\n            removeSportsData.push(league);\n          } else {\n            leagueData = response.data;\n          }\n        }.bind(this));\n        return {\n          sport_id: league.sport_id,\n          sport: league.sport,\n          sport_name: league.sport_name,\n          league_name: league.league_name,\n          data: leagueData\n        };\n      }));\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    this.setState({\n      sportsData,\n      blockchain,\n      fetchedSportData: true\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(SportContext.Provider, {\n      value: _objectSpread({}, this.state),\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/contexts/SportContext.js"],"names":["qs","require","React","Component","createContext","axios","SportContext","SportProvider","constructor","props","state","sportsData","sport_id","sport","sport_name","league_name","data","blockchain","fetchedSportData","componentDidMount","removeSportsData","getNode1","response","get","Promise","all","map","league","leagueData","method","url","then","events","length","push","bind","err","console","log","message","setState","render","children"],"mappings":"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","sourcesContent":["const qs = require(\"qs\");\nimport React, { Component, createContext } from \"react\";\nimport axios from \"axios\";\n\nexport const SportContext = createContext();\n\nexport class SportProvider extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsportsData: [\n\t\t\t\t// { sport_id: 1, sport: \"football\", sport_name: \"NCAA Football\", league_name: \"college-football\", data: {} },\n\t\t\t\t{ sport_id: 2, sport: \"football\", sport_name: \"NFL\", league_name: \"nfl\", data: {} },\n\t\t\t\t{ sport_id: 3, sport: \"baseball\", sport_name: \"MLB\", league_name: \"mlb\", data: {} },\n\t\t\t\t{ sport_id: 4, sport: \"basketball\", sport_name: \"NBA\", league_name: \"nba\", data: {} },\n\t\t\t\t{\n\t\t\t\t\tsport_id: 5,\n\t\t\t\t\tsport: \"basketball\",\n\t\t\t\t\tsport_name: \"NCAA Men's Basketball\",\n\t\t\t\t\tleague_name: \"mens-college-basketball\",\n\t\t\t\t\tdata: {},\n\t\t\t\t},\n\t\t\t\t// { sport_id: 6, sport: \"hockey\", sport_name: \"NHL\", league_name: \"nhl\", data: {} },\n\t\t\t\t{ sport_id: 8, sport: \"basketball\", sport_name: \"WNBA\", league_name: \"wnba\", data: {} },\n\t\t\t\t// { sport_id: 10, sport: \"soccer\", sport_name: \"MLS\", league_name: \"MLS\", data: {} },\n\t\t\t],\n\t\t\tblockchain: {},\n\t\t\tfetchedSportData: false,\n\t\t};\n\t}\n\n\tasync componentDidMount() {\n\t\tlet removeSportsData = [];\n\t\tlet sportsData = this.state.sportsData;\n\n\t\tconst getNode1 = `http://localhost:3001/blockchain`;\n\t\tlet response = await axios.get(getNode1);\n\t\tconst blockchain = response.data;\n\n\t\ttry {\n\t\t\tsportsData = await Promise.all(\n\t\t\t\tsportsData.map(async (league) => {\n\t\t\t\t\tlet leagueData;\n\n\t\t\t\t\tresponse = await axios({\n\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\turl: `http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard`,\n\t\t\t\t\t}).then(\n\t\t\t\t\t\tfunction (response) {\n\t\t\t\t\t\t\tif (response.data.events.length === 0) {\n\t\t\t\t\t\t\t\tremoveSportsData.push(league);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tleagueData = response.data;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}.bind(this)\n\t\t\t\t\t);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsport_id: league.sport_id,\n\t\t\t\t\t\tsport: league.sport,\n\t\t\t\t\t\tsport_name: league.sport_name,\n\t\t\t\t\t\tleague_name: league.league_name,\n\t\t\t\t\t\tdata: leagueData,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t);\n\t\t} catch (err) {\n\t\t\tconsole.log(err.message);\n\t\t}\n\n\t\tthis.setState({ sportsData, blockchain, fetchedSportData: true });\n\t}\n\n\trender() {\n\t\treturn <SportContext.Provider value={{ ...this.state }}>{this.props.children}</SportContext.Provider>;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}