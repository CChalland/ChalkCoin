{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\"; // import prisma from \"../contexts/prisma\";\n\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\n\nasync function fetchBetsJSON() {\n  const res = await fetch(\"http://localhost:4000/api/bets\");\n  const bets = await res.json();\n  return bets;\n}\n\nfunction Bets(props) {\n  const {\n    0: bets,\n    1: setBets\n  } = useState([]);\n  console.log(props);\n  useEffect(() => {\n    const getData = async () => {\n      fetchBetsJSON().then(bets => {\n        setBets(bets);\n      });\n    };\n\n    getData();\n  }, []);\n  console.log(\"api bets\", bets);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"BETS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Bets;\nexport async function getServerSideProps(context) {\n  const {\n    req,\n    res\n  } = context;\n  const session = await getSession({\n    req\n  });\n  let currentUser = {};\n\n  if (session) {\n    currentUser = await prisma.user.findUnique({\n      where: {\n        id: session.user.id\n      }\n    });\n    delete currentUser.password;\n    delete currentUser.paypal;\n    delete currentUser.emailVerified;\n    delete currentUser.createdAt;\n    delete currentUser.updatedAt;\n  } // let bets = await prisma.bet.findMany({\n  // \twhere: {\n  // \t\taccepted: false,\n  // \t},\n  // });\n  // const betPromises = bets.map(async (bet) => {\n  // \tbet.details = JSON.parse(bet.details);\n  // \tbet.createdAt = JSON.stringify(bet.createdAt);\n  // \tbet.updatedAt = JSON.stringify(bet.updatedAt);\n  // \treturn bet;\n  // });\n  // const betsData = await Promise.all(betPromises);\n\n\n  return {\n    props: {\n      currentUser\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js"],"names":["React","useContext","useEffect","useState","Container","SportContext","getSession","axios","fetchBetsJSON","res","fetch","bets","json","Bets","props","setBets","console","log","getData","then","getServerSideProps","context","req","session","currentUser","prisma","user","findUnique","where","id","password","paypal","emailVerified","createdAt","updatedAt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,aAAf,GAA+B;AAC9B,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,SAAOD,IAAP;AACA;;AAED,SAASE,IAAT,CAAcC,KAAd,EAAqB;AACpB,QAAM;AAAA,OAACH,IAAD;AAAA,OAAOI;AAAP,MAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMgB,OAAO,GAAG,YAAY;AAC3BV,MAAAA,aAAa,GAAGW,IAAhB,CAAsBR,IAAD,IAAU;AAC9BI,QAAAA,OAAO,CAACJ,IAAD,CAAP;AACA,OAFD;AAGA,KAJD;;AAKAO,IAAAA,OAAO;AACP,GAPQ,EAON,EAPM,CAAT;AASAF,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,IAAxB;AACA,sBACC,QAAC,SAAD;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;AAED,eAAeE,IAAf;AAEA,OAAO,eAAeO,kBAAf,CAAkCC,OAAlC,EAA2C;AACjD,QAAM;AAAEC,IAAAA,GAAF;AAAOb,IAAAA;AAAP,MAAeY,OAArB;AACA,QAAME,OAAO,GAAG,MAAMjB,UAAU,CAAC;AAAEgB,IAAAA;AAAF,GAAD,CAAhC;AACA,MAAIE,WAAW,GAAG,EAAlB;;AACA,MAAID,OAAJ,EAAa;AACZC,IAAAA,WAAW,GAAG,MAAMC,MAAM,CAACC,IAAP,CAAYC,UAAZ,CAAuB;AAC1CC,MAAAA,KAAK,EAAE;AACNC,QAAAA,EAAE,EAAEN,OAAO,CAACG,IAAR,CAAaG;AADX;AADmC,KAAvB,CAApB;AAKA,WAAOL,WAAW,CAACM,QAAnB;AACA,WAAON,WAAW,CAACO,MAAnB;AACA,WAAOP,WAAW,CAACQ,aAAnB;AACA,WAAOR,WAAW,CAACS,SAAnB;AACA,WAAOT,WAAW,CAACU,SAAnB;AACA,GAfgD,CAiBjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAO;AACNpB,IAAAA,KAAK,EAAE;AAAEU,MAAAA;AAAF;AADD,GAAP;AAGA","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\n// import prisma from \"../contexts/prisma\";\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\n\nasync function fetchBetsJSON() {\n\tconst res = await fetch(\"http://localhost:4000/api/bets\");\n\tconst bets = await res.json();\n\treturn bets;\n}\n\nfunction Bets(props) {\n\tconst [bets, setBets] = useState([]);\n\tconsole.log(props);\n\n\tuseEffect(() => {\n\t\tconst getData = async () => {\n\t\t\tfetchBetsJSON().then((bets) => {\n\t\t\t\tsetBets(bets);\n\t\t\t});\n\t\t};\n\t\tgetData();\n\t}, []);\n\n\tconsole.log(\"api bets\", bets);\n\treturn (\n\t\t<Container>\n\t\t\t<div>BETS</div>\n\t\t</Container>\n\t);\n}\n\nexport default Bets;\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\tlet currentUser = {};\n\tif (session) {\n\t\tcurrentUser = await prisma.user.findUnique({\n\t\t\twhere: {\n\t\t\t\tid: session.user.id,\n\t\t\t},\n\t\t});\n\t\tdelete currentUser.password;\n\t\tdelete currentUser.paypal;\n\t\tdelete currentUser.emailVerified;\n\t\tdelete currentUser.createdAt;\n\t\tdelete currentUser.updatedAt;\n\t}\n\n\t// let bets = await prisma.bet.findMany({\n\t// \twhere: {\n\t// \t\taccepted: false,\n\t// \t},\n\t// });\n\t// const betPromises = bets.map(async (bet) => {\n\t// \tbet.details = JSON.parse(bet.details);\n\t// \tbet.createdAt = JSON.stringify(bet.createdAt);\n\t// \tbet.updatedAt = JSON.stringify(bet.updatedAt);\n\t// \treturn bet;\n\t// });\n\t// const betsData = await Promise.all(betPromises);\n\n\treturn {\n\t\tprops: { currentUser },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}