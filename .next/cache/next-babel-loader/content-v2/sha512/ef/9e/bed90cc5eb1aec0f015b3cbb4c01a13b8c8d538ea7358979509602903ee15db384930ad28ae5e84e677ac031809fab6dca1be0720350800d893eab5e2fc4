{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst sportsReducer = (state, action) => {\n  switch (action.type) {\n    case \"TESTING\":\n      console.log(\"TESTING in SportDispatch\", action);\n      return state.map(sport => {\n        const days = sport.data.days.filter(day => day.date !== action.date);\n        return sport.display_name === action.sport ? _objectSpread(_objectSpread({}, sport), {}, {\n          data: _objectSpread(_objectSpread({}, sport.data), {}, {\n            days: [{\n              date: action.date,\n              events: action.data.events\n            }]\n          })\n        }) : sport;\n      });\n\n    case \"NCAA Football\":\n      return state.map(sport => sport.display_name === action.type ? _objectSpread(_objectSpread({}, sport), {}, {\n        data: _objectSpread(_objectSpread({}, action.data), {}, {\n          days: sport.data.days\n        }),\n        reload: action.reload\n      }) : sport);\n\n    case \"NFL\":\n      return state.map(sport => sport.display_name === action.type ? _objectSpread(_objectSpread({}, sport), {}, {\n        data: _objectSpread(_objectSpread({}, action.data), {}, {\n          days: sport.data.days\n        }),\n        reload: action.reload\n      }) : sport);\n\n    case \"MLB\":\n      return state.map(sport => sport.display_name === action.type ? _objectSpread(_objectSpread({}, sport), {}, {\n        data: _objectSpread(_objectSpread({}, action.data), {}, {\n          days: sport.data.days\n        }),\n        reload: action.reload\n      }) : sport);\n\n    case \"NBA\":\n      return state.map(sport => sport.display_name === action.type ? _objectSpread(_objectSpread({}, sport), {}, {\n        data: _objectSpread(_objectSpread({}, action.data), {}, {\n          days: sport.data.days\n        }),\n        reload: action.reload\n      }) : sport);\n\n    case \"NCAA Men's Basketball\":\n      return state.map(sport => sport.display_name === action.type ? _objectSpread(_objectSpread({}, sport), {}, {\n        data: _objectSpread(_objectSpread({}, action.data), {}, {\n          days: sport.data.days\n        }),\n        reload: action.reload\n      }) : sport);\n\n    case \"NHL\":\n      return state.map(sport => sport.display_name === action.type ? _objectSpread(_objectSpread({}, sport), {}, {\n        data: _objectSpread(_objectSpread({}, action.data), {}, {\n          days: sport.data.days\n        }),\n        reload: action.reload\n      }) : sport);\n\n    case \"WNBA\":\n      return state.map(sport => sport.display_name === action.type ? _objectSpread(_objectSpread({}, sport), {}, {\n        data: _objectSpread(_objectSpread({}, action.data), {}, {\n          days: sport.data.days\n        }),\n        reload: action.reload\n      }) : sport);\n\n    case \"ALL\":\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport default sportsReducer;","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/reducers/Sports.Reducer.js"],"names":["sportsReducer","state","action","type","console","log","map","sport","days","data","filter","day","date","display_name","events","reload"],"mappings":"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","sourcesContent":["const sportsReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"TESTING\":\n\t\t\tconsole.log(\"TESTING in SportDispatch\", action);\n\n\t\t\treturn state.map((sport) => {\n\t\t\t\tconst days = sport.data.days.filter((day) => day.date !== action.date);\n\n\t\t\t\treturn sport.display_name === action.sport\n\t\t\t\t\t? {\n\t\t\t\t\t\t\t...sport,\n\t\t\t\t\t\t\tdata: { ...sport.data, days: [{ date: action.date, events: action.data.events }] },\n\t\t\t\t\t  }\n\t\t\t\t\t: sport;\n\t\t\t});\n\t\tcase \"NCAA Football\":\n\t\t\treturn state.map((sport) =>\n\t\t\t\tsport.display_name === action.type\n\t\t\t\t\t? { ...sport, data: { ...action.data, days: sport.data.days }, reload: action.reload }\n\t\t\t\t\t: sport\n\t\t\t);\n\t\tcase \"NFL\":\n\t\t\treturn state.map((sport) =>\n\t\t\t\tsport.display_name === action.type\n\t\t\t\t\t? { ...sport, data: { ...action.data, days: sport.data.days }, reload: action.reload }\n\t\t\t\t\t: sport\n\t\t\t);\n\t\tcase \"MLB\":\n\t\t\treturn state.map((sport) =>\n\t\t\t\tsport.display_name === action.type\n\t\t\t\t\t? { ...sport, data: { ...action.data, days: sport.data.days }, reload: action.reload }\n\t\t\t\t\t: sport\n\t\t\t);\n\t\tcase \"NBA\":\n\t\t\treturn state.map((sport) =>\n\t\t\t\tsport.display_name === action.type\n\t\t\t\t\t? { ...sport, data: { ...action.data, days: sport.data.days }, reload: action.reload }\n\t\t\t\t\t: sport\n\t\t\t);\n\t\tcase \"NCAA Men's Basketball\":\n\t\t\treturn state.map((sport) =>\n\t\t\t\tsport.display_name === action.type\n\t\t\t\t\t? { ...sport, data: { ...action.data, days: sport.data.days }, reload: action.reload }\n\t\t\t\t\t: sport\n\t\t\t);\n\t\tcase \"NHL\":\n\t\t\treturn state.map((sport) =>\n\t\t\t\tsport.display_name === action.type\n\t\t\t\t\t? { ...sport, data: { ...action.data, days: sport.data.days }, reload: action.reload }\n\t\t\t\t\t: sport\n\t\t\t);\n\t\tcase \"WNBA\":\n\t\t\treturn state.map((sport) =>\n\t\t\t\tsport.display_name === action.type\n\t\t\t\t\t? { ...sport, data: { ...action.data, days: sport.data.days }, reload: action.reload }\n\t\t\t\t\t: sport\n\t\t\t);\n\t\tcase \"ALL\":\n\t\t\treturn action.data;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default sportsReducer;\n"]},"metadata":{},"sourceType":"module"}