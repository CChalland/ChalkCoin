{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport Select, { components } from \"react-select\";\nimport prisma from \"../contexts/prisma\";\n\nfunction Test(props) {\n  const {\n    0: singleSelect,\n    1: setSingleSelect\n  } = useState(\"\");\n\n  const IconOption = props => /*#__PURE__*/_jsxDEV(components.Option, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"photo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.data.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: props.data.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n\n  const optionsUsers = props.users.map(user => {\n    return {\n      value: user.id,\n      image: user.image,\n      label: user.username\n    };\n  });\n  console.log(props.users);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      className: \"react-select primary\",\n      classNamePrefix: \"react-select\",\n      name: \"singleSelect\",\n      value: singleSelect,\n      onChange: value => setSingleSelect(value),\n      options: optionsUsers,\n      placeholder: \"Search Username\",\n      components: {\n        Option: IconOption\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Test;\nexport async function getServerSideProps(context) {\n  let users = await prisma.user.findMany();\n  users = users.map(user => {\n    delete user.emailVerified;\n    delete user.createdAt;\n    delete user.updatedAt;\n    return user;\n  });\n  return {\n    props: {\n      users\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js"],"names":["React","useState","axios","Container","Col","Row","Button","Modal","Carousel","Tab","Nav","Card","Select","components","prisma","Test","props","singleSelect","setSingleSelect","IconOption","data","image","label","optionsUsers","users","map","user","value","id","username","console","log","Option","getServerSideProps","context","findMany","emailVerified","createdAt","updatedAt"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,KAAtC,EAA6CC,QAA7C,EAAuDC,GAAvD,EAA4DC,GAA5D,EAAiEC,IAAjE,QAA6E,iBAA7E;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACpB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCjB,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMkB,UAAU,GAAIH,KAAD,iBAClB,QAAC,UAAD,CAAY,MAAZ,kCAAuBA,KAAvB;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACC;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACI,IAAN,CAAWC;AAArB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,kBAAuBL,KAAK,CAACI,IAAN,CAAWE;AAAlC;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;;AAWA,QAAMC,YAAY,GAAGP,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AAC9C,WAAO;AACNC,MAAAA,KAAK,EAAED,IAAI,CAACE,EADN;AAENP,MAAAA,KAAK,EAAEK,IAAI,CAACL,KAFN;AAGNC,MAAAA,KAAK,EAAEI,IAAI,CAACG;AAHN,KAAP;AAKA,GANoB,CAArB;AAQAC,EAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACQ,KAAlB;AACA,sBACC,QAAC,SAAD;AAAA,2BACC,QAAC,MAAD;AACC,MAAA,SAAS,EAAC,sBADX;AAEC,MAAA,eAAe,EAAC,cAFjB;AAGC,MAAA,IAAI,EAAC,cAHN;AAIC,MAAA,KAAK,EAAEP,YAJR;AAKC,MAAA,QAAQ,EAAGU,KAAD,IAAWT,eAAe,CAACS,KAAD,CALrC;AAMC,MAAA,OAAO,EAAEJ,YANV;AAOC,MAAA,WAAW,EAAC,iBAPb;AAQC,MAAA,UAAU,EAAE;AAAES,QAAAA,MAAM,EAAEb;AAAV;AARb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;AAED,eAAeJ,IAAf;AAEA,OAAO,eAAekB,kBAAf,CAAkCC,OAAlC,EAA2C;AACjD,MAAIV,KAAK,GAAG,MAAMV,MAAM,CAACY,IAAP,CAAYS,QAAZ,EAAlB;AACAX,EAAAA,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACU,aAAZ;AACA,WAAOV,IAAI,CAACW,SAAZ;AACA,WAAOX,IAAI,CAACY,SAAZ;AAEA,WAAOZ,IAAP;AACA,GANO,CAAR;AAQA,SAAO;AACNV,IAAAA,KAAK,EAAE;AAAEQ,MAAAA;AAAF;AADD,GAAP;AAGA","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport Select, { components } from \"react-select\";\nimport prisma from \"../contexts/prisma\";\n\nfunction Test(props) {\n\tconst [singleSelect, setSingleSelect] = useState(\"\");\n\tconst IconOption = (props) => (\n\t\t<components.Option {...props}>\n\t\t\t<div className=\"user\">\n\t\t\t\t<div className=\"photo\">\n\t\t\t\t\t<img src={props.data.image} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"info\">{props.data.label}</div>\n\t\t\t</div>\n\t\t</components.Option>\n\t);\n\n\tconst optionsUsers = props.users.map((user) => {\n\t\treturn {\n\t\t\tvalue: user.id,\n\t\t\timage: user.image,\n\t\t\tlabel: user.username,\n\t\t};\n\t});\n\n\tconsole.log(props.users);\n\treturn (\n\t\t<Container>\n\t\t\t<Select\n\t\t\t\tclassName=\"react-select primary\"\n\t\t\t\tclassNamePrefix=\"react-select\"\n\t\t\t\tname=\"singleSelect\"\n\t\t\t\tvalue={singleSelect}\n\t\t\t\tonChange={(value) => setSingleSelect(value)}\n\t\t\t\toptions={optionsUsers}\n\t\t\t\tplaceholder=\"Search Username\"\n\t\t\t\tcomponents={{ Option: IconOption }}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default Test;\n\nexport async function getServerSideProps(context) {\n\tlet users = await prisma.user.findMany();\n\tusers = users.map((user) => {\n\t\tdelete user.emailVerified;\n\t\tdelete user.createdAt;\n\t\tdelete user.updatedAt;\n\n\t\treturn user;\n\t});\n\n\treturn {\n\t\tprops: { users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}