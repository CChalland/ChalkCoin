{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/games.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport SportCard from \"../components/SportCard\";\n\nfunction Games(props) {\n  _s();\n\n  var _useContext = useContext(SportContext),\n      sportsData = _useContext.sportsData;\n\n  var sportData = sportsData.filter(function (sport) {\n    return sport.abbrv === props.query.sport.toUpperCase();\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: sportData[0].display_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SportCard, {\n      sportData: sportData[0],\n      sportName: sportData[0].display_name,\n      users: props.users,\n      currentUser: props.currentUser\n    }, sportData[0].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Games, \"j5f6fnVVYmPPFg5S6LYd3DQxvaE=\");\n\n_c = Games;\nexport var __N_SSP = true;\nexport default Games;\n\nvar _c;\n\n$RefreshReg$(_c, \"Games\");","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/games.js"],"names":["React","useContext","Container","SportContext","SportCard","Games","props","sportsData","sportData","filter","sport","abbrv","query","toUpperCase","display_name","users","currentUser","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAIA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AAAA,oBACEL,UAAU,CAACE,YAAD,CADZ;AAAA,MACbI,UADa,eACbA,UADa;;AAErB,MAAIC,SAAS,GAAGD,UAAU,CAACE,MAAX,CAAkB,UAACC,KAAD,EAAW;AAC5C,WAAOA,KAAK,CAACC,KAAN,KAAgBL,KAAK,CAACM,KAAN,CAAYF,KAAZ,CAAkBG,WAAlB,EAAvB;AACA,GAFe,CAAhB;AAIA,sBACC,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,4BACC;AAAA,gBAAKL,SAAS,CAAC,CAAD,CAAT,CAAaM;AAAlB;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,SAAD;AAEC,MAAA,SAAS,EAAEN,SAAS,CAAC,CAAD,CAFrB;AAGC,MAAA,SAAS,EAAEA,SAAS,CAAC,CAAD,CAAT,CAAaM,YAHzB;AAIC,MAAA,KAAK,EAAER,KAAK,CAACS,KAJd;AAKC,MAAA,WAAW,EAAET,KAAK,CAACU;AALpB,OACMR,SAAS,CAAC,CAAD,CAAT,CAAaS,EADnB;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA;;GAlBQZ,K;;KAAAA,K;;AAoBT,eAAeA,KAAf","sourcesContent":["import React, { useContext } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport SportCard from \"../components/SportCard\";\nimport prisma from \"../contexts/prisma\";\nimport { getSession } from \"next-auth/client\";\n\nfunction Games(props) {\n\tconst { sportsData } = useContext(SportContext);\n\tlet sportData = sportsData.filter((sport) => {\n\t\treturn sport.abbrv === props.query.sport.toUpperCase();\n\t});\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<h1>{sportData[0].display_name}</h1>\n\t\t\t<SportCard\n\t\t\t\tkey={sportData[0].id}\n\t\t\t\tsportData={sportData[0]}\n\t\t\t\tsportName={sportData[0].display_name}\n\t\t\t\tusers={props.users}\n\t\t\t\tcurrentUser={props.currentUser}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default Games;\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\tlet currentUser = {};\n\tlet users = [];\n\tif (session) {\n\t\tcurrentUser = await prisma.user.findUnique({\n\t\t\twhere: {\n\t\t\t\tid: session.user.id,\n\t\t\t},\n\t\t});\n\t\tdelete currentUser.password;\n\t\tdelete currentUser.paypal;\n\t\tdelete currentUser.emailVerified;\n\t\tdelete currentUser.createdAt;\n\t\tdelete currentUser.updatedAt;\n\n\t\tusers = await prisma.user.findMany();\n\t\tusers = users\n\t\t\t.map((user) => {\n\t\t\t\tdelete user.password;\n\t\t\t\tdelete user.balance;\n\t\t\t\tdelete user.paypal;\n\t\t\t\tdelete user.emailVerified;\n\t\t\t\tdelete user.createdAt;\n\t\t\t\tdelete user.updatedAt;\n\n\t\t\t\treturn user;\n\t\t\t})\n\t\t\t.filter((user) => {\n\t\t\t\treturn user.id !== currentUser.id;\n\t\t\t});\n\t}\n\n\treturn {\n\t\tprops: { query: context.query, users, currentUser },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}