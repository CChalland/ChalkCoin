{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/ChalkCoin/pages/blockchain.js\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\nimport { BlockchainContext } from \"../contexts/Blockchain.Context\";\nimport { UserContext } from \"../contexts/User.Context\";\nimport PendingTransactions from \"../components/Blockchain/PendingTransactions\";\nimport Chain from \"../components/Blockchain/Chain\";\nimport SelectedBlock from \"../components/Blockchain/SelectedBlock\";\nexport default function Blockchain() {\n  const currentUser = useContext(UserContext);\n  const blockchain = useContext(BlockchainContext);\n  const {\n    0: pendingTransactions,\n    1: setPendingTransactions\n  } = useState(blockchain.pendingTransactions);\n  const {\n    0: pendingTransactionsState,\n    1: setPendingTransactionsState\n  } = useState(false);\n  const {\n    0: blocks,\n    1: setBlocks\n  } = useState([]);\n  const {\n    0: blocksState,\n    1: setBlocksState\n  } = useState(false);\n  const {\n    0: selectedBlock,\n    1: setSelectedBlock\n  } = useState(blockchain.selectedBlock);\n  const {\n    0: selectedBlockState,\n    1: setSelectedBlockState\n  } = useState(false);\n  const {\n    0: mineState,\n    1: setMineState\n  } = useState(false); // const blockchainBlocks = [\n  // \t...blockchain.chain.slice(Math.max(blockchain.chain.length - 5, 1)),\n  // ].reverse();\n\n  useEffect(() => {\n    setPendingTransactions(blockchain.pendingTransactions);\n  }, [blockchain.pendingTransactions]);\n  useEffect(() => {\n    if (blockchain.initialized) setPendingTransactionsState(true);\n    if (pendingTransactions.length >= 10) setMineState(true);else setMineState(false);\n  }, [pendingTransactions]);\n  useEffect(() => {\n    setBlocks([...blockchain.chain].reverse());\n    if (blockchain.chain.length > 0) setBlocksState(true);\n  }, [blockchain.chain]);\n  useEffect(() => {\n    setSelectedBlock(blockchain.selectedBlock);\n    if (blockchain.selectedBlock.hash) setSelectedBlockState(true);\n  }, [blockchain.selectedBlock]);\n  let mineAlert;\n\n  if (mineState) {\n    mineAlert = /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"alert-with-icon\",\n      variant: \"success\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-hidden\": true,\n        className: \"close\",\n        \"data-dismiss\": \"alert\",\n        type: \"button\",\n        onClick: () => {\n          setMineState(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"nc-icon nc-simple-remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-notify\": \"icon\",\n        className: \"nc-icon nc-bell-55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        \"data-notify\": \"message\",\n        children: \"There's enough pending transactions to be mined.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this);\n  } // console.log(\"blockchain\", blockchain);\n  // console.log(\"pending transactions\", pendingTransactions);\n  // console.log(\"blockchain blocks\", blockchainBlocks);\n  // console.log(\"selectedBlock\", selectedBlock);\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: mineAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PendingTransactions, {\n      pendingTransactions: pendingTransactions,\n      mineState: mineState,\n      currentUser: currentUser,\n      loaded: pendingTransactionsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Chain, {\n      blocks: blocks,\n      selectedBlock: selectedBlock,\n      loaded: blocksState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(SelectedBlock, {\n      selectedBlock: selectedBlock,\n      currentUser: currentUser,\n      loaded: selectedBlockState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/pages/blockchain.js"],"names":["useContext","useEffect","useState","Container","Row","Col","Alert","BlockchainContext","UserContext","PendingTransactions","Chain","SelectedBlock","Blockchain","currentUser","blockchain","pendingTransactions","setPendingTransactions","pendingTransactionsState","setPendingTransactionsState","blocks","setBlocks","blocksState","setBlocksState","selectedBlock","setSelectedBlock","selectedBlockState","setSelectedBlockState","mineState","setMineState","initialized","length","chain","reverse","hash","mineAlert"],"mappings":"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","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\nimport { BlockchainContext } from \"../contexts/Blockchain.Context\";\nimport { UserContext } from \"../contexts/User.Context\";\nimport PendingTransactions from \"../components/Blockchain/PendingTransactions\";\nimport Chain from \"../components/Blockchain/Chain\";\nimport SelectedBlock from \"../components/Blockchain/SelectedBlock\";\n\nexport default function Blockchain() {\n\tconst currentUser = useContext(UserContext);\n\tconst blockchain = useContext(BlockchainContext);\n\tconst [pendingTransactions, setPendingTransactions] = useState(blockchain.pendingTransactions);\n\tconst [pendingTransactionsState, setPendingTransactionsState] = useState(false);\n\tconst [blocks, setBlocks] = useState([]);\n\tconst [blocksState, setBlocksState] = useState(false);\n\tconst [selectedBlock, setSelectedBlock] = useState(blockchain.selectedBlock);\n\tconst [selectedBlockState, setSelectedBlockState] = useState(false);\n\tconst [mineState, setMineState] = useState(false);\n\t// const blockchainBlocks = [\n\t// \t...blockchain.chain.slice(Math.max(blockchain.chain.length - 5, 1)),\n\t// ].reverse();\n\n\tuseEffect(() => {\n\t\tsetPendingTransactions(blockchain.pendingTransactions);\n\t}, [blockchain.pendingTransactions]);\n\n\tuseEffect(() => {\n\t\tif (blockchain.initialized) setPendingTransactionsState(true);\n\t\tif (pendingTransactions.length >= 10) setMineState(true);\n\t\telse setMineState(false);\n\t}, [pendingTransactions]);\n\n\tuseEffect(() => {\n\t\tsetBlocks([...blockchain.chain].reverse());\n\t\tif (blockchain.chain.length > 0) setBlocksState(true);\n\t}, [blockchain.chain]);\n\n\tuseEffect(() => {\n\t\tsetSelectedBlock(blockchain.selectedBlock);\n\t\tif (blockchain.selectedBlock.hash) setSelectedBlockState(true);\n\t}, [blockchain.selectedBlock]);\n\n\tlet mineAlert;\n\tif (mineState) {\n\t\tmineAlert = (\n\t\t\t<Alert className=\"alert-with-icon\" variant=\"success\">\n\t\t\t\t<button\n\t\t\t\t\taria-hidden={true}\n\t\t\t\t\tclassName=\"close\"\n\t\t\t\t\tdata-dismiss=\"alert\"\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetMineState(false);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"nc-icon nc-simple-remove\"></i>\n\t\t\t\t</button>\n\t\t\t\t<span data-notify=\"icon\" className=\"nc-icon nc-bell-55\"></span>\n\t\t\t\t<span data-notify=\"message\">{\"There's enough pending transactions to be mined.\"}</span>\n\t\t\t</Alert>\n\t\t);\n\t}\n\n\t// console.log(\"blockchain\", blockchain);\n\t// console.log(\"pending transactions\", pendingTransactions);\n\t// console.log(\"blockchain blocks\", blockchainBlocks);\n\t// console.log(\"selectedBlock\", selectedBlock);\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col>{mineAlert}</Col>\n\t\t\t</Row>\n\t\t\t<PendingTransactions\n\t\t\t\tpendingTransactions={pendingTransactions}\n\t\t\t\tmineState={mineState}\n\t\t\t\tcurrentUser={currentUser}\n\t\t\t\tloaded={pendingTransactionsState}\n\t\t\t/>\n\t\t\t<Chain blocks={blocks} selectedBlock={selectedBlock} loaded={blocksState} />\n\t\t\t<SelectedBlock selectedBlock={selectedBlock} currentUser={currentUser} loaded={selectedBlockState} />\n\t\t</Container>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}