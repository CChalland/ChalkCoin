{"ast":null,"code":"function homeAwayHelper(game, requesterPickName) {\n  let requesterPickTeam = game.competitions[0].competitors.filter(team => {\n    return team.team.shortDisplayName === requesterPickName;\n  });\n  let acceptingPickTeam = game.competitions[0].competitors.filter(team => {\n    return team.team.shortDisplayName !== requesterPickName;\n  });\n  return {\n    requesterPickTeam,\n    acceptingPickTeam\n  };\n}\n\nexport function BetCardData(bet) {\n  const {\n    requesterPickTeam,\n    acceptingPickTeam\n  } = homeAwayHelper(bet.event, bet.details.winner);\n  return {\n    requesterPickTeam,\n    acceptingPickTeam\n  }; // let requesterPickTeamPeriods, acceptingPickTeamPeriods, requesterPickTeamRecords, acceptingPickTeamRecords;\n  // let temp = [\n  // \t{ name: \"Home\", type: \"home\", summary: 0 },\n  // \t{ name: \"Away\", type: \"away\", summary: 0 },\n  // ];\n  // if (sportName === \"MLB\") {\n  // \tlet runs, hits, errors;\n  // \truns = awayTeam[0].statistics.filter((stat) => {\n  // \t\treturn stat.name === \"runs\";\n  // \t});\n  // \thits = awayTeam[0].statistics.filter((stat) => {\n  // \t\treturn stat.name === \"hits\";\n  // \t});\n  // \terrors = awayTeam[0].statistics.filter((stat) => {\n  // \t\treturn stat.name === \"errors\";\n  // \t});\n  // \tacceptingPickTeamPeriods = [runs[0], hits[0], errors[0]];\n  // \truns = homeTeam[0].statistics.filter((stat) => {\n  // \t\treturn stat.name === \"runs\";\n  // \t});\n  // \thits = homeTeam[0].statistics.filter((stat) => {\n  // \t\treturn stat.name === \"hits\";\n  // \t});\n  // \terrors = homeTeam[0].statistics.filter((stat) => {\n  // \t\treturn stat.name === \"errors\";\n  // \t});\n  // \trequesterPickTeamPeriods = [runs[0], hits[0], errors[0]];\n  // } else if (\n  // \tgame.status.type.description === \"In Progress\" ||\n  // \tgame.status.type.description === \"End of Period\" ||\n  // \tgame.status.type.description === \"Halftime\" ||\n  // \tgame.status.type.completed\n  // ) {\n  // \tacceptingPickTeamPeriods = awayTeam[0].linescores;\n  // \trequesterPickTeamPeriods = homeTeam[0].linescores;\n  // } else {\n  // \tacceptingPickTeamPeriods = [];\n  // \trequesterPickTeamPeriods = [];\n  // }\n  // if (!game.competitions[0].competitors[0].records) {\n  // \trequesterPickTeamRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n  // \tacceptingPickTeamRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n  // } else if (game.competitions[0].competitors[0].records.length > 1) {\n  // \trequesterPickTeamRecords = homeTeam[0].records;\n  // \tacceptingPickTeamRecords = awayTeam[0].records;\n  // } else {\n  // \trequesterPickTeamRecords = [...homeTeam[0].records, ...temp];\n  // \tacceptingPickTeamRecords = [...awayTeam[0].records, ...temp];\n  // }\n  // return {\n  // \tsportName: sportName,\n  // \tstatus: game.status,\n  // \tshortDetail: game.competitions[0].status.type.shortDetail,\n  // \tdetail: game.competitions[0].status.type.detail,\n  // \taway: {\n  // \t\tabbreviation: awayTeam[0].team.abbreviation,\n  // \t\talternateColor: awayTeam[0].team.alternateColor,\n  // \t\tcolor: awayTeam[0].team.color,\n  // \t\tlogo: awayTeam[0].team.logo,\n  // \t\tname: awayTeam[0].team.shortDisplayName,\n  // \t\trecords: acceptingPickTeamRecords,\n  // \t\tscore: parseInt(awayTeam[0].score),\n  // \t\tperiods: acceptingPickTeamPeriods,\n  // \t},\n  // \thome: {\n  // \t\tabbreviation: homeTeam[0].team.abbreviation,\n  // \t\talternateColor: homeTeam[0].team.alternateColor,\n  // \t\tcolor: homeTeam[0].team.color,\n  // \t\tlogo: homeTeam[0].team.logo,\n  // \t\tname: homeTeam[0].team.shortDisplayName,\n  // \t\trecords: requesterPickTeamRecords,\n  // \t\tscore: parseInt(homeTeam[0].score),\n  // \t\tperiods: requesterPickTeamPeriods,\n  // \t},\n  // };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/helpers/BetCard.js"],"names":["homeAwayHelper","game","requesterPickName","requesterPickTeam","competitions","competitors","filter","team","shortDisplayName","acceptingPickTeam","BetCardData","bet","event","details","winner"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,IAAxB,EAA8BC,iBAA9B,EAAiD;AAChD,MAAIC,iBAAiB,GAAGF,IAAI,CAACG,YAAL,CAAkB,CAAlB,EAAqBC,WAArB,CAAiCC,MAAjC,CAAyCC,IAAD,IAAU;AACzE,WAAOA,IAAI,CAACA,IAAL,CAAUC,gBAAV,KAA+BN,iBAAtC;AACA,GAFuB,CAAxB;AAGA,MAAIO,iBAAiB,GAAGR,IAAI,CAACG,YAAL,CAAkB,CAAlB,EAAqBC,WAArB,CAAiCC,MAAjC,CAAyCC,IAAD,IAAU;AACzE,WAAOA,IAAI,CAACA,IAAL,CAAUC,gBAAV,KAA+BN,iBAAtC;AACA,GAFuB,CAAxB;AAGA,SAAO;AAAEC,IAAAA,iBAAF;AAAqBM,IAAAA;AAArB,GAAP;AACA;;AAED,OAAO,SAASC,WAAT,CAAqBC,GAArB,EAA0B;AAChC,QAAM;AAAER,IAAAA,iBAAF;AAAqBM,IAAAA;AAArB,MAA2CT,cAAc,CAACW,GAAG,CAACC,KAAL,EAAYD,GAAG,CAACE,OAAJ,CAAYC,MAAxB,CAA/D;AAEA,SAAO;AAAEX,IAAAA,iBAAF;AAAqBM,IAAAA;AAArB,GAAP,CAHgC,CAKhC;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["function homeAwayHelper(game, requesterPickName) {\n\tlet requesterPickTeam = game.competitions[0].competitors.filter((team) => {\n\t\treturn team.team.shortDisplayName === requesterPickName;\n\t});\n\tlet acceptingPickTeam = game.competitions[0].competitors.filter((team) => {\n\t\treturn team.team.shortDisplayName !== requesterPickName;\n\t});\n\treturn { requesterPickTeam, acceptingPickTeam };\n}\n\nexport function BetCardData(bet) {\n\tconst { requesterPickTeam, acceptingPickTeam } = homeAwayHelper(bet.event, bet.details.winner);\n\n\treturn { requesterPickTeam, acceptingPickTeam };\n\n\t// let requesterPickTeamPeriods, acceptingPickTeamPeriods, requesterPickTeamRecords, acceptingPickTeamRecords;\n\t// let temp = [\n\t// \t{ name: \"Home\", type: \"home\", summary: 0 },\n\t// \t{ name: \"Away\", type: \"away\", summary: 0 },\n\t// ];\n\n\t// if (sportName === \"MLB\") {\n\t// \tlet runs, hits, errors;\n\t// \truns = awayTeam[0].statistics.filter((stat) => {\n\t// \t\treturn stat.name === \"runs\";\n\t// \t});\n\t// \thits = awayTeam[0].statistics.filter((stat) => {\n\t// \t\treturn stat.name === \"hits\";\n\t// \t});\n\t// \terrors = awayTeam[0].statistics.filter((stat) => {\n\t// \t\treturn stat.name === \"errors\";\n\t// \t});\n\t// \tacceptingPickTeamPeriods = [runs[0], hits[0], errors[0]];\n\n\t// \truns = homeTeam[0].statistics.filter((stat) => {\n\t// \t\treturn stat.name === \"runs\";\n\t// \t});\n\t// \thits = homeTeam[0].statistics.filter((stat) => {\n\t// \t\treturn stat.name === \"hits\";\n\t// \t});\n\t// \terrors = homeTeam[0].statistics.filter((stat) => {\n\t// \t\treturn stat.name === \"errors\";\n\t// \t});\n\t// \trequesterPickTeamPeriods = [runs[0], hits[0], errors[0]];\n\t// } else if (\n\t// \tgame.status.type.description === \"In Progress\" ||\n\t// \tgame.status.type.description === \"End of Period\" ||\n\t// \tgame.status.type.description === \"Halftime\" ||\n\t// \tgame.status.type.completed\n\t// ) {\n\t// \tacceptingPickTeamPeriods = awayTeam[0].linescores;\n\t// \trequesterPickTeamPeriods = homeTeam[0].linescores;\n\t// } else {\n\t// \tacceptingPickTeamPeriods = [];\n\t// \trequesterPickTeamPeriods = [];\n\t// }\n\n\t// if (!game.competitions[0].competitors[0].records) {\n\t// \trequesterPickTeamRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n\t// \tacceptingPickTeamRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n\t// } else if (game.competitions[0].competitors[0].records.length > 1) {\n\t// \trequesterPickTeamRecords = homeTeam[0].records;\n\t// \tacceptingPickTeamRecords = awayTeam[0].records;\n\t// } else {\n\t// \trequesterPickTeamRecords = [...homeTeam[0].records, ...temp];\n\t// \tacceptingPickTeamRecords = [...awayTeam[0].records, ...temp];\n\t// }\n\n\t// return {\n\t// \tsportName: sportName,\n\t// \tstatus: game.status,\n\t// \tshortDetail: game.competitions[0].status.type.shortDetail,\n\t// \tdetail: game.competitions[0].status.type.detail,\n\t// \taway: {\n\t// \t\tabbreviation: awayTeam[0].team.abbreviation,\n\t// \t\talternateColor: awayTeam[0].team.alternateColor,\n\t// \t\tcolor: awayTeam[0].team.color,\n\t// \t\tlogo: awayTeam[0].team.logo,\n\t// \t\tname: awayTeam[0].team.shortDisplayName,\n\t// \t\trecords: acceptingPickTeamRecords,\n\t// \t\tscore: parseInt(awayTeam[0].score),\n\t// \t\tperiods: acceptingPickTeamPeriods,\n\t// \t},\n\t// \thome: {\n\t// \t\tabbreviation: homeTeam[0].team.abbreviation,\n\t// \t\talternateColor: homeTeam[0].team.alternateColor,\n\t// \t\tcolor: homeTeam[0].team.color,\n\t// \t\tlogo: homeTeam[0].team.logo,\n\t// \t\tname: homeTeam[0].team.shortDisplayName,\n\t// \t\trecords: requesterPickTeamRecords,\n\t// \t\tscore: parseInt(homeTeam[0].score),\n\t// \t\tperiods: requesterPickTeamPeriods,\n\t// \t},\n\t// };\n}\n"]},"metadata":{},"sourceType":"module"}