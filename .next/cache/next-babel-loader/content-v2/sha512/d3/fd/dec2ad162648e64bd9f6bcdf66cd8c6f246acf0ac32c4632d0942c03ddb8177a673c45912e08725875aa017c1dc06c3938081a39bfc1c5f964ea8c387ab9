{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\"; // import { Link } from \"../routes\";\n\nimport Layout from \"../components/Layout\";\nimport SportTabs from \"../components/SportTabs\";\nimport { SportContext } from \"../contexts/SportContext\";\nimport { Card } from \"react-bootstrap\";\n\nclass BetokenIndex extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sportsData: [],\n      blockchain: {},\n      loadingData: false,\n      fetchedSportData: false\n    };\n    this.renderCurrentBets = this.renderCurrentBets.bind(this);\n  }\n\n  renderCurrentBets(blockchain) {\n    const betItems = blockchain.openTransactions.map(bet => {\n      return {\n        header: bet.amount,\n        description: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: \"View Bet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 18\n        }, this),\n        fluid: true\n      };\n    });\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: betItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }, this);\n  }\n\n  render() {\n    let {\n      loadingData\n    } = this.state;\n    const {\n      sportsData,\n      blockchain,\n      fetchedSportData\n    } = this.context;\n    let result;\n\n    if (fetchedSportData) {\n      result = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(SportTabs, {\n          allSportsData: sportsData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Open Bets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this), this.renderCurrentBets(blockchain)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this);\n    } else {\n      result = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\n_defineProperty(BetokenIndex, \"contextType\", SportContext);\n\nexport default BetokenIndex;","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/index.js"],"names":["React","Component","Layout","SportTabs","SportContext","Card","BetokenIndex","constructor","props","state","sportsData","blockchain","loadingData","fetchedSportData","renderCurrentBets","bind","betItems","openTransactions","map","bet","header","amount","description","fluid","render","context","result"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAGpCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,UAAU,EAAE,EADA;AAEZC,MAAAA,UAAU,EAAE,EAFA;AAGZC,MAAAA,WAAW,EAAE,KAHD;AAIZC,MAAAA,gBAAgB,EAAE;AAJN,KAAb;AAOA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA;;AAEDD,EAAAA,iBAAiB,CAACH,UAAD,EAAa;AAC7B,UAAMK,QAAQ,GAAGL,UAAU,CAACM,gBAAX,CAA4BC,GAA5B,CAAiCC,GAAD,IAAS;AACzD,aAAO;AACNC,QAAAA,MAAM,EAAED,GAAG,CAACE,MADN;AAENC,QAAAA,WAAW,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFP;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAAP;AAKA,KANgB,CAAjB;AAQA,wBAAO,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEP;AAAnB;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAEDQ,EAAAA,MAAM,GAAG;AACR,QAAI;AAAEZ,MAAAA;AAAF,QAAkB,KAAKH,KAA3B;AACA,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA,UAAd;AAA0BE,MAAAA;AAA1B,QAA+C,KAAKY,OAA1D;AAEA,QAAIC,MAAJ;;AACA,QAAIb,gBAAJ,EAAsB;AACrBa,MAAAA,MAAM,gBACL;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,SAAD;AAAW,UAAA,aAAa,EAAEhB;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,EAIE,KAAKI,iBAAL,CAAuBH,UAAvB,CAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAQA,KATD,MASO;AACNe,MAAAA,MAAM,gBACL;AAAA,+BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAKA;;AAED,wBAAO,QAAC,MAAD;AAAA,gBAASA;AAAT;AAAA;AAAA;AAAA;AAAA,YAAP;AACA;;AAlDmC;;gBAA/BpB,Y,iBACgBF,Y;;AAoDtB,eAAeE,YAAf","sourcesContent":["import React, { Component } from \"react\";\n// import { Link } from \"../routes\";\nimport Layout from \"../components/Layout\";\nimport SportTabs from \"../components/SportTabs\";\nimport { SportContext } from \"../contexts/SportContext\";\nimport { Card } from \"react-bootstrap\";\n\nclass BetokenIndex extends Component {\n\tstatic contextType = SportContext;\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsportsData: [],\n\t\t\tblockchain: {},\n\t\t\tloadingData: false,\n\t\t\tfetchedSportData: false,\n\t\t};\n\n\t\tthis.renderCurrentBets = this.renderCurrentBets.bind(this);\n\t}\n\n\trenderCurrentBets(blockchain) {\n\t\tconst betItems = blockchain.openTransactions.map((bet) => {\n\t\t\treturn {\n\t\t\t\theader: bet.amount,\n\t\t\t\tdescription: <a>View Bet</a>,\n\t\t\t\tfluid: true,\n\t\t\t};\n\t\t});\n\n\t\treturn <Card.Group items={betItems} />;\n\t}\n\n\trender() {\n\t\tlet { loadingData } = this.state;\n\t\tconst { sportsData, blockchain, fetchedSportData } = this.context;\n\n\t\tlet result;\n\t\tif (fetchedSportData) {\n\t\t\tresult = (\n\t\t\t\t<div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<SportTabs allSportsData={sportsData} />\n\t\t\t\t\t<h3>Open Bets</h3>\n\t\t\t\t\t{this.renderCurrentBets(blockchain)}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\tresult = (\n\t\t\t\t<div>\n\t\t\t\t\t<h3>Loading...</h3>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\treturn <Layout>{result}</Layout>;\n\t}\n}\n\nexport default BetokenIndex;\n"]},"metadata":{},"sourceType":"module"}