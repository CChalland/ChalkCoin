{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nlet leagues = [{\n  abbrv: \"NCAAF\",\n  sport: \"football\",\n  display_name: \"NCAA Football\",\n  league_name: \"college-football\",\n  data: []\n}, {\n  abbrv: \"NFL\",\n  sport: \"football\",\n  display_name: \"NFL\",\n  league_name: \"nfl\",\n  data: []\n}, {\n  abbrv: \"MLB\",\n  sport: \"baseball\",\n  display_name: \"MLB\",\n  league_name: \"mlb\",\n  data: []\n}, {\n  abbrv: \"NBA\",\n  sport: \"basketball\",\n  display_name: \"NBA\",\n  league_name: \"nba\",\n  data: []\n}, {\n  abbrv: \"NCAAB\",\n  sport: \"basketball\",\n  display_name: \"NCAA Men's Basketball\",\n  league_name: \"mens-college-basketball\",\n  data: []\n}, {\n  abbrv: \"NHL\",\n  sport: \"hockey\",\n  display_name: \"NHL\",\n  league_name: \"nhl\",\n  data: []\n}, {\n  abbrv: \"WNBA\",\n  sport: \"basketball\",\n  display_name: \"WNBA\",\n  league_name: \"wnba\",\n  data: []\n} // { abbrv: \"MLS\", sport: \"soccer\", display_name: \"MLS\", league_name: \"MLS\", data: [] },\n];\nexport async function EventFinder(transaction) {\n  var _event, _event2, _event3;\n\n  const now = new Date();\n  const date = new Date(transaction.details.date);\n  const timeDiff = (date.getTime() - now.getTime()) / (3600 * 1000);\n  const yyyymmdd = date.yyyymmdd();\n  const leagueIndex = leagues.findIndex(league => league.display_name === transaction.details.sport);\n  let event, openStatus;\n\n  if (leagues[leagueIndex].data.some(event => event.id === transaction.details.gameId)) {\n    event = leagues[leagueIndex].data.find(event => event.id === transaction.details.gameId);\n  } else {\n    const response = await axios.get(`http://site.api.espn.com/apis/site/v2/sports/${leagues[leagueIndex].sport}/${leagues[leagueIndex].league_name}/scoreboard?dates=${yyyymmdd}`);\n    leagues[leagueIndex].data = [...leagues[leagueIndex].data, ...response.data.events];\n    event = response.data.events.find(event => event.id === transaction.details.gameId);\n  }\n\n  if (!event) {\n    const response = await axios.get(`http://site.api.espn.com/apis/site/v2/sports/${leagues[leagueIndex].sport}/${leagues[leagueIndex].league_name}/scoreboard/${bet.details.gameId}`);\n    leagues[leagueIndex].data = [...leagues[leagueIndex].data, response.data];\n    event = response.data;\n  }\n\n  if (((_event = event) === null || _event === void 0 ? void 0 : _event.status.type.name) === \"STATUS_FINAL\") {\n    openStatus = \"Ended\";\n  } else if (((_event2 = event) === null || _event2 === void 0 ? void 0 : _event2.status.type.state) === \"in\") {\n    openStatus = event.status.period <= 1 ? \"danger\" : \"Closed\";\n  } else if (((_event3 = event) === null || _event3 === void 0 ? void 0 : _event3.status.type.state) === \"pre\") {\n    if (date.getDate() === now.getDate() && date.getMonth() === now.getMonth()) {\n      openStatus = timeDiff <= 2 ? \"warning\" : \"info\";\n    }\n  }\n\n  return _objectSpread(_objectSpread({}, transaction), {}, {\n    event,\n    openStatus\n  });\n}\nexport async function EventsFinder(transactions, type) {\n  let bets = type === \"league\" ? transactions.bets : transactions;\n\n  try {\n    bets = await Promise.all(bets.map(async bet => {\n      if (bet.details.type === \"Mine Reward\") {\n        return bet;\n      } else {\n        var _event4, _event5, _event6;\n\n        const now = new Date();\n        const date = new Date(bet.details.date);\n        const timeDiff = (date.getTime() - now.getTime()) / (3600 * 1000);\n        const yyyymmdd = date.yyyymmdd();\n        const leagueIndex = leagues.findIndex(league => league.display_name === bet.details.sport);\n        let event, openStatus;\n\n        if (leagues[leagueIndex].data.some(event => event.id === bet.details.gameId)) {\n          event = leagues[leagueIndex].data.find(event => event.id === bet.details.gameId);\n        } else {\n          const response = await axios.get(`http://site.api.espn.com/apis/site/v2/sports/${leagues[leagueIndex].sport}/${leagues[leagueIndex].league_name}/scoreboard?dates=${yyyymmdd}`);\n          leagues[leagueIndex].data = [...leagues[leagueIndex].data, ...response.data.events];\n          event = response.data.events.find(event => event.id === bet.details.gameId);\n        }\n\n        if (!event) {\n          const response = await axios.get(`http://site.api.espn.com/apis/site/v2/sports/${leagues[leagueIndex].sport}/${leagues[leagueIndex].league_name}/scoreboard/${bet.details.gameId}`);\n          leagues[leagueIndex].data = [...leagues[leagueIndex].data, response.data];\n          event = response.data;\n        }\n\n        if (((_event4 = event) === null || _event4 === void 0 ? void 0 : _event4.status.type.name) === \"STATUS_FINAL\") {\n          openStatus = \"Ended\";\n        } else if (((_event5 = event) === null || _event5 === void 0 ? void 0 : _event5.status.type.state) === \"in\") {\n          openStatus = event.status.period <= 1 ? \"danger\" : \"Closed\";\n        } else if (((_event6 = event) === null || _event6 === void 0 ? void 0 : _event6.status.type.state) === \"pre\") {\n          if (date.getDate() === now.getDate() && date.getMonth() === now.getMonth()) {\n            openStatus = timeDiff <= 2 ? \"warning\" : \"info\";\n          }\n        }\n\n        return _objectSpread(_objectSpread({}, bet), {}, {\n          event,\n          openStatus\n        });\n      }\n    }));\n  } catch (err) {\n    console.log(err.message);\n  }\n\n  return type === \"league\" ? _objectSpread(_objectSpread({}, transactions), {}, {\n    bets\n  }) : bets;\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/helpers/EventsHelper.js"],"names":["axios","leagues","abbrv","sport","display_name","league_name","data","EventFinder","transaction","now","Date","date","details","timeDiff","getTime","yyyymmdd","leagueIndex","findIndex","league","event","openStatus","some","id","gameId","find","response","get","events","bet","status","type","name","state","period","getDate","getMonth","EventsFinder","transactions","bets","Promise","all","map","err","console","log","message"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nlet leagues = [\n\t{\n\t\tabbrv: \"NCAAF\",\n\t\tsport: \"football\",\n\t\tdisplay_name: \"NCAA Football\",\n\t\tleague_name: \"college-football\",\n\t\tdata: [],\n\t},\n\t{\n\t\tabbrv: \"NFL\",\n\t\tsport: \"football\",\n\t\tdisplay_name: \"NFL\",\n\t\tleague_name: \"nfl\",\n\t\tdata: [],\n\t},\n\t{\n\t\tabbrv: \"MLB\",\n\t\tsport: \"baseball\",\n\t\tdisplay_name: \"MLB\",\n\t\tleague_name: \"mlb\",\n\t\tdata: [],\n\t},\n\t{\n\t\tabbrv: \"NBA\",\n\t\tsport: \"basketball\",\n\t\tdisplay_name: \"NBA\",\n\t\tleague_name: \"nba\",\n\t\tdata: [],\n\t},\n\t{\n\t\tabbrv: \"NCAAB\",\n\t\tsport: \"basketball\",\n\t\tdisplay_name: \"NCAA Men's Basketball\",\n\t\tleague_name: \"mens-college-basketball\",\n\t\tdata: [],\n\t},\n\t{\n\t\tabbrv: \"NHL\",\n\t\tsport: \"hockey\",\n\t\tdisplay_name: \"NHL\",\n\t\tleague_name: \"nhl\",\n\t\tdata: [],\n\t},\n\t{\n\t\tabbrv: \"WNBA\",\n\t\tsport: \"basketball\",\n\t\tdisplay_name: \"WNBA\",\n\t\tleague_name: \"wnba\",\n\t\tdata: [],\n\t},\n\t// { abbrv: \"MLS\", sport: \"soccer\", display_name: \"MLS\", league_name: \"MLS\", data: [] },\n];\n\nexport async function EventFinder(transaction) {\n\tconst now = new Date();\n\tconst date = new Date(transaction.details.date);\n\tconst timeDiff = (date.getTime() - now.getTime()) / (3600 * 1000);\n\tconst yyyymmdd = date.yyyymmdd();\n\tconst leagueIndex = leagues.findIndex((league) => league.display_name === transaction.details.sport);\n\tlet event, openStatus;\n\tif (leagues[leagueIndex].data.some((event) => event.id === transaction.details.gameId)) {\n\t\tevent = leagues[leagueIndex].data.find((event) => event.id === transaction.details.gameId);\n\t} else {\n\t\tconst response = await axios.get(\n\t\t\t`http://site.api.espn.com/apis/site/v2/sports/${leagues[leagueIndex].sport}/${leagues[leagueIndex].league_name}/scoreboard?dates=${yyyymmdd}`\n\t\t);\n\t\tleagues[leagueIndex].data = [...leagues[leagueIndex].data, ...response.data.events];\n\t\tevent = response.data.events.find((event) => event.id === transaction.details.gameId);\n\t}\n\n\tif (!event) {\n\t\tconst response = await axios.get(\n\t\t\t`http://site.api.espn.com/apis/site/v2/sports/${leagues[leagueIndex].sport}/${leagues[leagueIndex].league_name}/scoreboard/${bet.details.gameId}`\n\t\t);\n\t\tleagues[leagueIndex].data = [...leagues[leagueIndex].data, response.data];\n\t\tevent = response.data;\n\t}\n\n\tif (event?.status.type.name === \"STATUS_FINAL\") {\n\t\topenStatus = \"Ended\";\n\t} else if (event?.status.type.state === \"in\") {\n\t\topenStatus = event.status.period <= 1 ? \"danger\" : \"Closed\";\n\t} else if (event?.status.type.state === \"pre\") {\n\t\tif (date.getDate() === now.getDate() && date.getMonth() === now.getMonth()) {\n\t\t\topenStatus = timeDiff <= 2 ? \"warning\" : \"info\";\n\t\t}\n\t}\n\n\treturn { ...transaction, event, openStatus };\n}\n\nexport async function EventsFinder(transactions, type) {\n\tlet bets = type === \"league\" ? transactions.bets : transactions;\n\ttry {\n\t\tbets = await Promise.all(\n\t\t\tbets.map(async (bet) => {\n\t\t\t\tif (bet.details.type === \"Mine Reward\") {\n\t\t\t\t\treturn bet;\n\t\t\t\t} else {\n\t\t\t\t\tconst now = new Date();\n\t\t\t\t\tconst date = new Date(bet.details.date);\n\t\t\t\t\tconst timeDiff = (date.getTime() - now.getTime()) / (3600 * 1000);\n\t\t\t\t\tconst yyyymmdd = date.yyyymmdd();\n\t\t\t\t\tconst leagueIndex = leagues.findIndex((league) => league.display_name === bet.details.sport);\n\t\t\t\t\tlet event, openStatus;\n\t\t\t\t\tif (leagues[leagueIndex].data.some((event) => event.id === bet.details.gameId)) {\n\t\t\t\t\t\tevent = leagues[leagueIndex].data.find((event) => event.id === bet.details.gameId);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst response = await axios.get(\n\t\t\t\t\t\t\t`http://site.api.espn.com/apis/site/v2/sports/${leagues[leagueIndex].sport}/${leagues[leagueIndex].league_name}/scoreboard?dates=${yyyymmdd}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tleagues[leagueIndex].data = [...leagues[leagueIndex].data, ...response.data.events];\n\t\t\t\t\t\tevent = response.data.events.find((event) => event.id === bet.details.gameId);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!event) {\n\t\t\t\t\t\tconst response = await axios.get(\n\t\t\t\t\t\t\t`http://site.api.espn.com/apis/site/v2/sports/${leagues[leagueIndex].sport}/${leagues[leagueIndex].league_name}/scoreboard/${bet.details.gameId}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tleagues[leagueIndex].data = [...leagues[leagueIndex].data, response.data];\n\t\t\t\t\t\tevent = response.data;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (event?.status.type.name === \"STATUS_FINAL\") {\n\t\t\t\t\t\topenStatus = \"Ended\";\n\t\t\t\t\t} else if (event?.status.type.state === \"in\") {\n\t\t\t\t\t\topenStatus = event.status.period <= 1 ? \"danger\" : \"Closed\";\n\t\t\t\t\t} else if (event?.status.type.state === \"pre\") {\n\t\t\t\t\t\tif (date.getDate() === now.getDate() && date.getMonth() === now.getMonth()) {\n\t\t\t\t\t\t\topenStatus = timeDiff <= 2 ? \"warning\" : \"info\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn { ...bet, event, openStatus };\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t} catch (err) {\n\t\tconsole.log(err.message);\n\t}\n\treturn type === \"league\" ? { ...transactions, bets } : bets;\n}\n"]},"metadata":{},"sourceType":"module"}