{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/LoginRegister.js\";\nimport React from \"react\";\nimport { providers, signIn, getSession, csrfToken } from \"next-auth/client\";\nimport { Button, Card, Tab, Form, Nav, Container, Row, Col } from \"react-bootstrap\"; // validators\n\nconst emailValidation = value => /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\n\nconst urlValidation = value => {\n  let returnValue = true;\n\n  try {\n    new URL(value);\n  } catch (e) {\n    returnValue = false;\n  } finally {\n    return returnValue;\n  }\n\n  return false;\n};\n\nconst equalTo = (value1, value2) => value1 === value2;\n\nconst isRequired = value => value !== null && value !== \"\" && value;\n\nconst isNumber = value => !isNaN(value) && value !== \"\";\n\nconst minLength = (value, length) => value.length >= length;\n\nconst maxLength = (value, length) => value.length <= length && value !== \"\";\n\nconst range = (value, min, max) => min <= value && value <= max;\n\nconst minValue = (value, min) => min <= value;\n\nconst maxValue = (value, max) => max >= value;\n\nfunction LoginRegister({\n  providers,\n  csrfToken\n}) {\n  const [registerEmail, setRegisterEmail] = React.useState(\"\");\n  const [registerEmailState, setRegisterEmailState] = React.useState(true);\n  const [registerPassword, setRegisterPassword] = React.useState(\"\");\n  const [registerPasswordState, setRegisterPasswordState] = React.useState(true);\n  const [registerConfirmPassword, setRegisterConfirmPassword] = React.useState(\"\");\n  const [registerConfirmPasswordState, setRegisterConfirmPasswordState] = React.useState(true);\n  const [loginEmail, setLoginEmail] = React.useState(\"\");\n  const [loginEmailState, setLoginEmailState] = React.useState(true);\n  const [loginPassword, setLoginPassword] = React.useState(\"\");\n  const [loginPasswordState, setLoginPasswordState] = React.useState(true);\n  let signInButtons = Object.values(providers).map(provider => {\n    if (provider.name === \"Email\" || provider.name === \"Credentials\") return;\n    return /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-social\",\n      variant: provider.id,\n      onClick: () => signIn(provider.id),\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Sign In with \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fab fa-${provider.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this), provider.name]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this);\n  }); // const handleSubmit = (event) => {\n  // \tsignIn(\"credentials\", {\n  // \t\tloginEmail,\n  // \t\tloginPassword,\n  // \t});\n  // };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"ml-auto mr-auto\",\n        md: \"8\",\n        children: /*#__PURE__*/_jsxDEV(Tab.Container, {\n          id: \"page-subcategories-tabs-example\",\n          defaultActiveKey: \"login-page\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"nav-container\",\n            children: /*#__PURE__*/_jsxDEV(Nav, {\n              role: \"tablist\",\n              variant: \"tabs\",\n              className: \"justify-content-center border-0 nav-icons\",\n              children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n                children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                  eventKey: \"login-page\",\n                  className: \"border-0 bg-transparent\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"nc-icon nc-notes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 11\n                  }, this), \"Login\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n                children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                  eventKey: \"register-page\",\n                  className: \"border-0 bg-transparent\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"nc-icon nc-pin-3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 11\n                  }, this), \"Register\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"login-page\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    as: \"h4\",\n                    children: \"Login\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-category\",\n                    children: \"More information here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"mx-auto\",\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Form, {\n                        id: \"LoginValidation\",\n                        method: \"post\",\n                        action: \"/api/auth/callback/credentials\",\n                        children: /*#__PURE__*/_jsxDEV(Card, {\n                          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                              as: \"h4\",\n                              className: \"text-center\",\n                              children: \"Login Form\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 94,\n                              columnNumber: 16\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 93,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"has-label \" + (loginEmailState ? \"has-success\" : \"has-error\"),\n                              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                                name: \"csrfToken\",\n                                type: \"hidden\",\n                                defaultValue: csrfToken\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 102,\n                                columnNumber: 17\n                              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                                children: [\"Email Address \", /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"star\",\n                                  children: \"*\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 104,\n                                  columnNumber: 32\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 103,\n                                columnNumber: 17\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                name: \"email\",\n                                type: \"text\",\n                                value: loginEmail,\n                                onChange: e => {\n                                  setLoginEmail(e.target.value);\n\n                                  if (emailValidation(e.target.value)) {\n                                    setLoginEmailState(true);\n                                  } else {\n                                    setLoginEmailState(false);\n                                  }\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 106,\n                                columnNumber: 17\n                              }, this), loginEmailState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"error\",\n                                children: \"This field is required.\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 120,\n                                columnNumber: 18\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 99,\n                              columnNumber: 16\n                            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"has-label \" + (loginPasswordState ? \"has-success\" : \"has-error\"),\n                              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                                children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"star\",\n                                  children: \"*\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 127,\n                                  columnNumber: 27\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 126,\n                                columnNumber: 17\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                name: \"password\",\n                                type: \"password\",\n                                value: loginPassword,\n                                onChange: e => {\n                                  setLoginPassword(e.target.value);\n\n                                  if (minLength(e.target.value, 1)) {\n                                    setLoginPasswordState(true);\n                                  } else {\n                                    setLoginPasswordState(false);\n                                  }\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 129,\n                                columnNumber: 17\n                              }, this), loginPasswordState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"error\",\n                                children: \"This field is required.\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 143,\n                                columnNumber: 18\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 123,\n                              columnNumber: 16\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"card-category form-category\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"star\",\n                                children: \"*\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 147,\n                                columnNumber: 17\n                              }, this), \"Required fields\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 146,\n                              columnNumber: 16\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 98,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                            className: \"text-center\",\n                            children: /*#__PURE__*/_jsxDEV(Button, {\n                              className: \"btn-fill btn-wd\",\n                              variant: \"info\",\n                              type: \"submit\" // onClick={() => {\n                              // \tif (!loginEmailState || !emailValidation(loginEmail)) {\n                              // \t\tsetLoginEmailState(false);\n                              // \t} else {\n                              // \t\tsetLoginEmailState(true);\n                              // \t}\n                              // \tif (!loginPasswordState || !minLength(loginPassword, 1)) {\n                              // \t\tsetLoginPasswordState(false);\n                              // \t} else {\n                              // \t\tsetLoginPasswordState(true);\n                              // \t}\n                              // }}\n                              ,\n                              children: \"Login\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 152,\n                              columnNumber: 16\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 151,\n                            columnNumber: 15\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 92,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: signInButtons\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"register-page\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    as: \"h4\",\n                    children: \"Register\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 11\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"category\",\n                    children: \"Here is some text\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 11\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    className: \"mx-auto\",\n                    md: \"6\",\n                    children: [/*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Form, {\n                        action: \"/api/auth/signin/email\",\n                        id: \"RegisterValidation\",\n                        method: \"post\",\n                        children: /*#__PURE__*/_jsxDEV(Card, {\n                          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                            className: \"text-center\",\n                            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                              as: \"h4\",\n                              children: \"Register Form\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 192,\n                              columnNumber: 16\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 191,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                              className: \"has-label \" + (registerEmailState ? \"has-success\" : \"has-error\"),\n                              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                                name: \"csrfToken\",\n                                type: \"hidden\",\n                                defaultValue: csrfToken\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 198,\n                                columnNumber: 17\n                              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                                children: [\"Email Address \", /*#__PURE__*/_jsxDEV(\"span\", {\n                                  className: \"star\",\n                                  children: \"*\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 200,\n                                  columnNumber: 32\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 199,\n                                columnNumber: 17\n                              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                                name: \"email\",\n                                type: \"email\",\n                                value: registerEmail,\n                                onChange: e => {\n                                  setRegisterEmail(e.target.value);\n\n                                  if (emailValidation(e.target.value)) {\n                                    setRegisterEmailState(true);\n                                  } else {\n                                    setRegisterEmailState(false);\n                                  }\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 202,\n                                columnNumber: 17\n                              }, this), registerEmailState ? null : /*#__PURE__*/_jsxDEV(\"label\", {\n                                className: \"error\",\n                                children: \"This field is required.\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 216,\n                                columnNumber: 18\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 195,\n                              columnNumber: 16\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"card-category form-category\",\n                              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                                className: \"star\",\n                                children: \"*\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 220,\n                                columnNumber: 17\n                              }, this), \"Required fields\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 219,\n                              columnNumber: 16\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 194,\n                            columnNumber: 15\n                          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                            className: \"text-center\",\n                            children: [/*#__PURE__*/_jsxDEV(Button, {\n                              className: \"btn-fill pull-right\",\n                              variant: \"info\",\n                              type: \"submit\",\n                              children: \"Register with Email\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 225,\n                              columnNumber: 16\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"clearfix\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 228,\n                              columnNumber: 16\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 224,\n                            columnNumber: 15\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 190,\n                          columnNumber: 14\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 189,\n                        columnNumber: 13\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(Row, {\n                      children: signInButtons\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\nLoginRegister.getInitialProps = async context => {\n  const {\n    req,\n    res\n  } = context;\n  const session = await getSession({\n    req\n  });\n\n  if (session && res && session.accessToken) {\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n    return;\n  }\n\n  return {\n    session: undefined,\n    providers: await providers(context),\n    csrfToken: await csrfToken(context)\n  };\n};\n\nexport default LoginRegister;","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/LoginRegister.js"],"names":["React","providers","signIn","getSession","csrfToken","Button","Card","Tab","Form","Nav","Container","Row","Col","emailValidation","value","test","urlValidation","returnValue","URL","e","equalTo","value1","value2","isRequired","isNumber","isNaN","minLength","length","maxLength","range","min","max","minValue","maxValue","LoginRegister","registerEmail","setRegisterEmail","useState","registerEmailState","setRegisterEmailState","registerPassword","setRegisterPassword","registerPasswordState","setRegisterPasswordState","registerConfirmPassword","setRegisterConfirmPassword","registerConfirmPasswordState","setRegisterConfirmPasswordState","loginEmail","setLoginEmail","loginEmailState","setLoginEmailState","loginPassword","setLoginPassword","loginPasswordState","setLoginPasswordState","signInButtons","Object","values","map","provider","name","id","target","getInitialProps","context","req","res","session","accessToken","writeHead","Location","end","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { providers, signIn, getSession, csrfToken } from \"next-auth/client\";\nimport { Button, Card, Tab, Form, Nav, Container, Row, Col } from \"react-bootstrap\";\n\n// validators\nconst emailValidation = (value) =>\n\t/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(value);\nconst urlValidation = (value) => {\n\tlet returnValue = true;\n\ttry {\n\t\tnew URL(value);\n\t} catch (e) {\n\t\treturnValue = false;\n\t} finally {\n\t\treturn returnValue;\n\t}\n\treturn false;\n};\nconst equalTo = (value1, value2) => value1 === value2;\nconst isRequired = (value) => value !== null && value !== \"\" && value;\nconst isNumber = (value) => !isNaN(value) && value !== \"\";\nconst minLength = (value, length) => value.length >= length;\nconst maxLength = (value, length) => value.length <= length && value !== \"\";\nconst range = (value, min, max) => min <= value && value <= max;\nconst minValue = (value, min) => min <= value;\nconst maxValue = (value, max) => max >= value;\n\nfunction LoginRegister({ providers, csrfToken }) {\n\tconst [registerEmail, setRegisterEmail] = React.useState(\"\");\n\tconst [registerEmailState, setRegisterEmailState] = React.useState(true);\n\tconst [registerPassword, setRegisterPassword] = React.useState(\"\");\n\tconst [registerPasswordState, setRegisterPasswordState] = React.useState(true);\n\tconst [registerConfirmPassword, setRegisterConfirmPassword] = React.useState(\"\");\n\tconst [registerConfirmPasswordState, setRegisterConfirmPasswordState] = React.useState(true);\n\tconst [loginEmail, setLoginEmail] = React.useState(\"\");\n\tconst [loginEmailState, setLoginEmailState] = React.useState(true);\n\tconst [loginPassword, setLoginPassword] = React.useState(\"\");\n\tconst [loginPasswordState, setLoginPasswordState] = React.useState(true);\n\n\tlet signInButtons = Object.values(providers).map((provider) => {\n\t\tif (provider.name === \"Email\" || provider.name === \"Credentials\") return;\n\t\treturn (\n\t\t\t<Button className=\"btn-social\" variant={provider.id} onClick={() => signIn(provider.id)}>\n\t\t\t\t<>\n\t\t\t\t\tSign In with <i className={`fab fa-${provider.id}`}></i>\n\t\t\t\t\t{provider.name}\n\t\t\t\t</>\n\t\t\t</Button>\n\t\t);\n\t});\n\n\t// const handleSubmit = (event) => {\n\t// \tsignIn(\"credentials\", {\n\t// \t\tloginEmail,\n\t// \t\tloginPassword,\n\t// \t});\n\t// };\n\treturn (\n\t\t<>\n\t\t\t<Container fluid>\n\t\t\t\t<Col className=\"ml-auto mr-auto\" md=\"8\">\n\t\t\t\t\t<Tab.Container id=\"page-subcategories-tabs-example\" defaultActiveKey=\"login-page\">\n\t\t\t\t\t\t<div className=\"nav-container\">\n\t\t\t\t\t\t\t<Nav role=\"tablist\" variant=\"tabs\" className=\"justify-content-center border-0 nav-icons\">\n\t\t\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"login-page\" className=\"border-0 bg-transparent\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"nc-icon nc-notes\"></i>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t\t\t<Nav.Link eventKey=\"register-page\" className=\"border-0 bg-transparent\">\n\t\t\t\t\t\t\t\t\t\t<i className=\"nc-icon nc-pin-3\"></i>\n\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t\t</Nav>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Tab.Content>\n\t\t\t\t\t\t\t<Tab.Pane eventKey=\"login-page\">\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t<Card.Title as=\"h4\">Login</Card.Title>\n\t\t\t\t\t\t\t\t\t\t<p className=\"card-category\">More information here</p>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"mx-auto\" md=\"6\">\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form id=\"LoginValidation\" method=\"post\" action=\"/api/auth/callback/credentials\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Title as=\"h4\" className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLogin Form\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"has-label \" + (loginEmailState ? \"has-success\" : \"has-error\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control name=\"csrfToken\" type=\"hidden\" defaultValue={csrfToken} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEmail Address <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={loginEmail}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetLoginEmail(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (emailValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetLoginEmailState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetLoginEmailState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loginEmailState ? null : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"error\">This field is required.</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"has-label \" + (loginPasswordState ? \"has-success\" : \"has-error\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tPassword <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={loginPassword}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetLoginPassword(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (minLength(e.target.value, 1)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetLoginPasswordState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetLoginPasswordState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{loginPasswordState ? null : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"error\">This field is required.</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-category form-category\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRequired fields\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Footer className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-fill btn-wd\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"info\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tif (!loginEmailState || !emailValidation(loginEmail)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\tsetLoginEmailState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\tsetLoginEmailState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \tif (!loginPasswordState || !minLength(loginPassword, 1)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\tsetLoginPasswordState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t\tsetLoginPasswordState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// \t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// }}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t<Row>{signInButtons}</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t\t<Tab.Pane eventKey=\"register-page\">\n\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t<Card.Title as=\"h4\">Register</Card.Title>\n\t\t\t\t\t\t\t\t\t\t<p className=\"category\">Here is some text</p>\n\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<Col className=\"mx-auto\" md=\"6\">\n\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form action=\"/api/auth/signin/email\" id=\"RegisterValidation\" method=\"post\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Header className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Title as=\"h4\">Register Form</Card.Title>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\"has-label \" + (registerEmailState ? \"has-success\" : \"has-error\")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control name=\"csrfToken\" type=\"hidden\" defaultValue={csrfToken} />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEmail Address <span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={registerEmail}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRegisterEmail(e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (emailValidation(e.target.value)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRegisterEmailState(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetRegisterEmailState(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t></Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{registerEmailState ? null : (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"error\">This field is required.</label>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"card-category form-category\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"star\">*</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRequired fields\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Footer className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button className=\"btn-fill pull-right\" variant=\"info\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRegister with Email\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"clearfix\"></div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Footer>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t<Row>{signInButtons}</Row>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</Tab.Pane>\n\t\t\t\t\t\t</Tab.Content>\n\t\t\t\t\t</Tab.Container>\n\t\t\t\t</Col>\n\t\t\t\t{/* end col-md-8 */}\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nLoginRegister.getInitialProps = async (context) => {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\n\tif (session && res && session.accessToken) {\n\t\tres.writeHead(302, { Location: \"/\" });\n\t\tres.end();\n\t\treturn;\n\t}\n\treturn {\n\t\tsession: undefined,\n\t\tproviders: await providers(context),\n\t\tcsrfToken: await csrfToken(context),\n\t};\n};\n\nexport default LoginRegister;\n"]},"metadata":{},"sourceType":"module"}