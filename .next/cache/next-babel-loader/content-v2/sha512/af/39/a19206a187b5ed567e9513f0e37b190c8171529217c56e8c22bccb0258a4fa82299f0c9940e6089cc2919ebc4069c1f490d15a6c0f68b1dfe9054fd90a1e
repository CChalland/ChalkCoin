{"ast":null,"code":"function homeAwayHelper(game, requesterPickName) {\n  let requesterPickTeam = game.competitions[0].competitors.filter(team => {\n    return team.team.shortDisplayName === requesterPickName;\n  });\n  let acceptingPickTeam = game.competitions[0].competitors.filter(team => {\n    return team.team.shortDisplayName !== requesterPickName;\n  });\n  return {\n    requesterPickTeam,\n    acceptingPickTeam\n  };\n}\n\nexport function BetCardData(bet) {\n  const {\n    requesterPickTeam,\n    acceptingPickTeam\n  } = homeAwayHelper(bet.event, bet.details.winner);\n  return {\n    requesterPickTeam,\n    acceptingPickTeam\n  };\n  let requesterPickTeamPeriods, acceptingPickTeamPeriods, requesterPickTeamRecords, acceptingPickTeamRecords;\n  let temp = [{\n    name: \"Home\",\n    type: \"home\",\n    summary: 0\n  }, {\n    name: \"Away\",\n    type: \"away\",\n    summary: 0\n  }];\n\n  if (bet.details.displayName === \"MLB\") {\n    let runs, hits, errors;\n    runs = acceptingPickTeam[0].statistics.filter(stat => {\n      return stat.name === \"runs\";\n    });\n    hits = acceptingPickTeam[0].statistics.filter(stat => {\n      return stat.name === \"hits\";\n    });\n    errors = acceptingPickTeam[0].statistics.filter(stat => {\n      return stat.name === \"errors\";\n    });\n    acceptingPickTeamPeriods = [runs[0], hits[0], errors[0]];\n    runs = requesterPickTeam[0].statistics.filter(stat => {\n      return stat.name === \"runs\";\n    });\n    hits = requesterPickTeam[0].statistics.filter(stat => {\n      return stat.name === \"hits\";\n    });\n    errors = requesterPickTeam[0].statistics.filter(stat => {\n      return stat.name === \"errors\";\n    });\n    requesterPickTeamPeriods = [runs[0], hits[0], errors[0]];\n  } else if (game.status.type.description === \"In Progress\" || game.status.type.description === \"End of Period\" || game.status.type.description === \"Halftime\" || game.status.type.completed) {\n    acceptingPickTeamPeriods = acceptingPickTeam[0].linescores;\n    requesterPickTeamPeriods = requesterPickTeam[0].linescores;\n  } else {\n    acceptingPickTeamPeriods = [];\n    requesterPickTeamPeriods = [];\n  }\n\n  if (!game.competitions[0].competitors[0].records) {\n    requesterPickTeamRecords = [{\n      name: \"Total\",\n      type: \"total\",\n      summary: 0\n    }, ...temp];\n    acceptingPickTeamRecords = [{\n      name: \"Total\",\n      type: \"total\",\n      summary: 0\n    }, ...temp];\n  } else if (game.competitions[0].competitors[0].records.length > 1) {\n    requesterPickTeamRecords = requesterPickTeam[0].records;\n    acceptingPickTeamRecords = acceptingPickTeam[0].records;\n  } else {\n    requesterPickTeamRecords = [...requesterPickTeam[0].records, ...temp];\n    acceptingPickTeamRecords = [...acceptingPickTeam[0].records, ...temp];\n  }\n\n  return {\n    sportName: bet.details.displayName,\n    status: game.status,\n    shortDetail: game.competitions[0].status.type.shortDetail,\n    detail: game.competitions[0].status.type.detail,\n    acceptingTeam: {\n      abbreviation: acceptingPickTeam[0].team.abbreviation,\n      alternateColor: acceptingPickTeam[0].team.alternateColor,\n      color: acceptingPickTeam[0].team.color,\n      logo: acceptingPickTeam[0].team.logo,\n      name: acceptingPickTeam[0].team.shortDisplayName,\n      records: acceptingPickTeamRecords,\n      score: parseInt(acceptingPickTeam[0].score),\n      periods: acceptingPickTeamPeriods\n    },\n    requesterTeam: {\n      abbreviation: requesterPickTeam[0].team.abbreviation,\n      alternateColor: requesterPickTeam[0].team.alternateColor,\n      color: requesterPickTeam[0].team.color,\n      logo: requesterPickTeam[0].team.logo,\n      name: requesterPickTeam[0].team.shortDisplayName,\n      records: requesterPickTeamRecords,\n      score: parseInt(requesterPickTeam[0].score),\n      periods: requesterPickTeamPeriods\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/helpers/BetCard.js"],"names":["homeAwayHelper","game","requesterPickName","requesterPickTeam","competitions","competitors","filter","team","shortDisplayName","acceptingPickTeam","BetCardData","bet","event","details","winner","requesterPickTeamPeriods","acceptingPickTeamPeriods","requesterPickTeamRecords","acceptingPickTeamRecords","temp","name","type","summary","displayName","runs","hits","errors","statistics","stat","status","description","completed","linescores","records","length","sportName","shortDetail","detail","acceptingTeam","abbreviation","alternateColor","color","logo","score","parseInt","periods","requesterTeam"],"mappings":"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","sourcesContent":["function homeAwayHelper(game, requesterPickName) {\n\tlet requesterPickTeam = game.competitions[0].competitors.filter((team) => {\n\t\treturn team.team.shortDisplayName === requesterPickName;\n\t});\n\tlet acceptingPickTeam = game.competitions[0].competitors.filter((team) => {\n\t\treturn team.team.shortDisplayName !== requesterPickName;\n\t});\n\treturn { requesterPickTeam, acceptingPickTeam };\n}\n\nexport function BetCardData(bet) {\n\tconst { requesterPickTeam, acceptingPickTeam } = homeAwayHelper(bet.event, bet.details.winner);\n\n\treturn { requesterPickTeam, acceptingPickTeam };\n\n\tlet requesterPickTeamPeriods, acceptingPickTeamPeriods, requesterPickTeamRecords, acceptingPickTeamRecords;\n\tlet temp = [\n\t\t{ name: \"Home\", type: \"home\", summary: 0 },\n\t\t{ name: \"Away\", type: \"away\", summary: 0 },\n\t];\n\n\tif (bet.details.displayName === \"MLB\") {\n\t\tlet runs, hits, errors;\n\t\truns = acceptingPickTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"runs\";\n\t\t});\n\t\thits = acceptingPickTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"hits\";\n\t\t});\n\t\terrors = acceptingPickTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"errors\";\n\t\t});\n\t\tacceptingPickTeamPeriods = [runs[0], hits[0], errors[0]];\n\n\t\truns = requesterPickTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"runs\";\n\t\t});\n\t\thits = requesterPickTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"hits\";\n\t\t});\n\t\terrors = requesterPickTeam[0].statistics.filter((stat) => {\n\t\t\treturn stat.name === \"errors\";\n\t\t});\n\t\trequesterPickTeamPeriods = [runs[0], hits[0], errors[0]];\n\t} else if (\n\t\tgame.status.type.description === \"In Progress\" ||\n\t\tgame.status.type.description === \"End of Period\" ||\n\t\tgame.status.type.description === \"Halftime\" ||\n\t\tgame.status.type.completed\n\t) {\n\t\tacceptingPickTeamPeriods = acceptingPickTeam[0].linescores;\n\t\trequesterPickTeamPeriods = requesterPickTeam[0].linescores;\n\t} else {\n\t\tacceptingPickTeamPeriods = [];\n\t\trequesterPickTeamPeriods = [];\n\t}\n\n\tif (!game.competitions[0].competitors[0].records) {\n\t\trequesterPickTeamRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n\t\tacceptingPickTeamRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n\t} else if (game.competitions[0].competitors[0].records.length > 1) {\n\t\trequesterPickTeamRecords = requesterPickTeam[0].records;\n\t\tacceptingPickTeamRecords = acceptingPickTeam[0].records;\n\t} else {\n\t\trequesterPickTeamRecords = [...requesterPickTeam[0].records, ...temp];\n\t\tacceptingPickTeamRecords = [...acceptingPickTeam[0].records, ...temp];\n\t}\n\n\treturn {\n\t\tsportName: bet.details.displayName,\n\t\tstatus: game.status,\n\t\tshortDetail: game.competitions[0].status.type.shortDetail,\n\t\tdetail: game.competitions[0].status.type.detail,\n\t\tacceptingTeam: {\n\t\t\tabbreviation: acceptingPickTeam[0].team.abbreviation,\n\t\t\talternateColor: acceptingPickTeam[0].team.alternateColor,\n\t\t\tcolor: acceptingPickTeam[0].team.color,\n\t\t\tlogo: acceptingPickTeam[0].team.logo,\n\t\t\tname: acceptingPickTeam[0].team.shortDisplayName,\n\t\t\trecords: acceptingPickTeamRecords,\n\t\t\tscore: parseInt(acceptingPickTeam[0].score),\n\t\t\tperiods: acceptingPickTeamPeriods,\n\t\t},\n\t\trequesterTeam: {\n\t\t\tabbreviation: requesterPickTeam[0].team.abbreviation,\n\t\t\talternateColor: requesterPickTeam[0].team.alternateColor,\n\t\t\tcolor: requesterPickTeam[0].team.color,\n\t\t\tlogo: requesterPickTeam[0].team.logo,\n\t\t\tname: requesterPickTeam[0].team.shortDisplayName,\n\t\t\trecords: requesterPickTeamRecords,\n\t\t\tscore: parseInt(requesterPickTeam[0].score),\n\t\t\tperiods: requesterPickTeamPeriods,\n\t\t},\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}