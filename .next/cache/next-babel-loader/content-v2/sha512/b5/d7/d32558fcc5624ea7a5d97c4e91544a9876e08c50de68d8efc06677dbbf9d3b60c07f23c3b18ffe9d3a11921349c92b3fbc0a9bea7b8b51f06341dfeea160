{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/components/SportCard.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"../routes\";\nimport GameScoreTable from \"./GameScoreTable\";\n\nclass SportCard extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleClick\", (e, titleProps) => {\n      const {\n        index\n      } = titleProps;\n      const {\n        activeIndex\n      } = this.state;\n      const newIndex = activeIndex === index ? -1 : index;\n      this.setState({\n        activeIndex: newIndex\n      });\n    });\n\n    this.state = {\n      index: 0,\n      activeIndex: 0,\n      gameScoreCard: {}\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  gameScoreCardHelper(game) {\n    let periods;\n\n    if (game.status.type.description === \"In Progress\" || game.status.type.completed) {\n      periods = game.competitions[0].competitors[0].linescores;\n    } else {\n      periods = [];\n    }\n\n    let gameData = {\n      shortDetail: game.competitions[0].status.type.shortDetail,\n      away: {\n        logo: game.competitions[0].competitors[0].team.logo,\n        name: game.competitions[0].competitors[0].team.name,\n        totalRecord: game.competitions[0].competitors[0].records[0].summary,\n        // record: game.competitions[0].competitors[0].records[2].summary,\n        score: game.competitions[0].competitors[0].score,\n        periods: periods\n      },\n      home: {\n        logo: game.competitions[0].competitors[1].team.logo,\n        name: game.competitions[0].competitors[1].team.name,\n        totalRecord: game.competitions[0].competitors[1].records[0].summary,\n        // record: game.competitions[0].competitors[1].records[2].summary,\n        score: game.competitions[0].competitors[1].score,\n        periods: periods\n      }\n    };\n    return gameData;\n  }\n\n  renderGamesCards(sportId) {\n    const {\n      activeIndex\n    } = this.state;\n    let gameItems = this.props.sportData.data.events.map(game => {\n      // const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n      // let gameTime = new Date(game.date).toLocaleString(\"en-US\", {\n      // \ttimeZone: timeZone,\n      // });\n      // let eventDate = gameTime.split(\",\");\n      console.log(this.gameScoreCardHelper(game)); // console.log(game);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            width: 9,\n            children: /*#__PURE__*/_jsxDEV(GameScoreTable, {\n              gameScoreCardData: this.gameScoreCardHelper(game)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            width: 2,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Last Play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            width: 5,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"TOP PERFORMERS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"ui avatar image\",\n                src: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this);\n    }); // let datesArray = gameItems.map((obj) => {\n    // \treturn obj.date;\n    // });\n    // let dates = datesArray\n    // \t.filter((item, index) => datesArray.indexOf(item) === index)\n    // \t.reduce((unique, item) => (unique.includes(item) ? unique : [...unique, item]), []);\n    // let eventsResult = dates.map((date) => {\n    // \treturn gameItems.filter((obj) => {\n    // \t\treturn obj.date === date;\n    // \t});\n    // });\n    // let paneResult = eventsResult.map((obj) => {\n    // \tlet tempDate = new Date(obj[0].date);\n    // \tlet tempsDate = tempDate.toString().slice(0, 10);\n    // \treturn {\n    // \t\tmenuItem: obj[0].date,\n    // \t\trender: () => (\n    // \t\t\t<Tab.Pane attached={false} style={{ overflow: \"auto\", maxHeight: \"75em\" }}>\n    // \t\t\t\t<h2>{tempsDate}</h2>\n    // \t\t\t\t<Card.Group items={obj} />\n    // \t\t\t</Tab.Pane>\n    // \t\t),\n    // \t};\n    // });\n\n    return gameItems;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderGamesCards(this.props.sportIndex)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nexport default SportCard;","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/components/SportCard.js"],"names":["React","Component","Container","Row","Col","Link","GameScoreTable","SportCard","constructor","props","e","titleProps","index","activeIndex","state","newIndex","setState","gameScoreCard","handleClick","bind","gameScoreCardHelper","game","periods","status","type","description","completed","competitions","competitors","linescores","gameData","shortDetail","away","logo","team","name","totalRecord","records","summary","score","home","renderGamesCards","sportId","gameItems","sportData","data","events","map","console","log","render","sportIndex"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"../routes\";\nimport GameScoreTable from \"./GameScoreTable\";\n\nclass SportCard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tindex: 0,\n\t\t\tactiveIndex: 0,\n\t\t\tgameScoreCard: {},\n\t\t};\n\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick = (e, titleProps) => {\n\t\tconst { index } = titleProps;\n\t\tconst { activeIndex } = this.state;\n\t\tconst newIndex = activeIndex === index ? -1 : index;\n\n\t\tthis.setState({ activeIndex: newIndex });\n\t};\n\n\tgameScoreCardHelper(game) {\n\t\tlet periods;\n\t\tif (game.status.type.description === \"In Progress\" || game.status.type.completed) {\n\t\t\tperiods = game.competitions[0].competitors[0].linescores;\n\t\t} else {\n\t\t\tperiods = [];\n\t\t}\n\n\t\tlet gameData = {\n\t\t\tshortDetail: game.competitions[0].status.type.shortDetail,\n\t\t\taway: {\n\t\t\t\tlogo: game.competitions[0].competitors[0].team.logo,\n\t\t\t\tname: game.competitions[0].competitors[0].team.name,\n\t\t\t\ttotalRecord: game.competitions[0].competitors[0].records[0].summary,\n\t\t\t\t// record: game.competitions[0].competitors[0].records[2].summary,\n\t\t\t\tscore: game.competitions[0].competitors[0].score,\n\t\t\t\tperiods: periods,\n\t\t\t},\n\t\t\thome: {\n\t\t\t\tlogo: game.competitions[0].competitors[1].team.logo,\n\t\t\t\tname: game.competitions[0].competitors[1].team.name,\n\t\t\t\ttotalRecord: game.competitions[0].competitors[1].records[0].summary,\n\t\t\t\t// record: game.competitions[0].competitors[1].records[2].summary,\n\t\t\t\tscore: game.competitions[0].competitors[1].score,\n\t\t\t\tperiods: periods,\n\t\t\t},\n\t\t};\n\t\treturn gameData;\n\t}\n\n\trenderGamesCards(sportId) {\n\t\tconst { activeIndex } = this.state;\n\n\t\tlet gameItems = this.props.sportData.data.events.map((game) => {\n\t\t\t// const timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\t// let gameTime = new Date(game.date).toLocaleString(\"en-US\", {\n\t\t\t// \ttimeZone: timeZone,\n\t\t\t// });\n\t\t\t// let eventDate = gameTime.split(\",\");\n\n\t\t\tconsole.log(this.gameScoreCardHelper(game));\n\t\t\t// console.log(game);\n\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Col width={9}>\n\t\t\t\t\t\t\t<GameScoreTable gameScoreCardData={this.gameScoreCardHelper(game)} />\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col width={2}>\n\t\t\t\t\t\t\t<div>{\"Last Play\"}</div>\n\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t<Col width={5}>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<div>{\"TOP PERFORMERS\"}</div>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<img className=\"ui avatar image\" src={\"\"} />\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\t// let datesArray = gameItems.map((obj) => {\n\t\t// \treturn obj.date;\n\t\t// });\n\n\t\t// let dates = datesArray\n\t\t// \t.filter((item, index) => datesArray.indexOf(item) === index)\n\t\t// \t.reduce((unique, item) => (unique.includes(item) ? unique : [...unique, item]), []);\n\n\t\t// let eventsResult = dates.map((date) => {\n\t\t// \treturn gameItems.filter((obj) => {\n\t\t// \t\treturn obj.date === date;\n\t\t// \t});\n\t\t// });\n\n\t\t// let paneResult = eventsResult.map((obj) => {\n\t\t// \tlet tempDate = new Date(obj[0].date);\n\t\t// \tlet tempsDate = tempDate.toString().slice(0, 10);\n\n\t\t// \treturn {\n\t\t// \t\tmenuItem: obj[0].date,\n\t\t// \t\trender: () => (\n\t\t// \t\t\t<Tab.Pane attached={false} style={{ overflow: \"auto\", maxHeight: \"75em\" }}>\n\t\t// \t\t\t\t<h2>{tempsDate}</h2>\n\t\t// \t\t\t\t<Card.Group items={obj} />\n\t\t// \t\t\t</Tab.Pane>\n\t\t// \t\t),\n\t\t// \t};\n\t\t// });\n\n\t\treturn gameItems;\n\t}\n\n\trender() {\n\t\treturn <div>{this.renderGamesCards(this.props.sportIndex)}</div>;\n\t}\n}\n\nexport default SportCard;\n"]},"metadata":{},"sourceType":"module"}