{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/ChalkCoin/components/Blockchain/PendingTransactions.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { useContext, useState } from \"react\";\nimport { Row, Col, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { BlockchainDispatch } from \"../../contexts/Blockchain.Context\";\nimport { UserDispatch } from \"../../contexts/User.Context\";\nimport axios from \"axios\";\nimport TransactionCard from \"./TransactionCard\";\nimport Loading from \"../Utility/Loading\";\nexport default function PendingTransactions({\n  pendingTransactions,\n  mineState,\n  currentUser,\n  loaded\n}) {\n  const blockchainDispatch = useContext(BlockchainDispatch);\n  const userDispatch = useContext(UserDispatch);\n\n  const handleMine = async () => {\n    await axios.post(`http://192.168.4.27:3001/mine`, {\n      address: currentUser.walletAddress\n    }).then(res => {\n      if (res.data) {\n        blockchainDispatch({\n          type: \"ADD BLOCK\",\n          block: res.data.block,\n          mineTransaction: res.data.mineTransaction\n        });\n        axios.post(\"/api/mineTransaction\", res.data.mineTransaction).then(res => {\n          userDispatch({\n            type: \"REWARD\",\n            balance: res.amount\n          });\n        });\n      }\n    });\n  };\n\n  return loaded ? /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"align-items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mt-0 mb-1\",\n            children: \"Pending Transactions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 6\n        }, this), mineState ? /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"auto\",\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-start align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n                placement: \"bottom\",\n                overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  children: \"If your mine is completed, you'll receive tokens.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 20\n                }, this),\n                children: (_ref) => {\n                  let {\n                    ref\n                  } = _ref,\n                      triggerHandler = _objectWithoutProperties(_ref, [\"ref\"]);\n\n                  return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n                    variant: \"light\"\n                  }, triggerHandler), {}, {\n                    className: \"btn-social btn-round btn-outline\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      ref: ref,\n                      className: \"fas fa-exclamation\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 13\n                    }, this)\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 12\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-wd align-items-center\",\n                type: \"button\",\n                variant: \"info\",\n                onClick: () => {\n                  handleMine();\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"nc-icon nc-atom mr-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 11\n                }, this), \"Mine\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mx-0 px-0\",\n        style: {\n          overflowY: \"auto\",\n          maxHeight: \"500px\"\n        },\n        children: pendingTransactions.map((transaction, key) => {\n          return /*#__PURE__*/_jsxDEV(TransactionCard, {\n            transactionData: transaction,\n            userAddress: currentUser.walletAddress,\n            panelKey: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/components/Blockchain/PendingTransactions.js"],"names":["useContext","useState","Row","Col","Button","OverlayTrigger","Tooltip","BlockchainDispatch","UserDispatch","axios","TransactionCard","Loading","PendingTransactions","pendingTransactions","mineState","currentUser","loaded","blockchainDispatch","userDispatch","handleMine","post","address","walletAddress","then","res","data","type","block","mineTransaction","balance","amount","ref","triggerHandler","overflowY","maxHeight","map","transaction","key"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport { Row, Col, Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { BlockchainDispatch } from \"../../contexts/Blockchain.Context\";\nimport { UserDispatch } from \"../../contexts/User.Context\";\nimport axios from \"axios\";\nimport TransactionCard from \"./TransactionCard\";\nimport Loading from \"../Utility/Loading\";\n\nexport default function PendingTransactions({ pendingTransactions, mineState, currentUser, loaded }) {\n\tconst blockchainDispatch = useContext(BlockchainDispatch);\n\tconst userDispatch = useContext(UserDispatch);\n\n\tconst handleMine = async () => {\n\t\tawait axios\n\t\t\t.post(`http://192.168.4.27:3001/mine`, {\n\t\t\t\taddress: currentUser.walletAddress,\n\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tif (res.data) {\n\t\t\t\t\tblockchainDispatch({\n\t\t\t\t\t\ttype: \"ADD BLOCK\",\n\t\t\t\t\t\tblock: res.data.block,\n\t\t\t\t\t\tmineTransaction: res.data.mineTransaction,\n\t\t\t\t\t});\n\t\t\t\t\taxios.post(\"/api/mineTransaction\", res.data.mineTransaction).then((res) => {\n\t\t\t\t\t\tuserDispatch({ type: \"REWARD\", balance: res.amount });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\treturn loaded ? (\n\t\t<Row>\n\t\t\t<Col xs={12}>\n\t\t\t\t<Row className=\"align-items-center mt-4\">\n\t\t\t\t\t<Col xs={\"auto\"}>\n\t\t\t\t\t\t<h2 className=\"mt-0 mb-1\">Pending Transactions</h2>\n\t\t\t\t\t</Col>\n\t\t\t\t\t{mineState ? (\n\t\t\t\t\t\t<Col sm=\"auto\" className=\"\">\n\t\t\t\t\t\t\t<Row className=\"justify-content-start align-items-center\">\n\t\t\t\t\t\t\t\t<Col xs={\"auto\"}>\n\t\t\t\t\t\t\t\t\t<OverlayTrigger\n\t\t\t\t\t\t\t\t\t\tplacement=\"bottom\"\n\t\t\t\t\t\t\t\t\t\toverlay={<Tooltip>If your mine is completed, you'll receive tokens.</Tooltip>}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{({ ref, ...triggerHandler }) => (\n\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"light\"\n\t\t\t\t\t\t\t\t\t\t\t\t{...triggerHandler}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn-social btn-round btn-outline\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<i ref={ref} className=\"fas fa-exclamation\"></i>\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</OverlayTrigger>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col xs={\"auto\"}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn-wd align-items-center\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"info\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\thandleMine();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className=\"nc-icon nc-atom mr-2\"></i>\n\t\t\t\t\t\t\t\t\t\tMine\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t) : null}\n\t\t\t\t</Row>\n\t\t\t\t<div className=\"mx-0 px-0\" style={{ overflowY: \"auto\", maxHeight: \"500px\" }}>\n\t\t\t\t\t{pendingTransactions.map((transaction, key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<TransactionCard\n\t\t\t\t\t\t\t\ttransactionData={transaction}\n\t\t\t\t\t\t\t\tuserAddress={currentUser.walletAddress}\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tpanelKey={key}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>\n\t) : (\n\t\t<Loading />\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}