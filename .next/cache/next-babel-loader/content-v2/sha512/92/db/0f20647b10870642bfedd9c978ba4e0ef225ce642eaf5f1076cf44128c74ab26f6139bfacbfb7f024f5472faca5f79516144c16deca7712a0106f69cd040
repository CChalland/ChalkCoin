{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst capitalize = ([firstLetter, ...restOfWord]) => firstLetter.toUpperCase() + restOfWord.join(\"\");\n\nfunction homeAwayHelper(game) {\n  let homeTeam = game.competitions[0].competitors.filter(team => {\n    return team.homeAway === \"home\";\n  });\n  let awayTeam = game.competitions[0].competitors.filter(team => {\n    return team.homeAway === \"away\";\n  });\n  return {\n    homeTeam,\n    awayTeam\n  };\n}\n\nfunction oddsHelper(outcomes, teamPick) {\n  let vigProbability;\n  let odd = outcomes.find(outcome => outcome.name.includes(teamPick.team.shortDisplayName));\n\n  if (odd.price < 0) {\n    vigProbability = -1 * odd.price / (-1 * odd.price + 100);\n  } else if (odd.price > 0) {\n    vigProbability = 100 / (odd.price + 100);\n  }\n\n  return _objectSpread(_objectSpread({}, odd), {}, {\n    vigProbability\n  });\n}\n\nfunction marketHelper(market, away, home) {\n  let awayOdds = oddsHelper(market.outcomes, away);\n  let homeOdds = oddsHelper(market.outcomes, home);\n  const totalProb = awayOdds.vigProbability + homeOdds.vigProbability;\n  awayOdds.winProbability = awayOdds.vigProbability / totalProb;\n  homeOdds.winProbability = homeOdds.vigProbability / totalProb;\n  return {\n    key: market.key,\n    away: awayOdds,\n    home: homeOdds\n  };\n}\n\nexport function BetGameData(bet) {\n  var _bet$odds;\n\n  const {\n    homeTeam,\n    awayTeam\n  } = homeAwayHelper(bet.event);\n  const bookmakers = (_bet$odds = bet.odds) === null || _bet$odds === void 0 ? void 0 : _bet$odds.bookmakers.map(odd => {\n    return {\n      key: odd.key,\n      title: odd.title,\n      market: marketHelper(odd.markets[0], awayTeam[0], homeTeam[0])\n    };\n  });\n  console.log(bookmakers);\n  const awayAvgProb = (bookmakers === null || bookmakers === void 0 ? void 0 : bookmakers.reduce((total, bookmaker, index, array) => {\n    return total += bookmaker.market.away.winProbability;\n  }, 0)) / bookmakers.length * 100;\n  const homeAvgProb = bookmakers.reduce((total, bookmaker, index, array) => {\n    return total += bookmaker.market.home.winProbability;\n  }, 0) / (bookmakers === null || bookmakers === void 0 ? void 0 : bookmakers.length) * 100;\n  let homeRecords, awayRecords;\n  let temp = [{\n    name: \"Home\",\n    type: \"home\",\n    summary: 0\n  }, {\n    name: \"Away\",\n    type: \"away\",\n    summary: 0\n  }];\n\n  if (!bet.event.competitions[0].competitors[0].records) {\n    homeRecords = [{\n      name: \"Total\",\n      type: \"total\",\n      summary: 0\n    }, ...temp];\n    awayRecords = [{\n      name: \"Total\",\n      type: \"total\",\n      summary: 0\n    }, ...temp];\n  } else if (bet.event.competitions[0].competitors[0].records.length > 1) {\n    homeRecords = homeTeam[0].records;\n    awayRecords = awayTeam[0].records;\n  } else {\n    homeRecords = [...homeTeam[0].records, ...temp];\n    awayRecords = [...awayTeam[0].records, ...temp];\n  }\n\n  return {\n    date: bet.details.date,\n    sportName: bet.details.displayName,\n    status: bet.event.status,\n    shortDetail: bet.event.competitions[0].status.type.shortDetail,\n    detail: bet.event.competitions[0].status.type.detail,\n    odds: bookmakers,\n    away: {\n      abbreviation: awayTeam[0].team.abbreviation,\n      alternateColor: `#${awayTeam[0].team.alternateColor}`,\n      color: `#${awayTeam[0].team.color}`,\n      logo: awayTeam[0].team.logo,\n      name: awayTeam[0].team.shortDisplayName,\n      records: awayRecords,\n      score: parseInt(awayTeam[0].score),\n      homeAway: capitalize(awayTeam[0].homeAway),\n      requesterTeam: awayTeam[0].team.shortDisplayName === bet.details.winner ? true : false,\n      winProb: awayAvgProb.toFixed(1)\n    },\n    home: {\n      abbreviation: homeTeam[0].team.abbreviation,\n      alternateColor: `#${homeTeam[0].team.alternateColor}`,\n      color: `#${homeTeam[0].team.color}`,\n      logo: homeTeam[0].team.logo,\n      name: homeTeam[0].team.shortDisplayName,\n      records: homeRecords,\n      score: parseInt(homeTeam[0].score),\n      homeAway: capitalize(homeTeam[0].homeAway),\n      requesterTeam: homeTeam[0].team.shortDisplayName === bet.details.winner ? true : false,\n      winProb: homeAvgProb.toFixed(1)\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/helpers/BetCard.js"],"names":["capitalize","firstLetter","restOfWord","toUpperCase","join","homeAwayHelper","game","homeTeam","competitions","competitors","filter","team","homeAway","awayTeam","oddsHelper","outcomes","teamPick","vigProbability","odd","find","outcome","name","includes","shortDisplayName","price","marketHelper","market","away","home","awayOdds","homeOdds","totalProb","winProbability","key","BetGameData","bet","event","bookmakers","odds","map","title","markets","console","log","awayAvgProb","reduce","total","bookmaker","index","array","length","homeAvgProb","homeRecords","awayRecords","temp","type","summary","records","date","details","sportName","displayName","status","shortDetail","detail","abbreviation","alternateColor","color","logo","score","parseInt","requesterTeam","winner","winProb","toFixed"],"mappings":"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","sourcesContent":["const capitalize = ([firstLetter, ...restOfWord]) => firstLetter.toUpperCase() + restOfWord.join(\"\");\nfunction homeAwayHelper(game) {\n\tlet homeTeam = game.competitions[0].competitors.filter((team) => {\n\t\treturn team.homeAway === \"home\";\n\t});\n\tlet awayTeam = game.competitions[0].competitors.filter((team) => {\n\t\treturn team.homeAway === \"away\";\n\t});\n\treturn { homeTeam, awayTeam };\n}\nfunction oddsHelper(outcomes, teamPick) {\n\tlet vigProbability;\n\tlet odd = outcomes.find((outcome) => outcome.name.includes(teamPick.team.shortDisplayName));\n\tif (odd.price < 0) {\n\t\tvigProbability = (-1 * odd.price) / (-1 * odd.price + 100);\n\t} else if (odd.price > 0) {\n\t\tvigProbability = 100 / (odd.price + 100);\n\t}\n\treturn { ...odd, vigProbability };\n}\nfunction marketHelper(market, away, home) {\n\tlet awayOdds = oddsHelper(market.outcomes, away);\n\tlet homeOdds = oddsHelper(market.outcomes, home);\n\tconst totalProb = awayOdds.vigProbability + homeOdds.vigProbability;\n\tawayOdds.winProbability = awayOdds.vigProbability / totalProb;\n\thomeOdds.winProbability = homeOdds.vigProbability / totalProb;\n\treturn {\n\t\tkey: market.key,\n\t\taway: awayOdds,\n\t\thome: homeOdds,\n\t};\n}\n\nexport function BetGameData(bet) {\n\tconst { homeTeam, awayTeam } = homeAwayHelper(bet.event);\n\tconst bookmakers = bet.odds?.bookmakers.map((odd) => {\n\t\treturn {\n\t\t\tkey: odd.key,\n\t\t\ttitle: odd.title,\n\t\t\tmarket: marketHelper(odd.markets[0], awayTeam[0], homeTeam[0]),\n\t\t};\n\t});\n\tconsole.log(bookmakers);\n\tconst awayAvgProb =\n\t\t(bookmakers?.reduce((total, bookmaker, index, array) => {\n\t\t\treturn (total += bookmaker.market.away.winProbability);\n\t\t}, 0) /\n\t\t\tbookmakers.length) *\n\t\t100;\n\tconst homeAvgProb =\n\t\t(bookmakers.reduce((total, bookmaker, index, array) => {\n\t\t\treturn (total += bookmaker.market.home.winProbability);\n\t\t}, 0) /\n\t\t\tbookmakers?.length) *\n\t\t100;\n\tlet homeRecords, awayRecords;\n\tlet temp = [\n\t\t{ name: \"Home\", type: \"home\", summary: 0 },\n\t\t{ name: \"Away\", type: \"away\", summary: 0 },\n\t];\n\n\tif (!bet.event.competitions[0].competitors[0].records) {\n\t\thomeRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n\t\tawayRecords = [{ name: \"Total\", type: \"total\", summary: 0 }, ...temp];\n\t} else if (bet.event.competitions[0].competitors[0].records.length > 1) {\n\t\thomeRecords = homeTeam[0].records;\n\t\tawayRecords = awayTeam[0].records;\n\t} else {\n\t\thomeRecords = [...homeTeam[0].records, ...temp];\n\t\tawayRecords = [...awayTeam[0].records, ...temp];\n\t}\n\n\treturn {\n\t\tdate: bet.details.date,\n\t\tsportName: bet.details.displayName,\n\t\tstatus: bet.event.status,\n\t\tshortDetail: bet.event.competitions[0].status.type.shortDetail,\n\t\tdetail: bet.event.competitions[0].status.type.detail,\n\t\todds: bookmakers,\n\t\taway: {\n\t\t\tabbreviation: awayTeam[0].team.abbreviation,\n\t\t\talternateColor: `#${awayTeam[0].team.alternateColor}`,\n\t\t\tcolor: `#${awayTeam[0].team.color}`,\n\t\t\tlogo: awayTeam[0].team.logo,\n\t\t\tname: awayTeam[0].team.shortDisplayName,\n\t\t\trecords: awayRecords,\n\t\t\tscore: parseInt(awayTeam[0].score),\n\t\t\thomeAway: capitalize(awayTeam[0].homeAway),\n\t\t\trequesterTeam: awayTeam[0].team.shortDisplayName === bet.details.winner ? true : false,\n\t\t\twinProb: awayAvgProb.toFixed(1),\n\t\t},\n\t\thome: {\n\t\t\tabbreviation: homeTeam[0].team.abbreviation,\n\t\t\talternateColor: `#${homeTeam[0].team.alternateColor}`,\n\t\t\tcolor: `#${homeTeam[0].team.color}`,\n\t\t\tlogo: homeTeam[0].team.logo,\n\t\t\tname: homeTeam[0].team.shortDisplayName,\n\t\t\trecords: homeRecords,\n\t\t\tscore: parseInt(homeTeam[0].score),\n\t\t\thomeAway: capitalize(homeTeam[0].homeAway),\n\t\t\trequesterTeam: homeTeam[0].team.shortDisplayName === bet.details.winner ? true : false,\n\t\t\twinProb: homeAvgProb.toFixed(1),\n\t\t},\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}