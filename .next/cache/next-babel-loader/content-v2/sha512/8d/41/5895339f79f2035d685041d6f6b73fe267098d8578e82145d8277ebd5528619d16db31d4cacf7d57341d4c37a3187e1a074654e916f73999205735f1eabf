{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/ChalkCoin/contexts/Blockchain.Context.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport blockchainReducer from \"../reducers/Blockchain.Reducer\";\nimport { EventsFinder } from \"../helpers/EventsHelper\";\n\nDate.prototype.yyyymmdd = function () {\n  var mm = this.getMonth() + 1; // getMonth() is zero-based\n\n  var dd = this.getDate();\n  return [this.getFullYear(), (mm > 9 ? \"\" : \"0\") + mm, (dd > 9 ? \"\" : \"0\") + dd].join(\"\");\n};\n\nexport const BlockchainContext = /*#__PURE__*/createContext();\nexport const BlockchainDispatch = /*#__PURE__*/createContext();\nexport function BlockchainProvider(props) {\n  const {\n    0: blockchain,\n    1: dispatch\n  } = useReducer(blockchainReducer, {\n    chain: [],\n    pendingTransactions: [],\n    currentNodeUrl: \"\",\n    networkNodes: [],\n    initialized: false,\n    selectedBlock: []\n  });\n  useEffect(() => {\n    async function getBlockchainData() {\n      try {\n        const getNode1 = `http://192.168.4.27:3001/blockchain`;\n        const res = await axios.get(getNode1);\n        dispatch({\n          type: \"INIT\",\n          data: _objectSpread(_objectSpread({}, res.data), {}, {\n            pendingTransactions: await EventsFinder(res.data.pendingTransactions, \"blockchain\"),\n            initialized: true,\n            selectedBlock: _objectSpread(_objectSpread({}, res.data.chain[res.data.chain.length - 1]), {}, {\n              transactions: await EventsFinder(res.data.chain[res.data.chain.length - 1].transactions, \"blockchain\")\n            })\n          })\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n\n    getBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BlockchainContext.Provider, {\n    value: blockchain,\n    children: /*#__PURE__*/_jsxDEV(BlockchainDispatch.Provider, {\n      value: dispatch,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/contexts/Blockchain.Context.js"],"names":["createContext","useReducer","useEffect","axios","blockchainReducer","EventsFinder","Date","prototype","yyyymmdd","mm","getMonth","dd","getDate","getFullYear","join","BlockchainContext","BlockchainDispatch","BlockchainProvider","props","blockchain","dispatch","chain","pendingTransactions","currentNodeUrl","networkNodes","initialized","selectedBlock","getBlockchainData","getNode1","res","get","type","data","length","transactions","err","console","log","message","children"],"mappings":";;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAASC,YAAT,QAA6B,yBAA7B;;AAEAC,IAAI,CAACC,SAAL,CAAeC,QAAf,GAA0B,YAAY;AACrC,MAAIC,EAAE,GAAG,KAAKC,QAAL,KAAkB,CAA3B,CADqC,CACP;;AAC9B,MAAIC,EAAE,GAAG,KAAKC,OAAL,EAAT;AACA,SAAO,CAAC,KAAKC,WAAL,EAAD,EAAqB,CAACJ,EAAE,GAAG,CAAL,GAAS,EAAT,GAAc,GAAf,IAAsBA,EAA3C,EAA+C,CAACE,EAAE,GAAG,CAAL,GAAS,EAAT,GAAc,GAAf,IAAsBA,EAArE,EAAyEG,IAAzE,CAA8E,EAA9E,CAAP;AACA,CAJD;;AAMA,OAAO,MAAMC,iBAAiB,gBAAGf,aAAa,EAAvC;AACP,OAAO,MAAMgB,kBAAkB,gBAAGhB,aAAa,EAAxC;AACP,OAAO,SAASiB,kBAAT,CAA4BC,KAA5B,EAAmC;AACzC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAAyBnB,UAAU,CAACG,iBAAD,EAAoB;AAC5DiB,IAAAA,KAAK,EAAE,EADqD;AAE5DC,IAAAA,mBAAmB,EAAE,EAFuC;AAG5DC,IAAAA,cAAc,EAAE,EAH4C;AAI5DC,IAAAA,YAAY,EAAE,EAJ8C;AAK5DC,IAAAA,WAAW,EAAE,KAL+C;AAM5DC,IAAAA,aAAa,EAAE;AAN6C,GAApB,CAAzC;AASAxB,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeyB,iBAAf,GAAmC;AAClC,UAAI;AACH,cAAMC,QAAQ,GAAI,qCAAlB;AACA,cAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAUF,QAAV,CAAlB;AAEAR,QAAAA,QAAQ,CAAC;AACRW,UAAAA,IAAI,EAAE,MADE;AAERC,UAAAA,IAAI,kCACAH,GAAG,CAACG,IADJ;AAEHV,YAAAA,mBAAmB,EAAE,MAAMjB,YAAY,CAACwB,GAAG,CAACG,IAAJ,CAASV,mBAAV,EAA+B,YAA/B,CAFpC;AAGHG,YAAAA,WAAW,EAAE,IAHV;AAIHC,YAAAA,aAAa,kCACTG,GAAG,CAACG,IAAJ,CAASX,KAAT,CAAeQ,GAAG,CAACG,IAAJ,CAASX,KAAT,CAAeY,MAAf,GAAwB,CAAvC,CADS;AAEZC,cAAAA,YAAY,EAAE,MAAM7B,YAAY,CAC/BwB,GAAG,CAACG,IAAJ,CAASX,KAAT,CAAeQ,GAAG,CAACG,IAAJ,CAASX,KAAT,CAAeY,MAAf,GAAwB,CAAvC,EAA0CC,YADX,EAE/B,YAF+B;AAFpB;AAJV;AAFI,SAAD,CAAR;AAeA,OAnBD,CAmBE,OAAOC,GAAP,EAAY;AACbC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,OAAhB;AACA;AACD;;AACDX,IAAAA,iBAAiB;AACjB,GA1BQ,EA0BN,EA1BM,CAAT;AA4BA,sBACC,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAER,UAAnC;AAAA,2BACC,QAAC,kBAAD,CAAoB,QAApB;AAA6B,MAAA,KAAK,EAAEC,QAApC;AAAA,gBAA+CF,KAAK,CAACqB;AAArD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA","sourcesContent":["import { createContext, useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport blockchainReducer from \"../reducers/Blockchain.Reducer\";\nimport { EventsFinder } from \"../helpers/EventsHelper\";\n\nDate.prototype.yyyymmdd = function () {\n\tvar mm = this.getMonth() + 1; // getMonth() is zero-based\n\tvar dd = this.getDate();\n\treturn [this.getFullYear(), (mm > 9 ? \"\" : \"0\") + mm, (dd > 9 ? \"\" : \"0\") + dd].join(\"\");\n};\n\nexport const BlockchainContext = createContext();\nexport const BlockchainDispatch = createContext();\nexport function BlockchainProvider(props) {\n\tconst [blockchain, dispatch] = useReducer(blockchainReducer, {\n\t\tchain: [],\n\t\tpendingTransactions: [],\n\t\tcurrentNodeUrl: \"\",\n\t\tnetworkNodes: [],\n\t\tinitialized: false,\n\t\tselectedBlock: [],\n\t});\n\n\tuseEffect(() => {\n\t\tasync function getBlockchainData() {\n\t\t\ttry {\n\t\t\t\tconst getNode1 = `http://192.168.4.27:3001/blockchain`;\n\t\t\t\tconst res = await axios.get(getNode1);\n\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"INIT\",\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...res.data,\n\t\t\t\t\t\tpendingTransactions: await EventsFinder(res.data.pendingTransactions, \"blockchain\"),\n\t\t\t\t\t\tinitialized: true,\n\t\t\t\t\t\tselectedBlock: {\n\t\t\t\t\t\t\t...res.data.chain[res.data.chain.length - 1],\n\t\t\t\t\t\t\ttransactions: await EventsFinder(\n\t\t\t\t\t\t\t\tres.data.chain[res.data.chain.length - 1].transactions,\n\t\t\t\t\t\t\t\t\"blockchain\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err.message);\n\t\t\t}\n\t\t}\n\t\tgetBlockchainData();\n\t}, []);\n\n\treturn (\n\t\t<BlockchainContext.Provider value={blockchain}>\n\t\t\t<BlockchainDispatch.Provider value={dispatch}>{props.children}</BlockchainDispatch.Provider>\n\t\t</BlockchainContext.Provider>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}