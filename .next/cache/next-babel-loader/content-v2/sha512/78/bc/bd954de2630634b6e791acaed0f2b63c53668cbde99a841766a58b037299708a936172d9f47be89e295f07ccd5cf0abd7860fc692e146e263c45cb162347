{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport prisma from \"../contexts/prisma\";\n\nfunction Test(props) {\n  const {\n    0: singleSelect,\n    1: setSingleSelect\n  } = useState(\"\");\n  const optionsUsers = props.users.map(user => {\n    return {\n      value: user.id,\n      label: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 6\n        }, this), user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)\n    };\n  });\n  console.log(props.users);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      className: \"react-select primary\",\n      classNamePrefix: \"react-select\",\n      name: \"singleSelect\",\n      value: singleSelect,\n      onChange: value => setSingleSelect(value),\n      options: optionsUsers,\n      placeholder: \"Search Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Test;\nexport async function getServerSideProps(context) {\n  let users = await prisma.user.findMany();\n  users = users.map(user => {\n    delete user.emailVerified;\n    delete user.createdAt;\n    delete user.updatedAt;\n    return user;\n  });\n  return {\n    props: {\n      users\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js"],"names":["React","useState","axios","Container","Col","Row","Button","Modal","Carousel","Tab","Nav","Card","Select","prisma","Test","props","singleSelect","setSingleSelect","optionsUsers","users","map","user","value","id","label","image","username","console","log","getServerSideProps","context","findMany","emailVerified","createdAt","updatedAt"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,EAAsCC,KAAtC,EAA6CC,QAA7C,EAAuDC,GAAvD,EAA4DC,GAA5D,EAAiEC,IAAjE,QAA6E,iBAA7E;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACpB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkChB,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMiB,YAAY,GAAGH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,IAAU;AAC9C,WAAO;AACNC,MAAAA,KAAK,EAAED,IAAI,CAACE,EADN;AAENC,MAAAA,KAAK,eACJ;AAAA,gCACC;AAAK,UAAA,GAAG,EAAEH,IAAI,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA,gBADD,EAEEJ,IAAI,CAACK,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAHK,KAAP;AASA,GAVoB,CAArB;AAYAC,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACI,KAAlB;AACA,sBACC,QAAC,SAAD;AAAA,2BACC,QAAC,MAAD;AACC,MAAA,SAAS,EAAC,sBADX;AAEC,MAAA,eAAe,EAAC,cAFjB;AAGC,MAAA,IAAI,EAAC,cAHN;AAIC,MAAA,KAAK,EAAEH,YAJR;AAKC,MAAA,QAAQ,EAAGM,KAAD,IAAWL,eAAe,CAACK,KAAD,CALrC;AAMC,MAAA,OAAO,EAAEJ,YANV;AAOC,MAAA,WAAW,EAAC;AAPb;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAaA;;AAED,eAAeJ,IAAf;AAEA,OAAO,eAAee,kBAAf,CAAkCC,OAAlC,EAA2C;AACjD,MAAIX,KAAK,GAAG,MAAMN,MAAM,CAACQ,IAAP,CAAYU,QAAZ,EAAlB;AACAZ,EAAAA,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAU;AAC3B,WAAOA,IAAI,CAACW,aAAZ;AACA,WAAOX,IAAI,CAACY,SAAZ;AACA,WAAOZ,IAAI,CAACa,SAAZ;AAEA,WAAOb,IAAP;AACA,GANO,CAAR;AAQA,SAAO;AACNN,IAAAA,KAAK,EAAE;AAAEI,MAAAA;AAAF;AADD,GAAP;AAGA","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport prisma from \"../contexts/prisma\";\n\nfunction Test(props) {\n\tconst [singleSelect, setSingleSelect] = useState(\"\");\n\n\tconst optionsUsers = props.users.map((user) => {\n\t\treturn {\n\t\t\tvalue: user.id,\n\t\t\tlabel: (\n\t\t\t\t<div>\n\t\t\t\t\t<img src={user.image} />\n\t\t\t\t\t{user.username}\n\t\t\t\t</div>\n\t\t\t),\n\t\t};\n\t});\n\n\tconsole.log(props.users);\n\treturn (\n\t\t<Container>\n\t\t\t<Select\n\t\t\t\tclassName=\"react-select primary\"\n\t\t\t\tclassNamePrefix=\"react-select\"\n\t\t\t\tname=\"singleSelect\"\n\t\t\t\tvalue={singleSelect}\n\t\t\t\tonChange={(value) => setSingleSelect(value)}\n\t\t\t\toptions={optionsUsers}\n\t\t\t\tplaceholder=\"Search Username\"\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nexport default Test;\n\nexport async function getServerSideProps(context) {\n\tlet users = await prisma.user.findMany();\n\tusers = users.map((user) => {\n\t\tdelete user.emailVerified;\n\t\tdelete user.createdAt;\n\t\tdelete user.updatedAt;\n\n\t\treturn user;\n\t});\n\n\treturn {\n\t\tprops: { users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}