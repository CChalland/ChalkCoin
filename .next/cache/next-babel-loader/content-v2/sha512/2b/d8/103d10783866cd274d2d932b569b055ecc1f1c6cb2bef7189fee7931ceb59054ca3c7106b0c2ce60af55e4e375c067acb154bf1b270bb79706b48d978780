{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/ChalkCoin/components/User/BetCards.js\";\nimport BetCard from \"../Bet/BetCard\";\nimport TransactionCard from \"../Blockchain/TransactionCard\";\n\nfunction BetCards({\n  tabBets,\n  tabType,\n  currentUser\n}) {\n  let betsCards;\n\n  if (tabBets) {\n    betsCards = tabBets.map(bet => {\n      // console.log(\"BetCards - bet\", bet);\n      if (tabType === \"Completed\") {\n        var _bet$requester, _bet$accepter, _bet$accepter2, _bet$requester2;\n\n        return /*#__PURE__*/_jsxDEV(TransactionCard, {\n          transactionData: {\n            amount: bet.amount,\n            sender: bet.winnerId === bet.requesterId ? (_bet$requester = bet.requester) === null || _bet$requester === void 0 ? void 0 : _bet$requester.walletAddress : (_bet$accepter = bet.accepter) === null || _bet$accepter === void 0 ? void 0 : _bet$accepter.walletAddress,\n            recipient: bet.winnerId === bet.requesterId ? (_bet$accepter2 = bet.accepter) === null || _bet$accepter2 === void 0 ? void 0 : _bet$accepter2.walletAddress : (_bet$requester2 = bet.requester) === null || _bet$requester2 === void 0 ? void 0 : _bet$requester2.walletAddress,\n            details: bet.details,\n            event: bet.event,\n            transactionId: bet.transactionId\n          },\n          userAddress: currentUser.walletAddress,\n          panelKey: bet.id\n        }, bet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 6\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(BetCard, {\n          bet: bet,\n          currentUser: currentUser\n        }, bet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 12\n        }, this);\n      }\n    });\n  } else {\n    betsCards = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }, this);\n  }\n\n  return betsCards;\n}\n\nexport default BetCards;","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/components/User/BetCards.js"],"names":["BetCard","TransactionCard","BetCards","tabBets","tabType","currentUser","betsCards","map","bet","amount","sender","winnerId","requesterId","requester","walletAddress","accepter","recipient","details","event","transactionId","id"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,OAAX;AAAoBC,EAAAA;AAApB,CAAlB,EAAqD;AACpD,MAAIC,SAAJ;;AACA,MAAIH,OAAJ,EAAa;AACZG,IAAAA,SAAS,GAAGH,OAAO,CAACI,GAAR,CAAaC,GAAD,IAAS;AAChC;AACA,UAAIJ,OAAO,KAAK,WAAhB,EAA6B;AAAA;;AAC5B,4BACC,QAAC,eAAD;AACC,UAAA,eAAe,EAAE;AAChBK,YAAAA,MAAM,EAAED,GAAG,CAACC,MADI;AAEhBC,YAAAA,MAAM,EACLF,GAAG,CAACG,QAAJ,KAAiBH,GAAG,CAACI,WAArB,qBAAmCJ,GAAG,CAACK,SAAvC,mDAAmC,eAAeC,aAAlD,oBAAkEN,GAAG,CAACO,QAAtE,kDAAkE,cAAcD,aAHjE;AAIhBE,YAAAA,SAAS,EACRR,GAAG,CAACG,QAAJ,KAAiBH,GAAG,CAACI,WAArB,qBAAmCJ,GAAG,CAACO,QAAvC,mDAAmC,eAAcD,aAAjD,sBAAiEN,GAAG,CAACK,SAArE,oDAAiE,gBAAeC,aALjE;AAMhBG,YAAAA,OAAO,EAAET,GAAG,CAACS,OANG;AAOhBC,YAAAA,KAAK,EAAEV,GAAG,CAACU,KAPK;AAQhBC,YAAAA,aAAa,EAAEX,GAAG,CAACW;AARH,WADlB;AAWC,UAAA,WAAW,EAAEd,WAAW,CAACS,aAX1B;AAYC,UAAA,QAAQ,EAAEN,GAAG,CAACY;AAZf,WAaMZ,GAAG,CAACY,EAbV;AAAA;AAAA;AAAA;AAAA,gBADD;AAiBA,OAlBD,MAkBO;AACN,4BAAO,QAAC,OAAD;AAAS,UAAA,GAAG,EAAEZ,GAAd;AAAmB,UAAA,WAAW,EAAEH;AAAhC,WAAkDG,GAAG,CAACY,EAAtD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;AACD,KAvBW,CAAZ;AAwBA,GAzBD,MAyBO;AACNd,IAAAA,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ;AACA;;AAED,SAAOA,SAAP;AACA;;AAED,eAAeJ,QAAf","sourcesContent":["import BetCard from \"../Bet/BetCard\";\nimport TransactionCard from \"../Blockchain/TransactionCard\";\n\nfunction BetCards({ tabBets, tabType, currentUser }) {\n\tlet betsCards;\n\tif (tabBets) {\n\t\tbetsCards = tabBets.map((bet) => {\n\t\t\t// console.log(\"BetCards - bet\", bet);\n\t\t\tif (tabType === \"Completed\") {\n\t\t\t\treturn (\n\t\t\t\t\t<TransactionCard\n\t\t\t\t\t\ttransactionData={{\n\t\t\t\t\t\t\tamount: bet.amount,\n\t\t\t\t\t\t\tsender:\n\t\t\t\t\t\t\t\tbet.winnerId === bet.requesterId ? bet.requester?.walletAddress : bet.accepter?.walletAddress,\n\t\t\t\t\t\t\trecipient:\n\t\t\t\t\t\t\t\tbet.winnerId === bet.requesterId ? bet.accepter?.walletAddress : bet.requester?.walletAddress,\n\t\t\t\t\t\t\tdetails: bet.details,\n\t\t\t\t\t\t\tevent: bet.event,\n\t\t\t\t\t\t\ttransactionId: bet.transactionId,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tuserAddress={currentUser.walletAddress}\n\t\t\t\t\t\tpanelKey={bet.id}\n\t\t\t\t\t\tkey={bet.id}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\treturn <BetCard bet={bet} currentUser={currentUser} key={bet.id} />;\n\t\t\t}\n\t\t});\n\t} else {\n\t\tbetsCards = <h1>Loading</h1>;\n\t}\n\n\treturn betsCards;\n}\n\nexport default BetCards;\n"]},"metadata":{},"sourceType":"module"}