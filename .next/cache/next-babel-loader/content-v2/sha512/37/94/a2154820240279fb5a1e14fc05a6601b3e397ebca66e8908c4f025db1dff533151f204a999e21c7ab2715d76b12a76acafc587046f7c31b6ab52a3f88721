{"ast":null,"code":"import _regeneratorRuntime from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport BetCard from \"../components/BetCard\";\nimport axios from \"axios\";\n\nfunction fetchBetsJSON() {\n  return _fetchBetsJSON.apply(this, arguments);\n}\n\nfunction _fetchBetsJSON() {\n  _fetchBetsJSON = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res, bets;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"http://localhost:4000/api/bets\");\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            bets = _context.sent;\n            return _context.abrupt(\"return\", bets);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchBetsJSON.apply(this, arguments);\n}\n\nfunction Bets(props) {\n  _s();\n\n  var betsData = props.betsData,\n      currentUser = props.currentUser;\n\n  var _useContext = useContext(SportContext),\n      sportsData = _useContext.sportsData;\n\n  var _useState = useState(betsData),\n      bets = _useState[0],\n      setBets = _useState[1]; // useEffect(() => {\n  // \tconst getData = async () => {\n  // \t\tfetchBetsJSON().then((bets) => {\n  // \t\t\tsetBets(bets);\n  // \t\t});\n  // \t};\n  // \tgetData();\n  // }, []);\n\n\n  var betsGames = bets === null || bets === void 0 ? void 0 : bets.map(function (bet) {\n    var _sport$data$events;\n\n    var sport = sportsData.find(function (sport) {\n      return sport.display_name === bet.details.displayName;\n    });\n    var event = (_sport$data$events = sport.data.events) === null || _sport$data$events === void 0 ? void 0 : _sport$data$events.find(function (event) {\n      return event.id === bet.details.id;\n    });\n    bet.event = event;\n    return bet;\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BETS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BetCard, {\n      betsData: bets,\n      currentUser: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Bets, \"OHBecmyAvjWWvvMrdT2CBp6Dfgc=\");\n\n_c = Bets;\nexport var __N_SSP = true;\nexport default Bets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bets\");","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js"],"names":["React","useContext","useEffect","useState","Container","SportContext","BetCard","axios","fetchBetsJSON","fetch","res","json","bets","Bets","props","betsData","currentUser","sportsData","setBets","betsGames","map","bet","sport","find","display_name","details","displayName","event","data","events","id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;SAEeC,a;;;;;4EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBC,KAAK,CAAC,gCAAD,CADxB;;AAAA;AACOC,YAAAA,GADP;AAAA;AAAA,mBAEoBA,GAAG,CAACC,IAAJ,EAFpB;;AAAA;AAEOC,YAAAA,IAFP;AAAA,6CAGQA,IAHR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA,MACZC,QADY,GACcD,KADd,CACZC,QADY;AAAA,MACFC,WADE,GACcF,KADd,CACFE,WADE;;AAAA,oBAEGf,UAAU,CAACI,YAAD,CAFb;AAAA,MAEZY,UAFY,eAEZA,UAFY;;AAAA,kBAGId,QAAQ,CAACY,QAAD,CAHZ;AAAA,MAGbH,IAHa;AAAA,MAGPM,OAHO,iBAKpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,SAAS,GAAGP,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEQ,GAAN,CAAU,UAACC,GAAD,EAAS;AAAA;;AACpC,QAAMC,KAAK,GAAGL,UAAU,CAACM,IAAX,CAAgB,UAACD,KAAD;AAAA,aAAWA,KAAK,CAACE,YAAN,KAAuBH,GAAG,CAACI,OAAJ,CAAYC,WAA9C;AAAA,KAAhB,CAAd;AACA,QAAMC,KAAK,yBAAGL,KAAK,CAACM,IAAN,CAAWC,MAAd,uDAAG,mBAAmBN,IAAnB,CAAwB,UAACI,KAAD;AAAA,aAAWA,KAAK,CAACG,EAAN,KAAaT,GAAG,CAACI,OAAJ,CAAYK,EAApC;AAAA,KAAxB,CAAd;AACAT,IAAAA,GAAG,CAACM,KAAJ,GAAYA,KAAZ;AACA,WAAON,GAAP;AACA,GALiB,CAAlB;AAOA,sBACC,QAAC,SAAD;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAET,IAAnB;AAAyB,MAAA,WAAW,EAAEI;AAAtC;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA;;GA3BQH,I;;KAAAA,I;;AA6BT,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport { getSession } from \"next-auth/client\";\nimport BetCard from \"../components/BetCard\";\nimport axios from \"axios\";\n\nasync function fetchBetsJSON() {\n\tconst res = await fetch(\"http://localhost:4000/api/bets\");\n\tconst bets = await res.json();\n\treturn bets;\n}\n\nfunction Bets(props) {\n\tconst { betsData, currentUser } = props;\n\tconst { sportsData } = useContext(SportContext);\n\tconst [bets, setBets] = useState(betsData);\n\n\t// useEffect(() => {\n\t// \tconst getData = async () => {\n\t// \t\tfetchBetsJSON().then((bets) => {\n\t// \t\t\tsetBets(bets);\n\t// \t\t});\n\t// \t};\n\t// \tgetData();\n\t// }, []);\n\n\tconst betsGames = bets?.map((bet) => {\n\t\tconst sport = sportsData.find((sport) => sport.display_name === bet.details.displayName);\n\t\tconst event = sport.data.events?.find((event) => event.id === bet.details.id);\n\t\tbet.event = event;\n\t\treturn bet;\n\t});\n\n\treturn (\n\t\t<Container>\n\t\t\t<h1>BETS</h1>\n\t\t\t<BetCard betsData={bets} currentUser={currentUser} />\n\t\t</Container>\n\t);\n}\n\nexport default Bets;\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\tlet currentUser = {};\n\tif (session) {\n\t\tcurrentUser = await prisma.user.findUnique({\n\t\t\twhere: {\n\t\t\t\tid: session.user.id,\n\t\t\t},\n\t\t});\n\t\tdelete currentUser.password;\n\t\tdelete currentUser.paypal;\n\t\tdelete currentUser.emailVerified;\n\t\tdelete currentUser.createdAt;\n\t\tdelete currentUser.updatedAt;\n\t}\n\n\tlet bets = await prisma.bet.findMany({\n\t\twhere: {\n\t\t\taccepted: false,\n\t\t},\n\t});\n\tconst betPromises = bets.map(async (bet) => {\n\t\tbet.details = JSON.parse(bet.details);\n\t\tbet.createdAt = JSON.stringify(bet.createdAt);\n\t\tbet.updatedAt = JSON.stringify(bet.updatedAt);\n\t\treturn bet;\n\t});\n\tconst betsData = await Promise.all(betPromises);\n\n\treturn {\n\t\tprops: { currentUser, betsData },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}