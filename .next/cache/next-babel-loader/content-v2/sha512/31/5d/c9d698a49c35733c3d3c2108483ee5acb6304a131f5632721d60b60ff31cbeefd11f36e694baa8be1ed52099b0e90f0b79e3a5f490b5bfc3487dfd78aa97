{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/ChalkCoin/pages/games.js\";\nimport { useRouter } from \"next/router\";\nimport { useCallback, useContext, useState, useRef, useEffect } from \"react\";\nimport { Virtual } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { getSession } from \"next-auth/client\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport { UserContext } from \"../contexts/User.Context\";\nimport moment from \"moment\";\nimport GameCard from \"../components/Game/GameCard\";\nimport NotificationAlert from \"react-notification-alert\";\nimport Loading from \"../components/Utility/Loading\";\nexport default function Games({\n  query,\n  users\n}) {\n  const router = useRouter();\n  const currentUser = useContext(UserContext);\n  const sportsData = useContext(SportContext);\n  const notificationAlertRef = useRef(null);\n  const {\n    0: date,\n    1: setDate\n  } = useState(\"\");\n  let sportData = sportsData.find(sport => {\n    var _query$sport;\n\n    return sport.abbrv === ((_query$sport = query.sport) === null || _query$sport === void 0 ? void 0 : _query$sport.toUpperCase());\n  });\n\n  const notify = errMsg => {\n    let options = {\n      place: \"tc\",\n      message: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: errMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this),\n      type: \"danger\",\n      icon: \"nc-icon nc-bell-55\",\n      autoDismiss: 7\n    };\n    notificationAlertRef.current.notificationAlert(options);\n    router.replace(`${router.pathname}?sport=${query.sport}`, undefined, {\n      shallow: true\n    });\n  };\n\n  const getData = useCallback(async (league, date) => {\n    axios.get(`http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard`).then(response => {\n      console.log(response.data);\n    });\n  });\n  useEffect(() => {\n    console.log(\"games - date\", date);\n  }, [date]);\n  useEffect(() => {\n    if (router.query.error) {\n      notify(router.query.error);\n    }\n\n    if (!sportData || !router.query.sport) {\n      router.replace(\"/\", undefined, {\n        shallow: true\n      });\n    }\n  }, [router]);\n  let gameItems = sportData !== null && sportData !== void 0 && sportData.data.events ? sportData.data.events.map((game, key) => {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      className: \"my-3\",\n      children: /*#__PURE__*/_jsxDEV(GameCard, {\n        panelKey: key,\n        gameData: game,\n        sportName: sportData === null || sportData === void 0 ? void 0 : sportData.display_name,\n        users: users,\n        currentUser: currentUser,\n        completed: game.status.type.completed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 6\n      }, this)\n    }, game.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n\n  const datesData = () => {\n    const days = [];\n    const dateStart = moment();\n    const dateEnd = moment().add(90, \"days\");\n\n    while (dateEnd.diff(dateStart, \"days\") >= 0) {\n      const str = dateStart.format(\"ddd,MMM,Do\").split(\",\");\n      days.push({\n        day: str[0],\n        month: str[1],\n        date: str[2]\n      });\n      dateStart.add(1, \"days\");\n    }\n\n    return days;\n  };\n\n  const dates = datesData().map(item => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      border: \"secondary\",\n      className: \"mr-1\",\n      style: {\n        width: \"4rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-danger text-center my-1 border-bottom\",\n        children: item.month\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center my-2\",\n        children: item.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this);\n  }); // console.log(\"datesData\", datesData());\n  // console.log(\"sportData\", sportData);\n  // console.log(\"sportsData\", sportsData);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rna-container\",\n      children: /*#__PURE__*/_jsxDEV(NotificationAlert, {\n        ref: notificationAlertRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: sportData === null || sportData === void 0 ? void 0 : sportData.display_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n        spaceBetween: 30,\n        slidesPerView: 7,\n        breakpoints: {\n          480: {\n            slidesPerView: 7\n          },\n          1400: {\n            slidesPerView: 7\n          }\n        },\n        onSlideChange: () => console.log(\"slide change\"),\n        onSwiper: swiper => console.log(),\n        children: dates.map((item, key) => {\n          return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n            onClick: () => {\n              setModal(true);\n              setModalValue(item.id);\n            },\n            children: item\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 8\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), gameItems]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\nexport async function getServerSideProps(context) {\n  const {\n    req,\n    res\n  } = context;\n  const session = await getSession({\n    req\n  });\n  let users = [];\n\n  if (session) {\n    users = await prisma.user.findMany();\n    users = users.map(user => {\n      delete user.password;\n      delete user.balance;\n      delete user.paypal;\n      delete user.emailVerified;\n      delete user.createdAt;\n      delete user.updatedAt;\n      return user;\n    }).filter(user => {\n      return user.id !== session.user.id;\n    });\n  }\n\n  return {\n    props: {\n      query: context.query,\n      users\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/pages/games.js"],"names":["useRouter","useCallback","useContext","useState","useRef","useEffect","Virtual","Swiper","SwiperSlide","getSession","Container","Row","Col","Card","SportContext","UserContext","moment","GameCard","NotificationAlert","Loading","Games","query","users","router","currentUser","sportsData","notificationAlertRef","date","setDate","sportData","find","sport","abbrv","toUpperCase","notify","errMsg","options","place","message","type","icon","autoDismiss","current","notificationAlert","replace","pathname","undefined","shallow","getData","league","axios","get","league_name","then","response","console","log","data","error","gameItems","events","map","game","key","display_name","status","completed","id","datesData","days","dateStart","dateEnd","add","diff","str","format","split","push","day","month","dates","item","width","slidesPerView","swiper","setModal","setModalValue","getServerSideProps","context","req","res","session","prisma","user","findMany","password","balance","paypal","emailVerified","createdAt","updatedAt","filter","props"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useCallback, useContext, useState, useRef, useEffect } from \"react\";\nimport { Virtual } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { getSession } from \"next-auth/client\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\nimport { UserContext } from \"../contexts/User.Context\";\nimport moment from \"moment\";\nimport GameCard from \"../components/Game/GameCard\";\nimport NotificationAlert from \"react-notification-alert\";\nimport Loading from \"../components/Utility/Loading\";\n\nexport default function Games({ query, users }) {\n\tconst router = useRouter();\n\tconst currentUser = useContext(UserContext);\n\tconst sportsData = useContext(SportContext);\n\tconst notificationAlertRef = useRef(null);\n\tconst [date, setDate] = useState(\"\");\n\tlet sportData = sportsData.find((sport) => {\n\t\treturn sport.abbrv === query.sport?.toUpperCase();\n\t});\n\n\tconst notify = (errMsg) => {\n\t\tlet options = {\n\t\t\tplace: \"tc\",\n\t\t\tmessage: (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>{errMsg}</b>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\ttype: \"danger\",\n\t\t\ticon: \"nc-icon nc-bell-55\",\n\t\t\tautoDismiss: 7,\n\t\t};\n\t\tnotificationAlertRef.current.notificationAlert(options);\n\t\trouter.replace(`${router.pathname}?sport=${query.sport}`, undefined, { shallow: true });\n\t};\n\n\tconst getData = useCallback(async (league, date) => {\n\t\taxios\n\t\t\t.get(`http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard`)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data);\n\t\t\t});\n\t});\n\n\tuseEffect(() => {\n\t\tconsole.log(\"games - date\", date);\n\t}, [date]);\n\n\tuseEffect(() => {\n\t\tif (router.query.error) {\n\t\t\tnotify(router.query.error);\n\t\t}\n\t\tif (!sportData || !router.query.sport) {\n\t\t\trouter.replace(\"/\", undefined, { shallow: true });\n\t\t}\n\t}, [router]);\n\n\tlet gameItems = sportData?.data.events ? (\n\t\tsportData.data.events.map((game, key) => {\n\t\t\treturn (\n\t\t\t\t<Row className=\"my-3\" key={game.id}>\n\t\t\t\t\t<GameCard\n\t\t\t\t\t\tpanelKey={key}\n\t\t\t\t\t\tgameData={game}\n\t\t\t\t\t\tsportName={sportData?.display_name}\n\t\t\t\t\t\tusers={users}\n\t\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\t\tcompleted={game.status.type.completed}\n\t\t\t\t\t/>\n\t\t\t\t</Row>\n\t\t\t);\n\t\t})\n\t) : (\n\t\t<Loading />\n\t);\n\n\tconst datesData = () => {\n\t\tconst days = [];\n\t\tconst dateStart = moment();\n\t\tconst dateEnd = moment().add(90, \"days\");\n\t\twhile (dateEnd.diff(dateStart, \"days\") >= 0) {\n\t\t\tconst str = dateStart.format(\"ddd,MMM,Do\").split(\",\");\n\t\t\tdays.push({ day: str[0], month: str[1], date: str[2] });\n\t\t\tdateStart.add(1, \"days\");\n\t\t}\n\t\treturn days;\n\t};\n\n\tconst dates = datesData().map((item) => {\n\t\treturn (\n\t\t\t<Card border=\"secondary\" className=\"mr-1\" style={{ width: \"4rem\" }}>\n\t\t\t\t<p className=\"text-danger text-center my-1 border-bottom\">{item.month}</p>\n\t\t\t\t<p className=\"text-center my-2\">{item.date}</p>\n\t\t\t</Card>\n\t\t);\n\t});\n\n\t// console.log(\"datesData\", datesData());\n\t// console.log(\"sportData\", sportData);\n\t// console.log(\"sportsData\", sportsData);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"rna-container\">\n\t\t\t\t<NotificationAlert ref={notificationAlertRef} />\n\t\t\t</div>\n\t\t\t<Container fluid>\n\t\t\t\t<h1>{sportData?.display_name}</h1>\n\n\t\t\t\t<Swiper\n\t\t\t\t\tspaceBetween={30}\n\t\t\t\t\tslidesPerView={7}\n\t\t\t\t\tbreakpoints={{ 480: { slidesPerView: 7 }, 1400: { slidesPerView: 7 } }}\n\t\t\t\t\tonSlideChange={() => console.log(\"slide change\")}\n\t\t\t\t\tonSwiper={(swiper) => console.log()}\n\t\t\t\t>\n\t\t\t\t\t{dates.map((item, key) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<SwiperSlide\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tsetModal(true);\n\t\t\t\t\t\t\t\t\tsetModalValue(item.id);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{item}\n\t\t\t\t\t\t\t</SwiperSlide>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</Swiper>\n\n\t\t\t\t{gameItems}\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\tlet users = [];\n\tif (session) {\n\t\tusers = await prisma.user.findMany();\n\t\tusers = users\n\t\t\t.map((user) => {\n\t\t\t\tdelete user.password;\n\t\t\t\tdelete user.balance;\n\t\t\t\tdelete user.paypal;\n\t\t\t\tdelete user.emailVerified;\n\t\t\t\tdelete user.createdAt;\n\t\t\t\tdelete user.updatedAt;\n\n\t\t\t\treturn user;\n\t\t\t})\n\t\t\t.filter((user) => {\n\t\t\t\treturn user.id !== session.user.id;\n\t\t\t});\n\t}\n\n\treturn {\n\t\tprops: { query: context.query, users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}