{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst gamesAddedtoBets = (bets, games) => {\n  return bets.map(sport => {\n    const bet = sport.bets.map(bet => {\n      var _sportGames$data$even;\n\n      const sportGames = games.find(item => item.display_name === sport.displayName);\n      const event = (_sportGames$data$even = sportGames.data.events) === null || _sportGames$data$even === void 0 ? void 0 : _sportGames$data$even.find(event => event.id === bet.details.gameId);\n      bet.event = event;\n\n      if ((event === null || event === void 0 ? void 0 : event.status.type.name) === \"STATUS_FINAL\") {\n        bet.openStatus = \"Ended\";\n      } else if ((event === null || event === void 0 ? void 0 : event.status.type.state) === \"in\") {\n        bet.openStatus = event.status.period <= 1 ? \"danger\" : \"Closed\";\n      } else if ((event === null || event === void 0 ? void 0 : event.status.type.state) === \"pre\") {\n        const now = new Date();\n        const gameTime = new Date(bet.event.date);\n        const timeDiff = (gameTime.getTime() - now.getTime()) / (3600 * 1000);\n\n        if (gameTime.getDate() === now.getDate() && gameTime.getMonth() === now.getMonth()) {\n          bet.openStatus = timeDiff <= 2 ? \"warning\" : \"info\";\n        }\n      }\n\n      return bet;\n    });\n    return _objectSpread(_objectSpread({}, sport), {}, {\n      bets: bet\n    });\n  });\n};\n\nconst betsReducer = (state, action) => {\n  const sportIcons = [{\n    icon: 1,\n    abbrv: \"NCAAF\",\n    sport: \"football\",\n    displayName: \"NCAA Football\",\n    league_name: \"college-football\",\n    bets: []\n  }, {\n    icon: 2,\n    abbrv: \"NFL\",\n    sport: \"football\",\n    displayName: \"NFL\",\n    league_name: \"nfl\",\n    bets: []\n  }, {\n    icon: 3,\n    abbrv: \"MLB\",\n    sport: \"baseball\",\n    displayName: \"MLB\",\n    league_name: \"mlb\",\n    bets: []\n  }, {\n    icon: 4,\n    abbrv: \"NBA\",\n    sport: \"basketball\",\n    displayName: \"NBA\",\n    league_name: \"nba\",\n    bets: []\n  }, {\n    icon: 5,\n    abbrv: \"NCAAB\",\n    sport: \"basketball\",\n    displayName: \"NCAA Men's Basketball\",\n    league_name: \"mens-college-basketball\",\n    bets: []\n  }, {\n    icon: 6,\n    abbrv: \"NHL\",\n    sport: \"hockey\",\n    displayName: \"NHL\",\n    league_name: \"nhl\",\n    bets: []\n  }, {\n    icon: 8,\n    abbrv: \"WNBA\",\n    sport: \"basketball\",\n    displayName: \"WNBA\",\n    league_name: \"wnba\",\n    bets: []\n  }, {\n    icon: 10,\n    abbrv: \"MLS\",\n    sport: \"soccer\",\n    displayName: \"MLS\",\n    league_name: \"mls\",\n    bets: []\n  }];\n\n  switch (action.type) {\n    case \"ADD BET\":\n      if (action.recipient) {\n        const index = state.pendingBets.recipientBets.findIndex(sport => sport.displayName === action.bet.details.sport);\n\n        if (index === -1) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            pendingBets: {\n              openBets: state.pendingBets.openBets,\n              recipientBets: [...state.pendingBets.recipientBets, _objectSpread(_objectSpread({}, sportIcons.find(sport => sport.displayName === action.bet.details.sport)), {}, {\n                bets: [action.bet]\n              })]\n            }\n          });\n        } else {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            pendingBets: {\n              openBets: state.pendingBets.openBets,\n              recipientBets: state.pendingBets.recipientBets.map(sport => sport.displayName === action.bet.details.sport ? _objectSpread(_objectSpread({}, sport), {}, {\n                bets: [...sport.bets, action.bet]\n              }) : sport)\n            }\n          });\n        }\n      } else {\n        const index = state.pendingBets.openBets.findIndex(sport => sport.displayName === action.bet.details.sport);\n\n        if (index === -1) {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            pendingBets: {\n              openBets: [...state.pendingBets.openBets, _objectSpread(_objectSpread({}, sportIcons.find(sport => sport.displayName === action.bet.details.sport)), {}, {\n                bets: [action.bet]\n              })],\n              recipientBets: state.pendingBets.recipientBets\n            }\n          });\n        } else {\n          return _objectSpread(_objectSpread({}, state), {}, {\n            pendingBets: {\n              openBets: state.pendingBets.openBets.map(sport => sport.displayName === action.bet.details.sport ? _objectSpread(_objectSpread({}, sport), {}, {\n                bets: [...sport.bets, action.bet]\n              }) : sport),\n              recipientBets: state.pendingBets.recipientBets\n            }\n          });\n        }\n      }\n\n    case \"ACCEPTED BET\":\n      const index = state.acceptedBets.findIndex(sport => sport.displayName === action.bet.details.sport);\n\n      if (index === -1) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          pendingBets: {\n            openBets: state.pendingBets.openBets.map(sport => sport.displayName === action.bet.details.sport ? _objectSpread(_objectSpread({}, sport), {}, {\n              bets: sport.bets.filter(bet => bet.id !== action.bet.id)\n            }) : sport),\n            recipientBets: state.pendingBets.recipientBets.map(sport => sport.displayName === action.bet.details.sport ? _objectSpread(_objectSpread({}, sport), {}, {\n              bets: sport.bets.filter(bet => bet.id !== action.bet.id)\n            }) : sport)\n          },\n          acceptedBets: [...state.acceptedBets, _objectSpread(_objectSpread({}, sportIcons.find(sport => sport.displayName === action.bet.details.sport)), {}, {\n            bets: [action.bet]\n          })]\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          pendingBets: {\n            openBets: state.pendingBets.openBets.map(sport => sport.displayName === action.bet.details.sport ? _objectSpread(_objectSpread({}, sport), {}, {\n              bets: sport.bets.filter(bet => bet.id !== action.bet.id)\n            }) : sport),\n            recipientBets: state.pendingBets.recipientBets.map(sport => sport.displayName === action.bet.details.sport ? _objectSpread(_objectSpread({}, sport), {}, {\n              bets: sport.bets.filter(bet => bet.id !== action.bet.id)\n            }) : sport)\n          },\n          acceptedBets: state.acceptedBets.map(sport => sport.displayName === action.bet.details.sport ? _objectSpread(_objectSpread({}, sport), {}, {\n            bets: [...sport.bets, action.bet]\n          }) : sport)\n        });\n      }\n\n    case \"COMPLETED OPEN BET\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pendingBets: {\n          openBets: state.pendingBets.openBets.map(sport => {\n            return _objectSpread(_objectSpread({}, sport), {}, {\n              bets: sport.bets.filter(bet => {\n                return bet.event.status.type.name !== \"STATUS_FINAL\";\n              })\n            });\n          }),\n          recipientBets: state.pendingBets.recipientBets\n        },\n        completedBets: [...state.completedBets, ...action.bets]\n      });\n\n    case \"COMPLETED RECIPIENT BET\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pendingBets: {\n          openBets: state.pendingBets.openBets,\n          recipientBets: state.pendingBets.recipientBets(sport => {\n            return _objectSpread(_objectSpread({}, sport), {}, {\n              bets: sport.bets.filter(bet => {\n                return bet.event.status.type.name !== \"STATUS_FINAL\";\n              })\n            });\n          })\n        },\n        completedBets: [...state.completedBets, ...action.bets]\n      });\n\n    case \"COMPLETED ACCEPTED BET\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        acceptedBets: state.acceptedBets.map(sport => {\n          return _objectSpread(_objectSpread({}, sport), {}, {\n            bets: sport.bets.filter(bet => {\n              return bet.event.status.type.name !== \"STATUS_FINAL\";\n            })\n          });\n        }),\n        completedBets: [...state.completedBets, ...action.bets]\n      });\n\n    case \"INIT\":\n      return {\n        pendingBets: {\n          openBets: action.bets.pendingBets.openBets,\n          recipientBets: action.bets.pendingBets.recipientBets\n        },\n        acceptedBets: action.bets.acceptedBets,\n        completedBets: action.bets.completedBets,\n        initialized: action.initialized,\n        userBets: action.userBets\n      };\n\n    case \"GAME UPDATE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pendingBets: {\n          openBets: gamesAddedtoBets(state.pendingBets.openBets, action.games),\n          recipientBets: gamesAddedtoBets(state.pendingBets.recipientBets, action.games)\n        },\n        acceptedBets: gamesAddedtoBets(state.acceptedBets, action.games)\n      });\n  }\n};\n\nexport default betsReducer;","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/reducers/Bets.Reducer.js"],"names":["gamesAddedtoBets","bets","games","map","sport","bet","sportGames","find","item","display_name","displayName","event","data","events","id","details","gameId","status","type","name","openStatus","state","period","now","Date","gameTime","date","timeDiff","getTime","getDate","getMonth","betsReducer","action","sportIcons","icon","abbrv","league_name","recipient","index","pendingBets","recipientBets","findIndex","openBets","acceptedBets","filter","completedBets","initialized","userBets"],"mappings":"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","sourcesContent":["const gamesAddedtoBets = (bets, games) => {\n\treturn bets.map((sport) => {\n\t\tconst bet = sport.bets.map((bet) => {\n\t\t\tconst sportGames = games.find((item) => item.display_name === sport.displayName);\n\t\t\tconst event = sportGames.data.events?.find((event) => event.id === bet.details.gameId);\n\t\t\tbet.event = event;\n\t\t\tif (event?.status.type.name === \"STATUS_FINAL\") {\n\t\t\t\tbet.openStatus = \"Ended\";\n\t\t\t} else if (event?.status.type.state === \"in\") {\n\t\t\t\tbet.openStatus = event.status.period <= 1 ? \"danger\" : \"Closed\";\n\t\t\t} else if (event?.status.type.state === \"pre\") {\n\t\t\t\tconst now = new Date();\n\t\t\t\tconst gameTime = new Date(bet.event.date);\n\t\t\t\tconst timeDiff = (gameTime.getTime() - now.getTime()) / (3600 * 1000);\n\t\t\t\tif (gameTime.getDate() === now.getDate() && gameTime.getMonth() === now.getMonth()) {\n\t\t\t\t\tbet.openStatus = timeDiff <= 2 ? \"warning\" : \"info\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn bet;\n\t\t});\n\t\treturn { ...sport, bets: bet };\n\t});\n};\n\nconst betsReducer = (state, action) => {\n\tconst sportIcons = [\n\t\t{\n\t\t\ticon: 1,\n\t\t\tabbrv: \"NCAAF\",\n\t\t\tsport: \"football\",\n\t\t\tdisplayName: \"NCAA Football\",\n\t\t\tleague_name: \"college-football\",\n\t\t\tbets: [],\n\t\t},\n\t\t{\n\t\t\ticon: 2,\n\t\t\tabbrv: \"NFL\",\n\t\t\tsport: \"football\",\n\t\t\tdisplayName: \"NFL\",\n\t\t\tleague_name: \"nfl\",\n\t\t\tbets: [],\n\t\t},\n\t\t{\n\t\t\ticon: 3,\n\t\t\tabbrv: \"MLB\",\n\t\t\tsport: \"baseball\",\n\t\t\tdisplayName: \"MLB\",\n\t\t\tleague_name: \"mlb\",\n\t\t\tbets: [],\n\t\t},\n\t\t{\n\t\t\ticon: 4,\n\t\t\tabbrv: \"NBA\",\n\t\t\tsport: \"basketball\",\n\t\t\tdisplayName: \"NBA\",\n\t\t\tleague_name: \"nba\",\n\t\t\tbets: [],\n\t\t},\n\t\t{\n\t\t\ticon: 5,\n\t\t\tabbrv: \"NCAAB\",\n\t\t\tsport: \"basketball\",\n\t\t\tdisplayName: \"NCAA Men's Basketball\",\n\t\t\tleague_name: \"mens-college-basketball\",\n\t\t\tbets: [],\n\t\t},\n\t\t{\n\t\t\ticon: 6,\n\t\t\tabbrv: \"NHL\",\n\t\t\tsport: \"hockey\",\n\t\t\tdisplayName: \"NHL\",\n\t\t\tleague_name: \"nhl\",\n\t\t\tbets: [],\n\t\t},\n\t\t{\n\t\t\ticon: 8,\n\t\t\tabbrv: \"WNBA\",\n\t\t\tsport: \"basketball\",\n\t\t\tdisplayName: \"WNBA\",\n\t\t\tleague_name: \"wnba\",\n\t\t\tbets: [],\n\t\t},\n\t\t{\n\t\t\ticon: 10,\n\t\t\tabbrv: \"MLS\",\n\t\t\tsport: \"soccer\",\n\t\t\tdisplayName: \"MLS\",\n\t\t\tleague_name: \"mls\",\n\t\t\tbets: [],\n\t\t},\n\t];\n\n\tswitch (action.type) {\n\t\tcase \"ADD BET\":\n\t\t\tif (action.recipient) {\n\t\t\t\tconst index = state.pendingBets.recipientBets.findIndex(\n\t\t\t\t\t(sport) => sport.displayName === action.bet.details.sport\n\t\t\t\t);\n\t\t\t\tif (index === -1) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tpendingBets: {\n\t\t\t\t\t\t\topenBets: state.pendingBets.openBets,\n\t\t\t\t\t\t\trecipientBets: [\n\t\t\t\t\t\t\t\t...state.pendingBets.recipientBets,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...sportIcons.find((sport) => sport.displayName === action.bet.details.sport),\n\t\t\t\t\t\t\t\t\tbets: [action.bet],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tpendingBets: {\n\t\t\t\t\t\t\topenBets: state.pendingBets.openBets,\n\t\t\t\t\t\t\trecipientBets: state.pendingBets.recipientBets.map((sport) =>\n\t\t\t\t\t\t\t\tsport.displayName === action.bet.details.sport\n\t\t\t\t\t\t\t\t\t? { ...sport, bets: [...sport.bets, action.bet] }\n\t\t\t\t\t\t\t\t\t: sport\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst index = state.pendingBets.openBets.findIndex(\n\t\t\t\t\t(sport) => sport.displayName === action.bet.details.sport\n\t\t\t\t);\n\t\t\t\tif (index === -1) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tpendingBets: {\n\t\t\t\t\t\t\topenBets: [\n\t\t\t\t\t\t\t\t...state.pendingBets.openBets,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t...sportIcons.find((sport) => sport.displayName === action.bet.details.sport),\n\t\t\t\t\t\t\t\t\tbets: [action.bet],\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\trecipientBets: state.pendingBets.recipientBets,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\tpendingBets: {\n\t\t\t\t\t\t\topenBets: state.pendingBets.openBets.map((sport) =>\n\t\t\t\t\t\t\t\tsport.displayName === action.bet.details.sport\n\t\t\t\t\t\t\t\t\t? { ...sport, bets: [...sport.bets, action.bet] }\n\t\t\t\t\t\t\t\t\t: sport\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\trecipientBets: state.pendingBets.recipientBets,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\tcase \"ACCEPTED BET\":\n\t\t\tconst index = state.acceptedBets.findIndex((sport) => sport.displayName === action.bet.details.sport);\n\t\t\tif (index === -1) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tpendingBets: {\n\t\t\t\t\t\topenBets: state.pendingBets.openBets.map((sport) =>\n\t\t\t\t\t\t\tsport.displayName === action.bet.details.sport\n\t\t\t\t\t\t\t\t? { ...sport, bets: sport.bets.filter((bet) => bet.id !== action.bet.id) }\n\t\t\t\t\t\t\t\t: sport\n\t\t\t\t\t\t),\n\t\t\t\t\t\trecipientBets: state.pendingBets.recipientBets.map((sport) =>\n\t\t\t\t\t\t\tsport.displayName === action.bet.details.sport\n\t\t\t\t\t\t\t\t? { ...sport, bets: sport.bets.filter((bet) => bet.id !== action.bet.id) }\n\t\t\t\t\t\t\t\t: sport\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tacceptedBets: [\n\t\t\t\t\t\t...state.acceptedBets,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...sportIcons.find((sport) => sport.displayName === action.bet.details.sport),\n\t\t\t\t\t\t\tbets: [action.bet],\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tpendingBets: {\n\t\t\t\t\t\topenBets: state.pendingBets.openBets.map((sport) =>\n\t\t\t\t\t\t\tsport.displayName === action.bet.details.sport\n\t\t\t\t\t\t\t\t? { ...sport, bets: sport.bets.filter((bet) => bet.id !== action.bet.id) }\n\t\t\t\t\t\t\t\t: sport\n\t\t\t\t\t\t),\n\t\t\t\t\t\trecipientBets: state.pendingBets.recipientBets.map((sport) =>\n\t\t\t\t\t\t\tsport.displayName === action.bet.details.sport\n\t\t\t\t\t\t\t\t? { ...sport, bets: sport.bets.filter((bet) => bet.id !== action.bet.id) }\n\t\t\t\t\t\t\t\t: sport\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\tacceptedBets: state.acceptedBets.map((sport) =>\n\t\t\t\t\t\tsport.displayName === action.bet.details.sport\n\t\t\t\t\t\t\t? { ...sport, bets: [...sport.bets, action.bet] }\n\t\t\t\t\t\t\t: sport\n\t\t\t\t\t),\n\t\t\t\t};\n\t\t\t}\n\n\t\tcase \"COMPLETED OPEN BET\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpendingBets: {\n\t\t\t\t\topenBets: state.pendingBets.openBets.map((sport) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...sport,\n\t\t\t\t\t\t\tbets: sport.bets.filter((bet) => {\n\t\t\t\t\t\t\t\treturn bet.event.status.type.name !== \"STATUS_FINAL\";\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t\trecipientBets: state.pendingBets.recipientBets,\n\t\t\t\t},\n\t\t\t\tcompletedBets: [...state.completedBets, ...action.bets],\n\t\t\t};\n\n\t\tcase \"COMPLETED RECIPIENT BET\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpendingBets: {\n\t\t\t\t\topenBets: state.pendingBets.openBets,\n\t\t\t\t\trecipientBets: state.pendingBets.recipientBets((sport) => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...sport,\n\t\t\t\t\t\t\tbets: sport.bets.filter((bet) => {\n\t\t\t\t\t\t\t\treturn bet.event.status.type.name !== \"STATUS_FINAL\";\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t};\n\t\t\t\t\t}),\n\t\t\t\t},\n\t\t\t\tcompletedBets: [...state.completedBets, ...action.bets],\n\t\t\t};\n\n\t\tcase \"COMPLETED ACCEPTED BET\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tacceptedBets: state.acceptedBets.map((sport) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...sport,\n\t\t\t\t\t\tbets: sport.bets.filter((bet) => {\n\t\t\t\t\t\t\treturn bet.event.status.type.name !== \"STATUS_FINAL\";\n\t\t\t\t\t\t}),\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\tcompletedBets: [...state.completedBets, ...action.bets],\n\t\t\t};\n\n\t\tcase \"INIT\":\n\t\t\treturn {\n\t\t\t\tpendingBets: {\n\t\t\t\t\topenBets: action.bets.pendingBets.openBets,\n\t\t\t\t\trecipientBets: action.bets.pendingBets.recipientBets,\n\t\t\t\t},\n\t\t\t\tacceptedBets: action.bets.acceptedBets,\n\t\t\t\tcompletedBets: action.bets.completedBets,\n\t\t\t\tinitialized: action.initialized,\n\t\t\t\tuserBets: action.userBets,\n\t\t\t};\n\n\t\tcase \"GAME UPDATE\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpendingBets: {\n\t\t\t\t\topenBets: gamesAddedtoBets(state.pendingBets.openBets, action.games),\n\t\t\t\t\trecipientBets: gamesAddedtoBets(state.pendingBets.recipientBets, action.games),\n\t\t\t\t},\n\t\t\t\tacceptedBets: gamesAddedtoBets(state.acceptedBets, action.games),\n\t\t\t};\n\t}\n};\n\nexport default betsReducer;\n"]},"metadata":{},"sourceType":"module"}