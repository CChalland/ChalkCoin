{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\"; // import prisma from \"../contexts/prisma\";\n\nimport axios from \"axios\";\n\nfunction fetchBetsJSON() {\n  return _fetchBetsJSON.apply(this, arguments);\n}\n\nfunction _fetchBetsJSON() {\n  _fetchBetsJSON = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var res, bets;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch(\"/api/bets\");\n\n          case 2:\n            res = _context2.sent;\n            _context2.next = 5;\n            return res.json();\n\n          case 5:\n            bets = _context2.sent;\n            return _context2.abrupt(\"return\", bets);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fetchBetsJSON.apply(this, arguments);\n}\n\nfunction Bets(props) {\n  _s();\n\n  var _useState = useState([]),\n      bets = _useState[0],\n      setBets = _useState[1];\n\n  console.log(props.currentUser);\n\n  var getData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                fetchBetsJSON().then(function (bets) {\n                  var betData = bets;\n                  console.log(betData);\n                });\n              } catch (err) {\n                console.log(err);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  getData();\n  console.log(bets);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"BETS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Bets, \"1lBTggZRC8K6mu1s3/+EyZLsJeI=\");\n\n_c = Bets;\nexport var __N_SSP = true;\nexport default Bets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bets\");","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/bets.js"],"names":["React","useContext","useEffect","useState","Container","SportContext","axios","fetchBetsJSON","fetch","res","json","bets","Bets","props","setBets","console","log","currentUser","getData","then","betData","err"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,YAAT,QAA6B,4BAA7B,C,CACA;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;SAEeC,a;;;;;4EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACmBC,KAAK,CAAC,WAAD,CADxB;;AAAA;AACOC,YAAAA,GADP;AAAA;AAAA,mBAEoBA,GAAG,CAACC,IAAJ,EAFpB;;AAAA;AAEOC,YAAAA,IAFP;AAAA,8CAGQA,IAHR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA,kBACIV,QAAQ,CAAC,EAAD,CADZ;AAAA,MACbQ,IADa;AAAA,MACPG,OADO;;AAEpBC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,WAAlB;;AAEA,MAAMC,OAAO;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AACf,kBAAI;AACHX,gBAAAA,aAAa,GAAGY,IAAhB,CAAqB,UAACR,IAAD,EAAU;AAC9B,sBAAIS,OAAO,GAAGT,IAAd;AACAI,kBAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,iBAHD;AAIA,eALD,CAKE,OAAOC,GAAP,EAAY;AACbN,gBAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACA;;AARc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPH,OAAO;AAAA;AAAA;AAAA,KAAb;;AAUAA,EAAAA,OAAO;AAEPH,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,sBACC,QAAC,SAAD;AAAA,2BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA;;GAtBQC,I;;KAAAA,I;;AAwBT,eAAeA,IAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { SportContext } from \"../contexts/Sports.Context\";\n// import prisma from \"../contexts/prisma\";\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\n\nasync function fetchBetsJSON() {\n\tconst res = await fetch(\"/api/bets\");\n\tconst bets = await res.json();\n\treturn bets;\n}\n\nfunction Bets(props) {\n\tconst [bets, setBets] = useState([]);\n\tconsole.log(props.currentUser);\n\n\tconst getData = async () => {\n\t\ttry {\n\t\t\tfetchBetsJSON().then((bets) => {\n\t\t\t\tlet betData = bets;\n\t\t\t\tconsole.log(betData);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\tgetData();\n\n\tconsole.log(bets);\n\treturn (\n\t\t<Container>\n\t\t\t<div>BETS</div>\n\t\t</Container>\n\t);\n}\n\nexport default Bets;\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\tlet currentUser = {};\n\tif (session) {\n\t\tcurrentUser = await prisma.user.findUnique({\n\t\t\twhere: {\n\t\t\t\tid: session.user.id,\n\t\t\t},\n\t\t});\n\t\tdelete currentUser.password;\n\t\tdelete currentUser.paypal;\n\t\tdelete currentUser.emailVerified;\n\t\tdelete currentUser.createdAt;\n\t\tdelete currentUser.updatedAt;\n\t}\n\n\tlet bets = await prisma.bet.findMany({\n\t\twhere: {\n\t\t\taccepted: false,\n\t\t},\n\t});\n\tconsole.log(bets);\n\n\treturn {\n\t\tprops: { currentUser },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}