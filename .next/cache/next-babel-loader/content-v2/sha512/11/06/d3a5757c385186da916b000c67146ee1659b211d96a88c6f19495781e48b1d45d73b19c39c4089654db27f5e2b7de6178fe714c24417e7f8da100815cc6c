{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/colechalland/Projects/ChalkCoin/pages/games.js\";\nimport { useRouter } from \"next/router\";\nimport { useCallback, useContext, useState, useRef, useEffect } from \"react\";\nimport { getSession } from \"next-auth/client\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport { SportContext, SportDispatch } from \"../contexts/Sports.Context\";\nimport { UserContext } from \"../contexts/User.Context\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport GameCard from \"../components/Game/GameCard\";\nimport NotificationAlert from \"react-notification-alert\";\nimport Loading from \"../components/Utility/Loading\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay, EffectFade, Navigation, Pagination } from \"swiper\";\nSwiperCore.use([Pagination, Navigation, Autoplay, EffectFade]);\nexport default function Games({\n  query,\n  users\n}) {\n  const router = useRouter();\n  const currentUser = useContext(UserContext);\n  const sportsData = useContext(SportContext);\n  const dispatch = useContext(SportDispatch);\n  const notificationAlertRef = useRef(null);\n  const {\n    0: league,\n    1: setLeague\n  } = useState({});\n  const {\n    0: games,\n    1: setGames\n  } = useState([]);\n  const {\n    0: swiperIndex,\n    1: setSwiperIndex\n  } = useState(7);\n  const {\n    0: selectedIndex,\n    1: setSelectedIndex\n  } = useState(-1);\n  const {\n    0: selectedDate,\n    1: setSelectedDate\n  } = useState({});\n\n  const notify = errMsg => {\n    let options = {\n      place: \"tc\",\n      message: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: errMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this),\n      type: \"danger\",\n      icon: \"nc-icon nc-bell-55\",\n      autoDismiss: 7\n    };\n    notificationAlertRef.current.notificationAlert(options);\n    router.replace(`${router.pathname}?sport=${query.sport}`, undefined, {\n      shallow: true\n    });\n  };\n\n  const datesData = () => {\n    const days = [];\n    const today = moment().format(\"YYYYMMDD\");\n    const dateStart = moment().subtract(7, \"days\");\n    const dateEnd = moment().add(90, \"days\");\n\n    while (dateEnd.diff(dateStart, \"days\") >= 0) {\n      const str = dateStart.format(\"ddd,MMM,Do,YYYYMMDD\").split(\",\");\n      days.push({\n        day: str[0],\n        month: str[1],\n        date: str[2],\n        value: str[3],\n        today: today === str[3] ? true : false,\n        past: moment().diff(dateStart, \"days\") > 0 ? true : false\n      });\n      dateStart.add(1, \"days\");\n    }\n\n    return days;\n  };\n\n  const getData = useCallback(async (league, date) => {\n    axios.get(`http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard?dates=${date.value}`).then(response => {\n      console.log(response.data);\n      dispatch({\n        type: \"SELECTED DATE\",\n        data: response.data,\n        date: selectedDate,\n        sport: league.display_name\n      });\n    });\n  });\n  useEffect(() => {\n    if (selectedDate.value) getData(league, selectedDate);\n  }, [selectedDate]);\n  useEffect(() => {\n    if (router.query.error) {\n      notify(router.query.error);\n    } else if (!league || !router.query.sport) {\n      setSelectedIndex(-1);\n      setSelectedDate({});\n      router.replace(\"/\", undefined, {\n        shallow: true\n      });\n    } else if (router.query.sport.toUpperCase() !== league.abbrv) {\n      setSelectedIndex(-1);\n      setSelectedDate({});\n      setLeague(sportsData.find(sport => {\n        return sport.abbrv === router.query.sport.toUpperCase();\n      }));\n    }\n  }, [router]);\n  useEffect(() => {\n    setLeague(sportsData.find(sport => {\n      return sport.abbrv === router.query.sport.toUpperCase();\n    }));\n  }, [sportsData]);\n  useEffect(() => {\n    var _league$data, _league$data3;\n\n    if (((_league$data = league.data) === null || _league$data === void 0 ? void 0 : _league$data.days.length) > 0) {\n      var _league$data2;\n\n      const selected = (_league$data2 = league.data) === null || _league$data2 === void 0 ? void 0 : _league$data2.days.find(day => day.date === selectedDate);\n\n      if (selected.events.length > 0) {\n        setGames(selected.events);\n      } else {\n        setGames([]);\n      }\n    } else if ((_league$data3 = league.data) !== null && _league$data3 !== void 0 && _league$data3.events) setGames(league.data.events);else {\n      setGames([]);\n    }\n  }, [league]);\n  let gameCards;\n  if (games.length > 0) gameCards = games.map((game, key) => /*#__PURE__*/_jsxDEV(Row, {\n    className: \"my-3\",\n    children: /*#__PURE__*/_jsxDEV(GameCard, {\n      panelKey: key,\n      gameData: game,\n      sportName: league === null || league === void 0 ? void 0 : league.display_name,\n      users: users,\n      currentUser: currentUser,\n      completed: game.status.type.completed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this)\n  }, game.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 4\n  }, this));else if (selectedDate.value) gameCards = /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Events Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 4\n  }, this);else gameCards = /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 19\n  }, this); // console.log(\"games - selectedDate\", selectedDate);\n  // console.log(\"games - league\", league);\n  // console.log(\"games -  games\", games);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rna-container\",\n      children: /*#__PURE__*/_jsxDEV(NotificationAlert, {\n        ref: notificationAlertRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: league.display_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 11,\n          xl: 10,\n          className: \"swiper-container\",\n          children: /*#__PURE__*/_jsxDEV(Swiper, {\n            className: \"swiper-wrapper\",\n            enabled: true,\n            slidesPerView: 1,\n            spaceBetween: 5,\n            initialSlide: swiperIndex,\n            breakpoints: {\n              240: {\n                slidesPerView: 3\n              },\n              320: {\n                slidesPerView: 5\n              },\n              480: {\n                slidesPerView: 7\n              },\n              720: {\n                slidesPerView: 9\n              },\n              940: {\n                slidesPerView: 10\n              },\n              1200: {\n                slidesPerView: 11\n              },\n              1400: {\n                slidesPerView: 14\n              },\n              1600: {\n                slidesPerView: 16\n              }\n            },\n            navigation: {\n              nextEl: \".template-next\",\n              prevEl: \".swiper-button-prev\"\n            },\n            onSlideChange: swiper => setSwiperIndex(swiper.activeIndex),\n            children: datesData().map((item, key) => {\n              // console.log(\"games - datesData() - item\", item);\n              return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n                className: \"\",\n                onClick: () => {\n                  setSelectedIndex(key);\n                  setSelectedDate(item);\n                },\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: `${selectedIndex === key ? \"\" : \"text-muted\"} mb-1 py-0 ml-2`,\n                      children: item.day\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Card, {\n                      border: \"secondary\",\n                      className: \"mr-1\",\n                      style: {\n                        width: \"3rem\",\n                        height: \"4rem\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        className: `${selectedIndex === key ? \"text-danger\" : \"text-danger-muted\"} text-center my-1 border-bottom`,\n                        children: item.month\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 14\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: `${selectedIndex === key ? \"\" : \"text-muted\"} text-center my-1`,\n                        children: item.date\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 14\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 13\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 12\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 11\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 10\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this), gameCards]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\nexport async function getServerSideProps(context) {\n  const {\n    req,\n    res\n  } = context;\n  const session = await getSession({\n    req\n  });\n  let users = [];\n\n  if (session) {\n    users = await prisma.user.findMany();\n    users = users.map(user => {\n      delete user.password;\n      delete user.balance;\n      delete user.paypal;\n      delete user.emailVerified;\n      delete user.createdAt;\n      delete user.updatedAt;\n      return user;\n    }).filter(user => {\n      return user.id !== session.user.id;\n    });\n  }\n\n  return {\n    props: {\n      query: context.query,\n      users\n    }\n  };\n}","map":{"version":3,"sources":["/Users/colechalland/Projects/ChalkCoin/pages/games.js"],"names":["useRouter","useCallback","useContext","useState","useRef","useEffect","getSession","Container","Row","Col","Card","SportContext","SportDispatch","UserContext","moment","axios","GameCard","NotificationAlert","Loading","Swiper","SwiperSlide","SwiperCore","Autoplay","EffectFade","Navigation","Pagination","use","Games","query","users","router","currentUser","sportsData","dispatch","notificationAlertRef","league","setLeague","games","setGames","swiperIndex","setSwiperIndex","selectedIndex","setSelectedIndex","selectedDate","setSelectedDate","notify","errMsg","options","place","message","type","icon","autoDismiss","current","notificationAlert","replace","pathname","sport","undefined","shallow","datesData","days","today","format","dateStart","subtract","dateEnd","add","diff","str","split","push","day","month","date","value","past","getData","get","league_name","then","response","console","log","data","display_name","error","toUpperCase","abbrv","find","length","selected","events","gameCards","map","game","key","status","completed","id","slidesPerView","nextEl","prevEl","swiper","activeIndex","item","width","height","getServerSideProps","context","req","res","session","prisma","user","findMany","password","balance","paypal","emailVerified","createdAt","updatedAt","filter","props"],"mappings":"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","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useCallback, useContext, useState, useRef, useEffect } from \"react\";\nimport { getSession } from \"next-auth/client\";\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\nimport { SportContext, SportDispatch } from \"../contexts/Sports.Context\";\nimport { UserContext } from \"../contexts/User.Context\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport GameCard from \"../components/Game/GameCard\";\nimport NotificationAlert from \"react-notification-alert\";\nimport Loading from \"../components/Utility/Loading\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport SwiperCore, { Autoplay, EffectFade, Navigation, Pagination } from \"swiper\";\nSwiperCore.use([Pagination, Navigation, Autoplay, EffectFade]);\n\nexport default function Games({ query, users }) {\n\tconst router = useRouter();\n\tconst currentUser = useContext(UserContext);\n\tconst sportsData = useContext(SportContext);\n\tconst dispatch = useContext(SportDispatch);\n\tconst notificationAlertRef = useRef(null);\n\tconst [league, setLeague] = useState({});\n\tconst [games, setGames] = useState([]);\n\tconst [swiperIndex, setSwiperIndex] = useState(7);\n\tconst [selectedIndex, setSelectedIndex] = useState(-1);\n\tconst [selectedDate, setSelectedDate] = useState({});\n\tconst notify = (errMsg) => {\n\t\tlet options = {\n\t\t\tplace: \"tc\",\n\t\t\tmessage: (\n\t\t\t\t<div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>{errMsg}</b>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t),\n\t\t\ttype: \"danger\",\n\t\t\ticon: \"nc-icon nc-bell-55\",\n\t\t\tautoDismiss: 7,\n\t\t};\n\t\tnotificationAlertRef.current.notificationAlert(options);\n\t\trouter.replace(`${router.pathname}?sport=${query.sport}`, undefined, { shallow: true });\n\t};\n\tconst datesData = () => {\n\t\tconst days = [];\n\t\tconst today = moment().format(\"YYYYMMDD\");\n\t\tconst dateStart = moment().subtract(7, \"days\");\n\t\tconst dateEnd = moment().add(90, \"days\");\n\t\twhile (dateEnd.diff(dateStart, \"days\") >= 0) {\n\t\t\tconst str = dateStart.format(\"ddd,MMM,Do,YYYYMMDD\").split(\",\");\n\t\t\tdays.push({\n\t\t\t\tday: str[0],\n\t\t\t\tmonth: str[1],\n\t\t\t\tdate: str[2],\n\t\t\t\tvalue: str[3],\n\t\t\t\ttoday: today === str[3] ? true : false,\n\t\t\t\tpast: moment().diff(dateStart, \"days\") > 0 ? true : false,\n\t\t\t});\n\t\t\tdateStart.add(1, \"days\");\n\t\t}\n\t\treturn days;\n\t};\n\n\tconst getData = useCallback(async (league, date) => {\n\t\taxios\n\t\t\t.get(\n\t\t\t\t`http://site.api.espn.com/apis/site/v2/sports/${league.sport}/${league.league_name}/scoreboard?dates=${date.value}`\n\t\t\t)\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response.data);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: \"SELECTED DATE\",\n\t\t\t\t\tdata: response.data,\n\t\t\t\t\tdate: selectedDate,\n\t\t\t\t\tsport: league.display_name,\n\t\t\t\t});\n\t\t\t});\n\t});\n\n\tuseEffect(() => {\n\t\tif (selectedDate.value) getData(league, selectedDate);\n\t}, [selectedDate]);\n\n\tuseEffect(() => {\n\t\tif (router.query.error) {\n\t\t\tnotify(router.query.error);\n\t\t} else if (!league || !router.query.sport) {\n\t\t\tsetSelectedIndex(-1);\n\t\t\tsetSelectedDate({});\n\t\t\trouter.replace(\"/\", undefined, { shallow: true });\n\t\t} else if (router.query.sport.toUpperCase() !== league.abbrv) {\n\t\t\tsetSelectedIndex(-1);\n\t\t\tsetSelectedDate({});\n\t\t\tsetLeague(\n\t\t\t\tsportsData.find((sport) => {\n\t\t\t\t\treturn sport.abbrv === router.query.sport.toUpperCase();\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t}, [router]);\n\n\tuseEffect(() => {\n\t\tsetLeague(\n\t\t\tsportsData.find((sport) => {\n\t\t\t\treturn sport.abbrv === router.query.sport.toUpperCase();\n\t\t\t})\n\t\t);\n\t}, [sportsData]);\n\n\tuseEffect(() => {\n\t\tif (league.data?.days.length > 0) {\n\t\t\tconst selected = league.data?.days.find((day) => day.date === selectedDate);\n\t\t\tif (selected.events.length > 0) {\n\t\t\t\tsetGames(selected.events);\n\t\t\t} else {\n\t\t\t\tsetGames([]);\n\t\t\t}\n\t\t} else if (league.data?.events) setGames(league.data.events);\n\t\telse {\n\t\t\tsetGames([]);\n\t\t}\n\t}, [league]);\n\n\tlet gameCards;\n\tif (games.length > 0)\n\t\tgameCards = games.map((game, key) => (\n\t\t\t<Row className=\"my-3\" key={game.id}>\n\t\t\t\t<GameCard\n\t\t\t\t\tpanelKey={key}\n\t\t\t\t\tgameData={game}\n\t\t\t\t\tsportName={league?.display_name}\n\t\t\t\t\tusers={users}\n\t\t\t\t\tcurrentUser={currentUser}\n\t\t\t\t\tcompleted={game.status.type.completed}\n\t\t\t\t/>\n\t\t\t</Row>\n\t\t));\n\telse if (selectedDate.value)\n\t\tgameCards = (\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h3>No Events Found</h3>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\telse gameCards = <Loading />;\n\n\t// console.log(\"games - selectedDate\", selectedDate);\n\t// console.log(\"games - league\", league);\n\t// console.log(\"games -  games\", games);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"rna-container\">\n\t\t\t\t<NotificationAlert ref={notificationAlertRef} />\n\t\t\t</div>\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<h1>{league.display_name}</h1>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col lg={11} xl={10} className=\"swiper-container\">\n\t\t\t\t\t\t<Swiper\n\t\t\t\t\t\t\tclassName=\"swiper-wrapper\"\n\t\t\t\t\t\t\tenabled={true}\n\t\t\t\t\t\t\tslidesPerView={1}\n\t\t\t\t\t\t\tspaceBetween={5}\n\t\t\t\t\t\t\tinitialSlide={swiperIndex}\n\t\t\t\t\t\t\tbreakpoints={{\n\t\t\t\t\t\t\t\t240: { slidesPerView: 3 },\n\t\t\t\t\t\t\t\t320: { slidesPerView: 5 },\n\t\t\t\t\t\t\t\t480: { slidesPerView: 7 },\n\t\t\t\t\t\t\t\t720: { slidesPerView: 9 },\n\t\t\t\t\t\t\t\t940: { slidesPerView: 10 },\n\t\t\t\t\t\t\t\t1200: { slidesPerView: 11 },\n\t\t\t\t\t\t\t\t1400: { slidesPerView: 14 },\n\t\t\t\t\t\t\t\t1600: { slidesPerView: 16 },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tnavigation={{\n\t\t\t\t\t\t\t\tnextEl: \".template-next\",\n\t\t\t\t\t\t\t\tprevEl: \".swiper-button-prev\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonSlideChange={(swiper) => setSwiperIndex(swiper.activeIndex)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{datesData().map((item, key) => {\n\t\t\t\t\t\t\t\t// console.log(\"games - datesData() - item\", item);\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<SwiperSlide\n\t\t\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\t\t\tclassName=\"\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tsetSelectedIndex(key);\n\t\t\t\t\t\t\t\t\t\t\tsetSelectedDate(item);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className={`${selectedIndex === key ? \"\" : \"text-muted\"} mb-1 py-0 ml-2`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.day}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Card border=\"secondary\" className=\"mr-1\" style={{ width: \"3rem\", height: \"4rem\" }}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedIndex === key ? \"text-danger\" : \"text-danger-muted\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t} text-center my-1 border-bottom`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.month}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p className={`${selectedIndex === key ? \"\" : \"text-muted\"} text-center my-1`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.date}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</SwiperSlide>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Swiper>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t{gameCards}\n\t\t\t</Container>\n\t\t</>\n\t);\n}\n\nexport async function getServerSideProps(context) {\n\tconst { req, res } = context;\n\tconst session = await getSession({ req });\n\tlet users = [];\n\tif (session) {\n\t\tusers = await prisma.user.findMany();\n\t\tusers = users\n\t\t\t.map((user) => {\n\t\t\t\tdelete user.password;\n\t\t\t\tdelete user.balance;\n\t\t\t\tdelete user.paypal;\n\t\t\t\tdelete user.emailVerified;\n\t\t\t\tdelete user.createdAt;\n\t\t\t\tdelete user.updatedAt;\n\n\t\t\t\treturn user;\n\t\t\t})\n\t\t\t.filter((user) => {\n\t\t\t\treturn user.id !== session.user.id;\n\t\t\t});\n\t}\n\n\treturn {\n\t\tprops: { query: context.query, users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}