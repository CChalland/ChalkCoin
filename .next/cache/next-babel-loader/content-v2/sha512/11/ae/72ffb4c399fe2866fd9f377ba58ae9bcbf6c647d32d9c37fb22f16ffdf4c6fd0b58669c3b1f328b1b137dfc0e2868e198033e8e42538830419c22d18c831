{"ast":null,"code":"import _defineProperty from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/colechalland/Projects/CryptoCurrency/BEToken/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Select, { components } from \"react-select\";\nimport { colourOptions } from \"../data\";\nvar EMOJIS = [\"👍\", \"🤙\", \"👏\", \"👌\", \"🙌\", \"✌️\", \"🖖\", \"👐\"];\n\nvar Control = function Control(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _props$selectProps = props.selectProps,\n      emoji = _props$selectProps.emoji,\n      onEmojiClick = _props$selectProps.onEmojiClick;\n  var style = {\n    cursor: \"pointer\"\n  };\n  return /*#__PURE__*/_jsxDEV(components.Control, _objectSpread(_objectSpread({}, props), {}, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      onMouseDown: onEmojiClick,\n      style: style,\n      children: emoji\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, _this), children]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Control;\n\nfunction Test(props) {\n  _s();\n\n  var _useState = useState(0),\n      clickCount = _useState[0],\n      setClickCount = _useState[1];\n\n  var onClick = function onClick(e) {\n    setClickCount(clickCount + 1);\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  var styles = {\n    control: function control(css) {\n      return _objectSpread(_objectSpread({}, css), {}, {\n        paddingLeft: \"1rem\"\n      });\n    }\n  };\n  var emoji = EMOJIS[clickCount % EMOJIS.length];\n  return /*#__PURE__*/_jsxDEV(Select, _objectSpread(_objectSpread({}, props), {}, {\n    emoji: emoji,\n    onEmojiClick: onClick,\n    components: {\n      Control: Control\n    },\n    isSearchable: true,\n    name: \"emoji\",\n    options: colourOptions,\n    styles: styles\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n} // import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\n// import Select from \"react-select\";\n// import prisma from \"../contexts/prisma\";\n// function Test(props) {\n// \tconst options = [\n// \t\t\"Inside Out\",\n// \t\t\"John Wick\",\n// \t\t\"Jurassic World\",\n// \t\t\"The Lord of the Rings\",\n// \t\t\"Pacific Rim\",\n// \t\t\"Pirates of the Caribbean\",\n// \t\t\"Planet of the Apes\",\n// \t\t\"Saw\",\n// \t\t\"Sicario\",\n// \t\t\"Zombies\",\n// \t];\n// \tconst [results, setResults] = useState(options);\n// \tconst [dropdownVisible, setDropdownVisible] = useState(false);\n// \tconst [singleSelect, setSingleSelect] = React.useState(\"\");\n// \tconst filterMethod = (options, query) => {\n// \t\treturn options.filter((option) => option.toLowerCase().includes(query.toLowerCase()));\n// \t};\n// \tconst searchList = (event) => {\n// \t\tconst results = filterMethod(options, event.target.value);\n// \t\tsetResults(results);\n// \t};\n// \tconst showDropdown = () => {\n// \t\tsetDropdownVisible(true);\n// \t};\n// \tconst hideDropdown = () => {\n// \t\tsetDropdownVisible(false);\n// \t};\n// \tconsole.log(props.users);\n// \treturn (\n// \t\t<Container>\n// \t\t\t<div className=\"autocomplete\">\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"text\"\n// \t\t\t\t\tplaceholder=\"Type to search list\"\n// \t\t\t\t\tonChange={searchList}\n// \t\t\t\t\tonFocus={() => showDropdown()}\n// \t\t\t\t\tonBlur={() => hideDropdown()}\n// \t\t\t\t/>\n// \t\t\t\t{dropdownVisible && (\n// \t\t\t\t\t<div className=\"autocomplete-dropdown\">\n// \t\t\t\t\t\t<ul className=\"autocomplete-search-results-list\">\n// \t\t\t\t\t\t\t{results.map((result) => (\n// \t\t\t\t\t\t\t\t<li className=\"autocomplete-search-result\" key={result}>\n// \t\t\t\t\t\t\t\t\t{result}\n// \t\t\t\t\t\t\t\t</li>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</ul>\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t</div>\n// \t\t\t<Select\n// \t\t\t\tclassName=\"react-select primary\"\n// \t\t\t\tclassNamePrefix=\"react-select\"\n// \t\t\t\tname=\"singleSelect\"\n// \t\t\t\tvalue={singleSelect}\n// \t\t\t\tonChange={(value) => setSingleSelect(value)}\n// \t\t\t\toptions={[\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvalue: \"\",\n// \t\t\t\t\t\tlabel: \"Single Option\",\n// \t\t\t\t\t\tisDisabled: true,\n// \t\t\t\t\t},\n// \t\t\t\t\t{ value: \"2\", label: \"Foobar\" },\n// \t\t\t\t\t{ value: \"3\", label: \"Is great\" },\n// \t\t\t\t]}\n// \t\t\t\tplaceholder=\"Search Username\"\n// \t\t\t/>\n// \t\t</Container>\n// \t);\n// }\n\n\n_s(Test, \"lP0RdHHRli8a2nfaqf9UO7BUSv0=\");\n\n_c2 = Test;\nexport var __N_SSP = true;\nexport default Test;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Control\");\n$RefreshReg$(_c2, \"Test\");","map":{"version":3,"sources":["/Users/colechalland/Projects/CryptoCurrency/BEToken/pages/test.js"],"names":["React","useState","Select","components","colourOptions","EMOJIS","Control","children","props","selectProps","emoji","onEmojiClick","style","cursor","Test","clickCount","setClickCount","onClick","e","preventDefault","stopPropagation","styles","control","css","paddingLeft","length"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;AACA,SAASC,aAAT,QAA8B,SAA9B;AAEA,IAAMC,MAAM,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAf;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZC,KAAY;;AAAA,2BACXA,KAAK,CAACC,WADK;AAAA,MACnCC,KADmC,sBACnCA,KADmC;AAAA,MAC5BC,YAD4B,sBAC5BA,YAD4B;AAE3C,MAAMC,KAAK,GAAG;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAd;AAEA,sBACC,QAAC,UAAD,CAAY,OAAZ,kCAAwBL,KAAxB;AAAA,4BACC;AAAM,MAAA,WAAW,EAAEG,YAAnB;AAAiC,MAAA,KAAK,EAAEC,KAAxC;AAAA,gBACEF;AADF;AAAA;AAAA;AAAA;AAAA,aADD,EAIEH,QAJF;AAAA;AAAA;AAAA;AAAA;AAAA,WADD;AAQA,CAZD;;KAAMD,O;;AAcN,SAASQ,IAAT,CAAcN,KAAd,EAAqB;AAAA;;AAAA,kBACgBP,QAAQ,CAAC,CAAD,CADxB;AAAA,MACbc,UADa;AAAA,MACDC,aADC;;AAGpB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,CAAD,EAAO;AACtBF,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACAG,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF;AACA,GAJD;;AAMA,MAAMC,MAAM,GAAG;AACdC,IAAAA,OAAO,EAAE,iBAACC,GAAD;AAAA,6CAAeA,GAAf;AAAoBC,QAAAA,WAAW,EAAE;AAAjC;AAAA;AADK,GAAf;AAIA,MAAMd,KAAK,GAAGL,MAAM,CAACU,UAAU,GAAGV,MAAM,CAACoB,MAArB,CAApB;AAEA,sBACC,QAAC,MAAD,kCACKjB,KADL;AAEC,IAAA,KAAK,EAAEE,KAFR;AAGC,IAAA,YAAY,EAAEO,OAHf;AAIC,IAAA,UAAU,EAAE;AAAEX,MAAAA,OAAO,EAAPA;AAAF,KAJb;AAKC,IAAA,YAAY,MALb;AAMC,IAAA,IAAI,EAAC,OANN;AAOC,IAAA,OAAO,EAAEF,aAPV;AAQC,IAAA,MAAM,EAAEiB;AART;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,C,CAED;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAjHSP,I;;MAAAA,I;;AAmHT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Select, { components } from \"react-select\";\nimport { colourOptions } from \"../data\";\n\nconst EMOJIS = [\"👍\", \"🤙\", \"👏\", \"👌\", \"🙌\", \"✌️\", \"🖖\", \"👐\"];\n\nconst Control = ({ children, ...props }) => {\n\tconst { emoji, onEmojiClick } = props.selectProps;\n\tconst style = { cursor: \"pointer\" };\n\n\treturn (\n\t\t<components.Control {...props}>\n\t\t\t<span onMouseDown={onEmojiClick} style={style}>\n\t\t\t\t{emoji}\n\t\t\t</span>\n\t\t\t{children}\n\t\t</components.Control>\n\t);\n};\n\nfunction Test(props) {\n\tconst [clickCount, setClickCount] = useState(0);\n\n\tconst onClick = (e) => {\n\t\tsetClickCount(clickCount + 1);\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t};\n\n\tconst styles = {\n\t\tcontrol: (css) => ({ ...css, paddingLeft: \"1rem\" }),\n\t};\n\n\tconst emoji = EMOJIS[clickCount % EMOJIS.length];\n\n\treturn (\n\t\t<Select\n\t\t\t{...props}\n\t\t\temoji={emoji}\n\t\t\tonEmojiClick={onClick}\n\t\t\tcomponents={{ Control }}\n\t\t\tisSearchable\n\t\t\tname=\"emoji\"\n\t\t\toptions={colourOptions}\n\t\t\tstyles={styles}\n\t\t/>\n\t);\n}\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import { Container, Col, Row, Button, Modal, Carousel, Tab, Nav, Card } from \"react-bootstrap\";\n// import Select from \"react-select\";\n// import prisma from \"../contexts/prisma\";\n\n// function Test(props) {\n// \tconst options = [\n// \t\t\"Inside Out\",\n// \t\t\"John Wick\",\n// \t\t\"Jurassic World\",\n// \t\t\"The Lord of the Rings\",\n// \t\t\"Pacific Rim\",\n// \t\t\"Pirates of the Caribbean\",\n// \t\t\"Planet of the Apes\",\n// \t\t\"Saw\",\n// \t\t\"Sicario\",\n// \t\t\"Zombies\",\n// \t];\n\n// \tconst [results, setResults] = useState(options);\n// \tconst [dropdownVisible, setDropdownVisible] = useState(false);\n// \tconst [singleSelect, setSingleSelect] = React.useState(\"\");\n\n// \tconst filterMethod = (options, query) => {\n// \t\treturn options.filter((option) => option.toLowerCase().includes(query.toLowerCase()));\n// \t};\n\n// \tconst searchList = (event) => {\n// \t\tconst results = filterMethod(options, event.target.value);\n// \t\tsetResults(results);\n// \t};\n\n// \tconst showDropdown = () => {\n// \t\tsetDropdownVisible(true);\n// \t};\n\n// \tconst hideDropdown = () => {\n// \t\tsetDropdownVisible(false);\n// \t};\n\n// \tconsole.log(props.users);\n// \treturn (\n// \t\t<Container>\n// \t\t\t<div className=\"autocomplete\">\n// \t\t\t\t<input\n// \t\t\t\t\ttype=\"text\"\n// \t\t\t\t\tplaceholder=\"Type to search list\"\n// \t\t\t\t\tonChange={searchList}\n// \t\t\t\t\tonFocus={() => showDropdown()}\n// \t\t\t\t\tonBlur={() => hideDropdown()}\n// \t\t\t\t/>\n// \t\t\t\t{dropdownVisible && (\n// \t\t\t\t\t<div className=\"autocomplete-dropdown\">\n// \t\t\t\t\t\t<ul className=\"autocomplete-search-results-list\">\n// \t\t\t\t\t\t\t{results.map((result) => (\n// \t\t\t\t\t\t\t\t<li className=\"autocomplete-search-result\" key={result}>\n// \t\t\t\t\t\t\t\t\t{result}\n// \t\t\t\t\t\t\t\t</li>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</ul>\n// \t\t\t\t\t</div>\n// \t\t\t\t)}\n// \t\t\t</div>\n\n// \t\t\t<Select\n// \t\t\t\tclassName=\"react-select primary\"\n// \t\t\t\tclassNamePrefix=\"react-select\"\n// \t\t\t\tname=\"singleSelect\"\n// \t\t\t\tvalue={singleSelect}\n// \t\t\t\tonChange={(value) => setSingleSelect(value)}\n// \t\t\t\toptions={[\n// \t\t\t\t\t{\n// \t\t\t\t\t\tvalue: \"\",\n// \t\t\t\t\t\tlabel: \"Single Option\",\n// \t\t\t\t\t\tisDisabled: true,\n// \t\t\t\t\t},\n// \t\t\t\t\t{ value: \"2\", label: \"Foobar\" },\n// \t\t\t\t\t{ value: \"3\", label: \"Is great\" },\n// \t\t\t\t]}\n// \t\t\t\tplaceholder=\"Search Username\"\n// \t\t\t/>\n// \t\t</Container>\n// \t);\n// }\n\nexport default Test;\n\nexport async function getServerSideProps(context) {\n\tlet users = await prisma.user.findMany();\n\tusers = users.map((user) => {\n\t\tdelete user.emailVerified;\n\t\tdelete user.createdAt;\n\t\tdelete user.updatedAt;\n\n\t\treturn user;\n\t});\n\n\treturn {\n\t\tprops: { users },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}